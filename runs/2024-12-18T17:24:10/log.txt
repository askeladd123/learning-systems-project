creating new run in runs/2024-12-18T17:24:10
reporting parameters in runs/2024-12-18T17:24:10/params.toml, values:
{'epochs': 150, 'number_of_clauses': 500, 't': 400, 's': 1.0220875518939276, 'depth': 7, 'hypervector_size': 512, 'hypervector_bits': 4, 'message_size': 512, 'message_bits': 2, 'double_hashing': True, 'max_included_literals': 32}
loading dataset from /home/ask/skole-learning-systems/attempt1/data/9x9_medium.csv
hashing dataset
saving dataset report to runs/2024-12-18T17:24:10/dataset.toml, content:
{'filename': '/home/ask/skole-learning-systems/attempt1/data/9x9_medium.csv', 'hash-blake2b': '890c4290fe333d809afccbce690e86f2361831e715feec14a02ec63e1cbd9351f4dc6a1fe73815345cc06dbea56d9f4eb6a110c33463f89e03daf36e8a7cace1', 'dimensions': 9, 'rows': 10000}
X_train shape: (9000,)
X_test shape: (1000,)
Creating training data
bytecode dump:
>          0	NOP(arg=None, lineno=72)
           2	RESUME(arg=0, lineno=72)
           4	LOAD_GLOBAL(arg=1, lineno=75)
          14	LOAD_FAST(arg=1, lineno=75)
          16	LOAD_ATTR(arg=2, lineno=75)
          36	LOAD_CONST(arg=1, lineno=75)
          38	BINARY_SUBSCR(arg=None, lineno=75)
          42	CALL(arg=1, lineno=75)
          50	GET_ITER(arg=None, lineno=75)
>         52	FOR_ITER(arg=50, lineno=75)
          56	STORE_FAST(arg=2, lineno=75)
          58	LOAD_GLOBAL(arg=1, lineno=76)
          68	LOAD_FAST(arg=0, lineno=76)
          70	LOAD_FAST(arg=0, lineno=76)
          72	LOAD_CONST(arg=2, lineno=76)
          74	BINARY_OP(arg=5, lineno=76)
          78	CALL(arg=2, lineno=76)
          86	GET_ITER(arg=None, lineno=76)
>         88	FOR_ITER(arg=30, lineno=76)
          92	STORE_FAST(arg=3, lineno=76)
          94	LOAD_FAST(arg=3, lineno=77)
          96	LOAD_CONST(arg=3, lineno=77)
          98	BINARY_OP(arg=2, lineno=77)
         102	STORE_FAST(arg=4, lineno=77)
         104	LOAD_FAST(arg=3, lineno=78)
         106	LOAD_CONST(arg=3, lineno=78)
         108	BINARY_OP(arg=6, lineno=78)
         112	STORE_FAST(arg=5, lineno=78)
         114	LOAD_FAST(arg=1, lineno=79)
         116	LOAD_FAST(arg=2, lineno=79)
         118	LOAD_FAST(arg=4, lineno=79)
         120	BUILD_TUPLE(arg=2, lineno=79)
         122	COPY(arg=2, lineno=79)
         124	COPY(arg=2, lineno=79)
         126	BINARY_SUBSCR(arg=None, lineno=79)
         130	LOAD_CONST(arg=4, lineno=79)
         132	LOAD_FAST(arg=5, lineno=79)
         134	BINARY_OP(arg=3, lineno=79)
         138	BINARY_OP(arg=20, lineno=79)
         142	SWAP(arg=3, lineno=79)
         144	SWAP(arg=2, lineno=79)
         146	STORE_SUBSCR(arg=None, lineno=79)
         150	JUMP_BACKWARD(arg=32, lineno=79)
>        152	END_FOR(arg=None, lineno=76)
         154	JUMP_BACKWARD(arg=52, lineno=76)
>        156	END_FOR(arg=None, lineno=75)
         158	RETURN_CONST(arg=0, lineno=75)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=72)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=72)
stack []
dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=75)
stack []
dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0']
dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$X14.2']
dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3']
dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3', '$const36.4']
dispatch pc=42, inst=CALL(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$38binary_subscr.5']
dispatch pc=50, inst=GET_ITER(arg=None, lineno=75)
stack ['$42call.6']
end state. edges=[Edge(pc=52, stack=('$50get_iter.7',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1)])
stack: ['$phi52.0']
state.pc_initial: State(pc_initial=52 nstack_initial=1)
dispatch pc=52, inst=FOR_ITER(arg=50, lineno=75)
stack ['$phi52.0']
end state. edges=[Edge(pc=156, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=156 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
stack: ['$phi156.0', '$phi156.1']
state.pc_initial: State(pc_initial=156 nstack_initial=2)
dispatch pc=156, inst=END_FOR(arg=None, lineno=75)
stack ['$phi156.0', '$phi156.1']
dispatch pc=158, inst=RETURN_CONST(arg=0, lineno=75)
stack []
end state. edges=[]
pending: deque([State(pc_initial=56 nstack_initial=2)])
stack: ['$phi56.0', '$phi56.1']
state.pc_initial: State(pc_initial=56 nstack_initial=2)
dispatch pc=56, inst=STORE_FAST(arg=2, lineno=75)
stack ['$phi56.0', '$phi56.1']
dispatch pc=58, inst=LOAD_GLOBAL(arg=1, lineno=76)
stack ['$phi56.0']
dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2']
dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4']
dispatch pc=72, inst=LOAD_CONST(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5']
dispatch pc=74, inst=BINARY_OP(arg=5, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5', '$const72.6']
dispatch pc=78, inst=CALL(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$binop_mul74.7']
dispatch pc=86, inst=GET_ITER(arg=None, lineno=76)
stack ['$phi56.0', '$78call.8']
end state. edges=[Edge(pc=88, stack=('$phi56.0', '$86get_iter.9'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=88 nstack_initial=2)])
stack: ['$phi88.0', '$phi88.1']
state.pc_initial: State(pc_initial=88 nstack_initial=2)
dispatch pc=88, inst=FOR_ITER(arg=30, lineno=76)
stack ['$phi88.0', '$phi88.1']
end state. edges=[Edge(pc=152, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0), Edge(pc=92, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=152 nstack_initial=3), State(pc_initial=92 nstack_initial=3)])
stack: ['$phi152.0', '$phi152.1', '$phi152.2']
state.pc_initial: State(pc_initial=152 nstack_initial=3)
dispatch pc=152, inst=END_FOR(arg=None, lineno=76)
stack ['$phi152.0', '$phi152.1', '$phi152.2']
dispatch pc=154, inst=JUMP_BACKWARD(arg=52, lineno=76)
stack ['$phi152.0']
end state. edges=[Edge(pc=52, stack=('$phi152.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=92 nstack_initial=3), State(pc_initial=52 nstack_initial=1)])
stack: ['$phi92.0', '$phi92.1', '$phi92.2']
state.pc_initial: State(pc_initial=92 nstack_initial=3)
dispatch pc=92, inst=STORE_FAST(arg=3, lineno=76)
stack ['$phi92.0', '$phi92.1', '$phi92.2']
dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1']
dispatch pc=96, inst=LOAD_CONST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3']
dispatch pc=98, inst=BINARY_OP(arg=2, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3', '$const96.4']
dispatch pc=102, inst=STORE_FAST(arg=4, lineno=77)
stack ['$phi92.0', '$phi92.1', '$binop_floordiv98.5']
dispatch pc=104, inst=LOAD_FAST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1']
dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6']
dispatch pc=108, inst=BINARY_OP(arg=6, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6', '$const106.7']
dispatch pc=112, inst=STORE_FAST(arg=5, lineno=78)
stack ['$phi92.0', '$phi92.1', '$binop_mod108.8']
dispatch pc=114, inst=LOAD_FAST(arg=1, lineno=79)
stack ['$phi92.0', '$phi92.1']
dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9']
dispatch pc=118, inst=LOAD_FAST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10']
dispatch pc=120, inst=BUILD_TUPLE(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10', '$chunk118.11']
dispatch pc=122, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12']
dispatch pc=124, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9']
dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9', '$120build_tuple.12']
dispatch pc=130, inst=LOAD_CONST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13']
dispatch pc=132, inst=LOAD_FAST(arg=5, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14']
dispatch pc=134, inst=BINARY_OP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14', '$pos132.15']
dispatch pc=138, inst=BINARY_OP(arg=20, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$binop_lshift134.16']
dispatch pc=142, inst=SWAP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$binop_ior138.17']
dispatch pc=144, inst=SWAP(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$120build_tuple.12', '$X114.9']
dispatch pc=146, inst=STORE_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$X114.9', '$120build_tuple.12']
dispatch pc=150, inst=JUMP_BACKWARD(arg=32, lineno=79)
stack ['$phi92.0', '$phi92.1']
end state. edges=[Edge(pc=88, stack=('$phi92.0', '$phi92.1'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1), State(pc_initial=88 nstack_initial=2)])
pending: deque([State(pc_initial=88 nstack_initial=2)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=88 nstack_initial=2): {'$phi88.1'},
             State(pc_initial=92 nstack_initial=3): {'$phi92.2'},
             State(pc_initial=152 nstack_initial=3): set(),
             State(pc_initial=156 nstack_initial=2): set()})
defmap: {'$phi152.2': State(pc_initial=88 nstack_initial=2),
 '$phi156.1': State(pc_initial=52 nstack_initial=1),
 '$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi88.1': State(pc_initial=56 nstack_initial=2),
 '$phi92.2': State(pc_initial=88 nstack_initial=2)}
phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi152.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi152.0',
                           State(pc_initial=152 nstack_initial=3))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi92.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi92.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=3))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
keep phismap: {'$phi52.0': {('$50get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))},
 '$phi88.1': {('$86get_iter.9', State(pc_initial=56 nstack_initial=2))},
 '$phi92.2': {('$88for_iter.3', State(pc_initial=88 nstack_initial=2))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.7'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'},
             State(pc_initial=56 nstack_initial=2): {'$phi88.1': '$86get_iter.9'},
             State(pc_initial=88 nstack_initial=2): {'$phi92.2': '$88for_iter.3'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$X14.2'}), (16, {'item': '$X14.2', 'res': '$16load_attr.3'}), (36, {'res': '$const36.4'}), (38, {'index': '$const36.4', 'target': '$16load_attr.3', 'res': '$38binary_subscr.5'}), (42, {'func': '$4load_global.0', 'args': ['$38binary_subscr.5'], 'kw_names': None, 'res': '$42call.6'}), (50, {'value': '$42call.6', 'res': '$50get_iter.7'})), outgoing_phis={'$phi52.0': '$50get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.7',)})
block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={156: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'idx': 0, 'res': '$58load_global.2'}), (68, {'res': '$hypervector_size68.4'}), (70, {'res': '$hypervector_size70.5'}), (72, {'res': '$const72.6'}), (74, {'op': '*', 'lhs': '$hypervector_size70.5', 'rhs': '$const72.6', 'res': '$binop_mul74.7'}), (78, {'func': '$58load_global.2', 'args': ['$hypervector_size68.4', '$binop_mul74.7'], 'kw_names': None, 'res': '$78call.8'}), (86, {'value': '$78call.8', 'res': '$86get_iter.9'})), outgoing_phis={'$phi88.1': '$86get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi56.0', '$86get_iter.9')})
block_infos State(pc_initial=88 nstack_initial=2):
AdaptBlockInfo(insts=((88, {'iterator': '$phi88.1', 'pair': '$88for_iter.2', 'indval': '$88for_iter.3', 'pred': '$88for_iter.4'}),), outgoing_phis={'$phi92.2': '$88for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi88.0', '$phi88.1', '$88for_iter.3'), 92: ('$phi88.0', '$phi88.1', '$88for_iter.3')})
block_infos State(pc_initial=92 nstack_initial=3):
AdaptBlockInfo(insts=((92, {'value': '$phi92.2'}), (94, {'res': '$k94.3'}), (96, {'res': '$const96.4'}), (98, {'op': '//', 'lhs': '$k94.3', 'rhs': '$const96.4', 'res': '$binop_floordiv98.5'}), (102, {'value': '$binop_floordiv98.5'}), (104, {'res': '$k104.6'}), (106, {'res': '$const106.7'}), (108, {'op': '%', 'lhs': '$k104.6', 'rhs': '$const106.7', 'res': '$binop_mod108.8'}), (112, {'value': '$binop_mod108.8'}), (114, {'res': '$X114.9'}), (116, {'res': '$i116.10'}), (118, {'res': '$chunk118.11'}), (120, {'items': ['$i116.10', '$chunk118.11'], 'res': '$120build_tuple.12'}), (126, {'index': '$120build_tuple.12', 'target': '$X114.9', 'res': '$126binary_subscr.13'}), (130, {'res': '$const130.14'}), (132, {'res': '$pos132.15'}), (134, {'op': '<<', 'lhs': '$const130.14', 'rhs': '$pos132.15', 'res': '$binop_lshift134.16'}), (138, {'op': '|=', 'lhs': '$126binary_subscr.13', 'rhs': '$binop_lshift134.16', 'res': '$binop_ior138.17'}), (146, {'target': '$X114.9', 'index': '$120build_tuple.12', 'value': '$binop_ior138.17'}), (150, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi92.0', '$phi92.1')})
block_infos State(pc_initial=152 nstack_initial=3):
AdaptBlockInfo(insts=((154, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi152.0',)})
block_infos State(pc_initial=156 nstack_initial=2):
AdaptBlockInfo(insts=((158, {'retval': '$const158.2', 'castval': '$158return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervector_size = arg(0, name=hypervector_size) ['hypervector_size']
    X = arg(1, name=X)                       ['X']
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $16load_attr.3 = getattr(value=X, attr=shape) ['$16load_attr.3', 'X']
    $const36.4 = const(int, 0)               ['$const36.4']
    $38binary_subscr.5 = getitem(value=$16load_attr.3, index=$const36.4, fn=<built-in function getitem>) ['$16load_attr.3', '$38binary_subscr.5', '$const36.4']
    $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None) ['$38binary_subscr.5', '$42call.6', '$4load_global.0']
    $50get_iter.7 = getiter(value=$42call.6) ['$42call.6', '$50get_iter.7']
    $phi52.0 = $50get_iter.7                 ['$50get_iter.7', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 156            ['$52for_iter.3']
label 56:
    i = $phi56.1                             ['$phi56.1', 'i']
    $58load_global.2 = global(range: <class 'range'>) ['$58load_global.2']
    $const72.6 = const(int, 2)               ['$const72.6']
    $binop_mul74.7 = hypervector_size * $const72.6 ['$binop_mul74.7', '$const72.6', 'hypervector_size']
    $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_global.2', '$78call.8', '$binop_mul74.7', 'hypervector_size']
    $86get_iter.9 = getiter(value=$78call.8) ['$78call.8', '$86get_iter.9']
    $phi88.1 = $86get_iter.9                 ['$86get_iter.9', '$phi88.1']
    jump 88                                  []
label 88:
    $88for_iter.2 = iternext(value=$phi88.1) ['$88for_iter.2', '$phi88.1']
    $88for_iter.3 = pair_first(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.3']
    $88for_iter.4 = pair_second(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.4']
    $phi92.2 = $88for_iter.3                 ['$88for_iter.3', '$phi92.2']
    branch $88for_iter.4, 92, 152            ['$88for_iter.4']
label 92:
    k = $phi92.2                             ['$phi92.2', 'k']
    $const96.4 = const(int, 32)              ['$const96.4']
    chunk = k // $const96.4                  ['$const96.4', 'chunk', 'k']
    $const106.7 = const(int, 32)             ['$const106.7']
    pos = k % $const106.7                    ['$const106.7', 'k', 'pos']
    $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)]) ['$120build_tuple.12', 'chunk', 'i']
    $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>) ['$120build_tuple.12', '$126binary_subscr.13', 'X']
    $const130.14 = const(int, 1)             ['$const130.14']
    $binop_lshift134.16 = $const130.14 << pos ['$binop_lshift134.16', '$const130.14', 'pos']
    $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined) ['$126binary_subscr.13', '$binop_ior138.17', '$binop_lshift134.16']
    X[$120build_tuple.12] = $binop_ior138.17 ['$120build_tuple.12', '$binop_ior138.17', 'X']
    jump 88                                  []
label 152:
    jump 52                                  []
label 156:
    $const158.2 = const(NoneType, None)      ['$const158.2']
    $158return_const.3 = cast(value=$const158.2) ['$158return_const.3', '$const158.2']
    return $158return_const.3                ['$158return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: hypervector_size = arg(0, name=hypervector_size)
on stmt: X = arg(1, name=X)
on stmt: $4load_global.0 = global(range: <class 'range'>)
on stmt: $16load_attr.3 = getattr(value=X, attr=shape)
on stmt: $const36.4 = const(int, 0)
on stmt: $38binary_subscr.5 = static_getitem(value=$16load_attr.3, index=0, index_var=$const36.4, fn=<built-in function getitem>)
on stmt: $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $50get_iter.7 = getiter(value=$42call.6)
on stmt: $phi52.0 = $50get_iter.7
on stmt: jump 52
==== SSA block analysis pass on 52
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: $52for_iter.1 = iternext(value=$phi52.0)
on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
on stmt: $phi56.1 = $52for_iter.2
on stmt: branch $52for_iter.3, 56, 156
==== SSA block analysis pass on 56
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: i = $phi56.1
on stmt: $58load_global.2 = global(range: <class 'range'>)
on stmt: $const72.6 = const(int, 2)
on stmt: $binop_mul74.7 = hypervector_size * $const72.6
on stmt: $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $86get_iter.9 = getiter(value=$78call.8)
on stmt: $phi88.1 = $86get_iter.9
on stmt: jump 88
==== SSA block analysis pass on 88
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: $88for_iter.2 = iternext(value=$phi88.1)
on stmt: $88for_iter.3 = pair_first(value=$88for_iter.2)
on stmt: $88for_iter.4 = pair_second(value=$88for_iter.2)
on stmt: $phi92.2 = $88for_iter.3
on stmt: branch $88for_iter.4, 92, 152
==== SSA block analysis pass on 92
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: k = $phi92.2
on stmt: $const96.4 = const(int, 32)
on stmt: chunk = k // $const96.4
on stmt: $const106.7 = const(int, 32)
on stmt: pos = k % $const106.7
on stmt: $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)])
on stmt: $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>)
on stmt: $const130.14 = const(int, 1)
on stmt: $binop_lshift134.16 = $const130.14 << pos
on stmt: $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$120build_tuple.12] = $binop_ior138.17
on stmt: jump 88
==== SSA block analysis pass on 152
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: jump 52
==== SSA block analysis pass on 156
Running <numba.core.ssa._GatherDefsHandler object at 0x730114dbf470>
on stmt: $const158.2 = const(NoneType, None)
on stmt: $158return_const.3 = cast(value=$const158.2)
on stmt: return $158return_const.3
defs defaultdict(<class 'list'>,
            {'$120build_tuple.12': [(<numba.core.ir.Assign object at 0x730114dda4b0>,
                                     92)],
             '$126binary_subscr.13': [(<numba.core.ir.Assign object at 0x730114dda600>,
                                       92)],
             '$158return_const.3': [(<numba.core.ir.Assign object at 0x730114dd94f0>,
                                     156)],
             '$16load_attr.3': [(<numba.core.ir.Assign object at 0x730114dd86e0>,
                                 0)],
             '$38binary_subscr.5': [(<numba.core.ir.Assign object at 0x730114ddae70>,
                                     0)],
             '$42call.6': [(<numba.core.ir.Assign object at 0x730114dd8aa0>,
                            0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x730114dd8110>,
                                  0)],
             '$50get_iter.7': [(<numba.core.ir.Assign object at 0x730114dd8b30>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x730114dd8ce0>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x730114dd8d70>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x730114dd8e00>,
                                52)],
             '$58load_global.2': [(<numba.core.ir.Assign object at 0x730114dd9010>,
                                   56)],
             '$78call.8': [(<numba.core.ir.Assign object at 0x730114dd93d0>,
                            56)],
             '$86get_iter.9': [(<numba.core.ir.Assign object at 0x730114dd9460>,
                                56)],
             '$88for_iter.2': [(<numba.core.ir.Assign object at 0x730114dd95e0>,
                                88)],
             '$88for_iter.3': [(<numba.core.ir.Assign object at 0x730114dd96a0>,
                                88)],
             '$88for_iter.4': [(<numba.core.ir.Assign object at 0x730114dd9790>,
                                88)],
             '$binop_ior138.17': [(<numba.core.ir.Assign object at 0x730114ddaa50>,
                                   92)],
             '$binop_lshift134.16': [(<numba.core.ir.Assign object at 0x730114dda930>,
                                      92)],
             '$binop_mul74.7': [(<numba.core.ir.Assign object at 0x730114dd92e0>,
                                 56)],
             '$const106.7': [(<numba.core.ir.Assign object at 0x730114dd9fd0>,
                              92)],
             '$const130.14': [(<numba.core.ir.Assign object at 0x730114dda6f0>,
                               92)],
             '$const158.2': [(<numba.core.ir.Assign object at 0x730114dda2d0>,
                              156)],
             '$const36.4': [(<numba.core.ir.Assign object at 0x730114dd82c0>,
                             0)],
             '$const72.6': [(<numba.core.ir.Assign object at 0x730114dd91f0>,
                             56)],
             '$const96.4': [(<numba.core.ir.Assign object at 0x730114dd9bb0>,
                             92)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x730114dd8260>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x730114dd8c50>,
                           52)],
             '$phi88.1': [(<numba.core.ir.Assign object at 0x730114dd9130>,
                           56)],
             '$phi92.2': [(<numba.core.ir.Assign object at 0x730114dd9820>,
                           88)],
             'X': [(<numba.core.ir.Assign object at 0x730114dd85c0>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x730114dd9d00>, 92)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x730114dd88c0>,
                                   0)],
             'i': [(<numba.core.ir.Assign object at 0x730114dd8f50>, 56)],
             'k': [(<numba.core.ir.Assign object at 0x730114dd99a0>, 92)],
             'pos': [(<numba.core.ir.Assign object at 0x730114dda120>, 92)]})
SSA violators <numba.core.utils.OrderedSet object at 0x73011c15ad50>
bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	RESUME(arg=0, lineno=121)
           4	LOAD_FAST(arg=0, lineno=124)
           6	LOAD_FAST(arg=4, lineno=124)
           8	LOAD_CONST(arg=0, lineno=124)
          10	LOAD_CONST(arg=0, lineno=124)
          12	BUILD_SLICE(arg=2, lineno=124)
          14	BUILD_TUPLE(arg=2, lineno=124)
          16	BINARY_SUBSCR(arg=None, lineno=124)
          20	GET_ITER(arg=None, lineno=124)
>         22	FOR_ITER(arg=71, lineno=124)
          26	STORE_FAST(arg=6, lineno=124)
          28	LOAD_FAST(arg=6, lineno=125)
          30	LOAD_CONST(arg=1, lineno=125)
          32	BINARY_OP(arg=2, lineno=125)
          36	STORE_FAST(arg=7, lineno=125)
          38	LOAD_FAST(arg=6, lineno=126)
          40	LOAD_CONST(arg=1, lineno=126)
          42	BINARY_OP(arg=6, lineno=126)
          46	STORE_FAST(arg=8, lineno=126)
          48	LOAD_FAST(arg=5, lineno=128)
          50	LOAD_FAST(arg=2, lineno=128)
          52	LOAD_FAST(arg=3, lineno=128)
          54	BINARY_OP(arg=0, lineno=128)
          58	LOAD_FAST(arg=7, lineno=128)
          60	BUILD_TUPLE(arg=2, lineno=128)
          62	COPY(arg=2, lineno=128)
          64	COPY(arg=2, lineno=128)
          66	BINARY_SUBSCR(arg=None, lineno=128)
          70	LOAD_CONST(arg=2, lineno=128)
          72	LOAD_FAST(arg=8, lineno=128)
          74	BINARY_OP(arg=3, lineno=128)
          78	BINARY_OP(arg=20, lineno=128)
          82	SWAP(arg=3, lineno=128)
          84	SWAP(arg=2, lineno=128)
          86	STORE_SUBSCR(arg=None, lineno=128)
          90	LOAD_FAST(arg=6, lineno=130)
          92	LOAD_FAST(arg=1, lineno=130)
          94	BINARY_OP(arg=0, lineno=130)
          98	LOAD_CONST(arg=1, lineno=130)
         100	BINARY_OP(arg=2, lineno=130)
         104	STORE_FAST(arg=7, lineno=130)
         106	LOAD_FAST(arg=6, lineno=131)
         108	LOAD_FAST(arg=1, lineno=131)
         110	BINARY_OP(arg=0, lineno=131)
         114	LOAD_CONST(arg=1, lineno=131)
         116	BINARY_OP(arg=6, lineno=131)
         120	STORE_FAST(arg=8, lineno=131)
         122	LOAD_FAST(arg=5, lineno=132)
         124	LOAD_FAST(arg=2, lineno=132)
         126	LOAD_FAST(arg=3, lineno=132)
         128	BINARY_OP(arg=0, lineno=132)
         132	LOAD_FAST(arg=7, lineno=132)
         134	BUILD_TUPLE(arg=2, lineno=132)
         136	COPY(arg=2, lineno=132)
         138	COPY(arg=2, lineno=132)
         140	BINARY_SUBSCR(arg=None, lineno=132)
         144	LOAD_CONST(arg=2, lineno=132)
         146	LOAD_FAST(arg=8, lineno=132)
         148	BINARY_OP(arg=3, lineno=132)
         152	UNARY_INVERT(arg=None, lineno=132)
         154	BINARY_OP(arg=14, lineno=132)
         158	SWAP(arg=3, lineno=132)
         160	SWAP(arg=2, lineno=132)
         162	STORE_SUBSCR(arg=None, lineno=132)
         166	JUMP_BACKWARD(arg=73, lineno=132)
>        168	END_FOR(arg=None, lineno=124)
         170	RETURN_CONST(arg=0, lineno=124)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=121)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=121)
stack []
dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=124)
stack []
dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=124)
stack ['$hypervectors4.0']
dispatch pc=8, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1']
dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2']
dispatch pc=12, inst=BUILD_SLICE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2', '$const10.3']
dispatch pc=14, inst=BUILD_TUPLE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$12build_slice.5']
dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=124)
stack ['$hypervectors4.0', '$14build_tuple.6']
dispatch pc=20, inst=GET_ITER(arg=None, lineno=124)
stack ['$16binary_subscr.7']
end state. edges=[Edge(pc=22, stack=('$20get_iter.8',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
stack: ['$phi22.0']
state.pc_initial: State(pc_initial=22 nstack_initial=1)
dispatch pc=22, inst=FOR_ITER(arg=71, lineno=124)
stack ['$phi22.0']
end state. edges=[Edge(pc=168, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0), Edge(pc=26, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=168 nstack_initial=2), State(pc_initial=26 nstack_initial=2)])
stack: ['$phi168.0', '$phi168.1']
state.pc_initial: State(pc_initial=168 nstack_initial=2)
dispatch pc=168, inst=END_FOR(arg=None, lineno=124)
stack ['$phi168.0', '$phi168.1']
dispatch pc=170, inst=RETURN_CONST(arg=0, lineno=124)
stack []
end state. edges=[]
pending: deque([State(pc_initial=26 nstack_initial=2)])
stack: ['$phi26.0', '$phi26.1']
state.pc_initial: State(pc_initial=26 nstack_initial=2)
dispatch pc=26, inst=STORE_FAST(arg=6, lineno=124)
stack ['$phi26.0', '$phi26.1']
dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=125)
stack ['$phi26.0']
dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=125)
stack ['$phi26.0', '$k28.2']
dispatch pc=32, inst=BINARY_OP(arg=2, lineno=125)
stack ['$phi26.0', '$k28.2', '$const30.3']
dispatch pc=36, inst=STORE_FAST(arg=7, lineno=125)
stack ['$phi26.0', '$binop_floordiv32.4']
dispatch pc=38, inst=LOAD_FAST(arg=6, lineno=126)
stack ['$phi26.0']
dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=126)
stack ['$phi26.0', '$k38.5']
dispatch pc=42, inst=BINARY_OP(arg=6, lineno=126)
stack ['$phi26.0', '$k38.5', '$const40.6']
dispatch pc=46, inst=STORE_FAST(arg=8, lineno=126)
stack ['$phi26.0', '$binop_mod42.7']
dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=128)
stack ['$phi26.0']
dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8']
dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9']
dispatch pc=54, inst=BINARY_OP(arg=0, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9', '$node52.10']
dispatch pc=58, inst=LOAD_FAST(arg=7, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11']
dispatch pc=60, inst=BUILD_TUPLE(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11', '$chunk58.12']
dispatch pc=62, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13']
dispatch pc=64, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8']
dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8', '$60build_tuple.13']
dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14']
dispatch pc=72, inst=LOAD_FAST(arg=8, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15']
dispatch pc=74, inst=BINARY_OP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15', '$pos72.16']
dispatch pc=78, inst=BINARY_OP(arg=20, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$binop_lshift74.17']
dispatch pc=82, inst=SWAP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$binop_ior78.18']
dispatch pc=84, inst=SWAP(arg=2, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$60build_tuple.13', '$X48.8']
dispatch pc=86, inst=STORE_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$X48.8', '$60build_tuple.13']
dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=130)
stack ['$phi26.0']
dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=130)
stack ['$phi26.0', '$k90.19']
dispatch pc=94, inst=BINARY_OP(arg=0, lineno=130)
stack ['$phi26.0', '$k90.19', '$hypervector_size92.20']
dispatch pc=98, inst=LOAD_CONST(arg=1, lineno=130)
stack ['$phi26.0', '$binop_add94.21']
dispatch pc=100, inst=BINARY_OP(arg=2, lineno=130)
stack ['$phi26.0', '$binop_add94.21', '$const98.22']
dispatch pc=104, inst=STORE_FAST(arg=7, lineno=130)
stack ['$phi26.0', '$binop_floordiv100.23']
dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=131)
stack ['$phi26.0']
dispatch pc=108, inst=LOAD_FAST(arg=1, lineno=131)
stack ['$phi26.0', '$k106.24']
dispatch pc=110, inst=BINARY_OP(arg=0, lineno=131)
stack ['$phi26.0', '$k106.24', '$hypervector_size108.25']
dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=131)
stack ['$phi26.0', '$binop_add110.26']
dispatch pc=116, inst=BINARY_OP(arg=6, lineno=131)
stack ['$phi26.0', '$binop_add110.26', '$const114.27']
dispatch pc=120, inst=STORE_FAST(arg=8, lineno=131)
stack ['$phi26.0', '$binop_mod116.28']
dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=132)
stack ['$phi26.0']
dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29']
dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30']
dispatch pc=128, inst=BINARY_OP(arg=0, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30', '$node126.31']
dispatch pc=132, inst=LOAD_FAST(arg=7, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32']
dispatch pc=134, inst=BUILD_TUPLE(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32', '$chunk132.33']
dispatch pc=136, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34']
dispatch pc=138, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29']
dispatch pc=140, inst=BINARY_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29', '$134build_tuple.34']
dispatch pc=144, inst=LOAD_CONST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35']
dispatch pc=146, inst=LOAD_FAST(arg=8, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36']
dispatch pc=148, inst=BINARY_OP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36', '$pos146.37']
dispatch pc=152, inst=UNARY_INVERT(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$binop_lshift148.38']
dispatch pc=154, inst=BINARY_OP(arg=14, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$152unary_invert.39']
dispatch pc=158, inst=SWAP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$binop_iand154.40']
dispatch pc=160, inst=SWAP(arg=2, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$134build_tuple.34', '$X122.29']
dispatch pc=162, inst=STORE_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$X122.29', '$134build_tuple.34']
dispatch pc=166, inst=JUMP_BACKWARD(arg=73, lineno=132)
stack ['$phi26.0']
end state. edges=[Edge(pc=22, stack=('$phi26.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=1): {'$phi22.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=168 nstack_initial=2): set()})
defmap: {'$phi168.1': State(pc_initial=22 nstack_initial=1),
 '$phi22.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=22 nstack_initial=1)}
phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
keep phismap: {'$phi22.0': {('$20get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$22for_iter.2', State(pc_initial=22 nstack_initial=1))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi22.0': '$20get_iter.8'},
             State(pc_initial=22 nstack_initial=1): {'$phi26.1': '$22for_iter.2'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$hypervectors4.0'}), (6, {'res': '$symbol6.1'}), (8, {'res': '$const8.2'}), (10, {'res': '$const10.3'}), (12, {'start': '$const8.2', 'stop': '$const10.3', 'step': None, 'res': '$12build_slice.5', 'slicevar': '$12build_slice.4'}), (14, {'items': ['$symbol6.1', '$12build_slice.5'], 'res': '$14build_tuple.6'}), (16, {'index': '$14build_tuple.6', 'target': '$hypervectors4.0', 'res': '$16binary_subscr.7'}), (20, {'value': '$16binary_subscr.7', 'res': '$20get_iter.8'})), outgoing_phis={'$phi22.0': '$20get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$20get_iter.8',)})
block_infos State(pc_initial=22 nstack_initial=1):
AdaptBlockInfo(insts=((22, {'iterator': '$phi22.0', 'pair': '$22for_iter.1', 'indval': '$22for_iter.2', 'pred': '$22for_iter.3'}),), outgoing_phis={'$phi26.1': '$22for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: ('$phi22.0', '$22for_iter.2'), 26: ('$phi22.0', '$22for_iter.2')})
block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$k28.2'}), (30, {'res': '$const30.3'}), (32, {'op': '//', 'lhs': '$k28.2', 'rhs': '$const30.3', 'res': '$binop_floordiv32.4'}), (36, {'value': '$binop_floordiv32.4'}), (38, {'res': '$k38.5'}), (40, {'res': '$const40.6'}), (42, {'op': '%', 'lhs': '$k38.5', 'rhs': '$const40.6', 'res': '$binop_mod42.7'}), (46, {'value': '$binop_mod42.7'}), (48, {'res': '$X48.8'}), (50, {'res': '$graph_index50.9'}), (52, {'res': '$node52.10'}), (54, {'op': '+', 'lhs': '$graph_index50.9', 'rhs': '$node52.10', 'res': '$binop_add54.11'}), (58, {'res': '$chunk58.12'}), (60, {'items': ['$binop_add54.11', '$chunk58.12'], 'res': '$60build_tuple.13'}), (66, {'index': '$60build_tuple.13', 'target': '$X48.8', 'res': '$66binary_subscr.14'}), (70, {'res': '$const70.15'}), (72, {'res': '$pos72.16'}), (74, {'op': '<<', 'lhs': '$const70.15', 'rhs': '$pos72.16', 'res': '$binop_lshift74.17'}), (78, {'op': '|=', 'lhs': '$66binary_subscr.14', 'rhs': '$binop_lshift74.17', 'res': '$binop_ior78.18'}), (86, {'target': '$X48.8', 'index': '$60build_tuple.13', 'value': '$binop_ior78.18'}), (90, {'res': '$k90.19'}), (92, {'res': '$hypervector_size92.20'}), (94, {'op': '+', 'lhs': '$k90.19', 'rhs': '$hypervector_size92.20', 'res': '$binop_add94.21'}), (98, {'res': '$const98.22'}), (100, {'op': '//', 'lhs': '$binop_add94.21', 'rhs': '$const98.22', 'res': '$binop_floordiv100.23'}), (104, {'value': '$binop_floordiv100.23'}), (106, {'res': '$k106.24'}), (108, {'res': '$hypervector_size108.25'}), (110, {'op': '+', 'lhs': '$k106.24', 'rhs': '$hypervector_size108.25', 'res': '$binop_add110.26'}), (114, {'res': '$const114.27'}), (116, {'op': '%', 'lhs': '$binop_add110.26', 'rhs': '$const114.27', 'res': '$binop_mod116.28'}), (120, {'value': '$binop_mod116.28'}), (122, {'res': '$X122.29'}), (124, {'res': '$graph_index124.30'}), (126, {'res': '$node126.31'}), (128, {'op': '+', 'lhs': '$graph_index124.30', 'rhs': '$node126.31', 'res': '$binop_add128.32'}), (132, {'res': '$chunk132.33'}), (134, {'items': ['$binop_add128.32', '$chunk132.33'], 'res': '$134build_tuple.34'}), (140, {'index': '$134build_tuple.34', 'target': '$X122.29', 'res': '$140binary_subscr.35'}), (144, {'res': '$const144.36'}), (146, {'res': '$pos146.37'}), (148, {'op': '<<', 'lhs': '$const144.36', 'rhs': '$pos146.37', 'res': '$binop_lshift148.38'}), (152, {'value': '$binop_lshift148.38', 'res': '$152unary_invert.39'}), (154, {'op': '&=', 'lhs': '$140binary_subscr.35', 'rhs': '$152unary_invert.39', 'res': '$binop_iand154.40'}), (162, {'target': '$X122.29', 'index': '$134build_tuple.34', 'value': '$binop_iand154.40'}), (166, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$phi26.0',)})
block_infos State(pc_initial=168 nstack_initial=2):
AdaptBlockInfo(insts=((170, {'retval': '$const170.2', 'castval': '$170return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervectors = arg(0, name=hypervectors) ['hypervectors']
    hypervector_size = arg(1, name=hypervector_size) ['hypervector_size']
    graph_index = arg(2, name=graph_index)   ['graph_index']
    node = arg(3, name=node)                 ['node']
    symbol = arg(4, name=symbol)             ['symbol']
    X = arg(5, name=X)                       ['X']
    $const8.2 = const(NoneType, None)        ['$const8.2']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12build_slice.4 = global(slice: <class 'slice'>) ['$12build_slice.4']
    $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None) ['$12build_slice.4', '$12build_slice.5', '$const10.3', '$const8.2']
    $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)]) ['$12build_slice.5', '$14build_tuple.6', 'symbol']
    $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>) ['$14build_tuple.6', '$16binary_subscr.7', 'hypervectors']
    $20get_iter.8 = getiter(value=$16binary_subscr.7) ['$16binary_subscr.7', '$20get_iter.8']
    $phi22.0 = $20get_iter.8                 ['$20get_iter.8', '$phi22.0']
    jump 22                                  []
label 22:
    $22for_iter.1 = iternext(value=$phi22.0) ['$22for_iter.1', '$phi22.0']
    $22for_iter.2 = pair_first(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.2']
    $22for_iter.3 = pair_second(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.3']
    $phi26.1 = $22for_iter.2                 ['$22for_iter.2', '$phi26.1']
    branch $22for_iter.3, 26, 168            ['$22for_iter.3']
label 26:
    k = $phi26.1                             ['$phi26.1', 'k']
    $const30.3 = const(int, 32)              ['$const30.3']
    chunk = k // $const30.3                  ['$const30.3', 'chunk', 'k']
    $const40.6 = const(int, 32)              ['$const40.6']
    pos = k % $const40.6                     ['$const40.6', 'k', 'pos']
    $binop_add54.11 = graph_index + node     ['$binop_add54.11', 'graph_index', 'node']
    $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)]) ['$60build_tuple.13', '$binop_add54.11', 'chunk']
    $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>) ['$60build_tuple.13', '$66binary_subscr.14', 'X']
    $const70.15 = const(int, 1)              ['$const70.15']
    $binop_lshift74.17 = $const70.15 << pos  ['$binop_lshift74.17', '$const70.15', 'pos']
    $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined) ['$66binary_subscr.14', '$binop_ior78.18', '$binop_lshift74.17']
    X[$60build_tuple.13] = $binop_ior78.18   ['$60build_tuple.13', '$binop_ior78.18', 'X']
    $binop_add94.21 = k + hypervector_size   ['$binop_add94.21', 'hypervector_size', 'k']
    $const98.22 = const(int, 32)             ['$const98.22']
    chunk = $binop_add94.21 // $const98.22   ['$binop_add94.21', '$const98.22', 'chunk']
    $binop_add110.26 = k + hypervector_size  ['$binop_add110.26', 'hypervector_size', 'k']
    $const114.27 = const(int, 32)            ['$const114.27']
    pos = $binop_add110.26 % $const114.27    ['$binop_add110.26', '$const114.27', 'pos']
    $binop_add128.32 = graph_index + node    ['$binop_add128.32', 'graph_index', 'node']
    $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)]) ['$134build_tuple.34', '$binop_add128.32', 'chunk']
    $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>) ['$134build_tuple.34', '$140binary_subscr.35', 'X']
    $const144.36 = const(int, 1)             ['$const144.36']
    $binop_lshift148.38 = $const144.36 << pos ['$binop_lshift148.38', '$const144.36', 'pos']
    $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38) ['$152unary_invert.39', '$binop_lshift148.38']
    $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined) ['$140binary_subscr.35', '$152unary_invert.39', '$binop_iand154.40']
    X[$134build_tuple.34] = $binop_iand154.40 ['$134build_tuple.34', '$binop_iand154.40', 'X']
    jump 22                                  []
label 168:
    $const170.2 = const(NoneType, None)      ['$const170.2']
    $170return_const.3 = cast(value=$const170.2) ['$170return_const.3', '$const170.2']
    return $170return_const.3                ['$170return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x730114b3b230>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block analysis pass on 22
Running <numba.core.ssa._GatherDefsHandler object at 0x730114b3b230>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block analysis pass on 26
Running <numba.core.ssa._GatherDefsHandler object at 0x730114b3b230>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block analysis pass on 168
Running <numba.core.ssa._GatherDefsHandler object at 0x730114b3b230>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
defs defaultdict(<class 'list'>,
            {'$12build_slice.4': [(<numba.core.ir.Assign object at 0x730114b603b0>,
                                   0)],
             '$12build_slice.5': [(<numba.core.ir.Assign object at 0x730114b604a0>,
                                   0)],
             '$134build_tuple.34': [(<numba.core.ir.Assign object at 0x730114b636b0>,
                                     26)],
             '$140binary_subscr.35': [(<numba.core.ir.Assign object at 0x730114b63830>,
                                       26)],
             '$14build_tuple.6': [(<numba.core.ir.Assign object at 0x730114b605c0>,
                                   0)],
             '$152unary_invert.39': [(<numba.core.ir.Assign object at 0x730114b63cb0>,
                                      26)],
             '$16binary_subscr.7': [(<numba.core.ir.Assign object at 0x730114b60710>,
                                     0)],
             '$170return_const.3': [(<numba.core.ir.Assign object at 0x730114b61a30>,
                                     168)],
             '$20get_iter.8': [(<numba.core.ir.Assign object at 0x730114b60830>,
                                0)],
             '$22for_iter.1': [(<numba.core.ir.Assign object at 0x730114b60a10>,
                                22)],
             '$22for_iter.2': [(<numba.core.ir.Assign object at 0x730114b60b30>,
                                22)],
             '$22for_iter.3': [(<numba.core.ir.Assign object at 0x730114b60c50>,
                                22)],
             '$60build_tuple.13': [(<numba.core.ir.Assign object at 0x730114b61d90>,
                                    26)],
             '$66binary_subscr.14': [(<numba.core.ir.Assign object at 0x730114b61f10>,
                                      26)],
             '$binop_add110.26': [(<numba.core.ir.Assign object at 0x730114b62d80>,
                                   26)],
             '$binop_add128.32': [(<numba.core.ir.Assign object at 0x730114b634a0>,
                                   26)],
             '$binop_add54.11': [(<numba.core.ir.Assign object at 0x730114b61b80>,
                                  26)],
             '$binop_add94.21': [(<numba.core.ir.Assign object at 0x730114b62750>,
                                  26)],
             '$binop_iand154.40': [(<numba.core.ir.Assign object at 0x730114b63e30>,
                                    26)],
             '$binop_ior78.18': [(<numba.core.ir.Assign object at 0x730114b623c0>,
                                  26)],
             '$binop_lshift148.38': [(<numba.core.ir.Assign object at 0x730114b63b90>,
                                      26)],
             '$binop_lshift74.17': [(<numba.core.ir.Assign object at 0x730114b62270>,
                                     26)],
             '$const10.3': [(<numba.core.ir.Assign object at 0x730114b60290>,
                             0)],
             '$const114.27': [(<numba.core.ir.Assign object at 0x730114b62e70>,
                               26)],
             '$const144.36': [(<numba.core.ir.Assign object at 0x730114b63920>,
                               26)],
             '$const170.2': [(<numba.core.ir.Assign object at 0x730114b61760>,
                              168)],
             '$const30.3': [(<numba.core.ir.Assign object at 0x730114b610a0>,
                             26)],
             '$const40.6': [(<numba.core.ir.Assign object at 0x730114b614f0>,
                             26)],
             '$const70.15': [(<numba.core.ir.Assign object at 0x730114b62000>,
                              26)],
             '$const8.2': [(<numba.core.ir.Assign object at 0x730114b60170>,
                            0)],
             '$const98.22': [(<numba.core.ir.Assign object at 0x730114b62840>,
                              26)],
             '$phi22.0': [(<numba.core.ir.Assign object at 0x730114b3b5f0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x730114b60ce0>,
                           22)],
             'X': [(<numba.core.ir.Assign object at 0x730114b3be00>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x730114b61220>, 26),
                       (<numba.core.ir.Assign object at 0x730114b629c0>, 26)],
             'graph_index': [(<numba.core.ir.Assign object at 0x730114b3bb30>,
                              0)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x730114b3b920>,
                                   0)],
             'hypervectors': [(<numba.core.ir.Assign object at 0x730114b3b9b0>,
                               0)],
             'k': [(<numba.core.ir.Assign object at 0x730114b60e90>, 26)],
             'node': [(<numba.core.ir.Assign object at 0x730114b3bc20>, 0)],
             'pos': [(<numba.core.ir.Assign object at 0x730114b61670>, 26),
                     (<numba.core.ir.Assign object at 0x730114b62ff0>, 26)],
             'symbol': [(<numba.core.ir.Assign object at 0x730114b3bd10>, 0)]})
SSA violators <numba.core.utils.OrderedSet object at 0x730114b3b230>
Fix SSA violator on var chunk
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b050>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b050>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b050>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
first assign: chunk
replaced with: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
replaced with: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b050>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x730114b3b0b0>,
                  <numba.core.ir.Assign object at 0x730114b63170>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b050>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b050>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b050>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
replaced with: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b050>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Fix SSA violator on var pos
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b830>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b830>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b830>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
first assign: pos
replaced with: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
replaced with: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x730114b3b830>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x730114b63050>,
                  <numba.core.ir.Assign object at 0x730114b63140>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b830>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b830>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b830>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
find_def var='pos' stmt=$binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
find_def var='pos' stmt=$binop_lshift148.38 = $const144.36 << pos
replaced with: $binop_lshift148.38 = $const144.36 << pos.1
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x730114b3b830>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Creating test data
Epoch#1 -- Accuracy train: 0.5388888888888889 -- Accuracy test: 0.527 
Epoch#2 -- Accuracy train: 0.5351111111111111 -- Accuracy test: 0.528 
Epoch#3 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#4 -- Accuracy train: 0.5535555555555556 -- Accuracy test: 0.549 
Epoch#5 -- Accuracy train: 0.5468888888888889 -- Accuracy test: 0.537 
Epoch#6 -- Accuracy train: 0.48533333333333334 -- Accuracy test: 0.458 
Epoch#7 -- Accuracy train: 0.5416666666666666 -- Accuracy test: 0.529 
Epoch#8 -- Accuracy train: 0.5421111111111111 -- Accuracy test: 0.531 
Epoch#9 -- Accuracy train: 0.543 -- Accuracy test: 0.53 
Epoch#10 -- Accuracy train: 0.5207777777777778 -- Accuracy test: 0.517 
Epoch#11 -- Accuracy train: 0.541 -- Accuracy test: 0.529 
Epoch#12 -- Accuracy train: 0.5448888888888889 -- Accuracy test: 0.53 
Epoch#13 -- Accuracy train: 0.5394444444444444 -- Accuracy test: 0.529 
Epoch#14 -- Accuracy train: 0.5444444444444444 -- Accuracy test: 0.532 
Epoch#15 -- Accuracy train: 0.5463333333333333 -- Accuracy test: 0.543 
Epoch#16 -- Accuracy train: 0.5417777777777778 -- Accuracy test: 0.53 
Epoch#17 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#18 -- Accuracy train: 0.5463333333333333 -- Accuracy test: 0.535 
Epoch#19 -- Accuracy train: 0.5453333333333333 -- Accuracy test: 0.533 
Epoch#20 -- Accuracy train: 0.5477777777777778 -- Accuracy test: 0.534 
Epoch#21 -- Accuracy train: 0.5571111111111111 -- Accuracy test: 0.542 
Epoch#22 -- Accuracy train: 0.5421111111111111 -- Accuracy test: 0.528 
Epoch#23 -- Accuracy train: 0.5531111111111111 -- Accuracy test: 0.551 
Epoch#24 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#25 -- Accuracy train: 0.5517777777777778 -- Accuracy test: 0.539 
Epoch#26 -- Accuracy train: 0.5458888888888889 -- Accuracy test: 0.553 
Epoch#27 -- Accuracy train: 0.5407777777777778 -- Accuracy test: 0.528 
Epoch#28 -- Accuracy train: 0.5574444444444444 -- Accuracy test: 0.537 
Epoch#29 -- Accuracy train: 0.5478888888888889 -- Accuracy test: 0.53 
Epoch#30 -- Accuracy train: 0.5091111111111111 -- Accuracy test: 0.484 
Epoch#31 -- Accuracy train: 0.5466666666666666 -- Accuracy test: 0.534 
Epoch#32 -- Accuracy train: 0.5515555555555556 -- Accuracy test: 0.549 
Epoch#33 -- Accuracy train: 0.5544444444444444 -- Accuracy test: 0.55 
Epoch#34 -- Accuracy train: 0.5495555555555556 -- Accuracy test: 0.536 
Epoch#35 -- Accuracy train: 0.5416666666666666 -- Accuracy test: 0.528 
Epoch#36 -- Accuracy train: 0.5417777777777778 -- Accuracy test: 0.529 
Epoch#37 -- Accuracy train: 0.5425555555555556 -- Accuracy test: 0.529 
Epoch#38 -- Accuracy train: 0.5482222222222223 -- Accuracy test: 0.538 
Epoch#39 -- Accuracy train: 0.5547777777777778 -- Accuracy test: 0.54 
Epoch#40 -- Accuracy train: 0.5544444444444444 -- Accuracy test: 0.544 
Epoch#41 -- Accuracy train: 0.5442222222222223 -- Accuracy test: 0.535 
Epoch#42 -- Accuracy train: 0.5443333333333333 -- Accuracy test: 0.531 
Epoch#43 -- Accuracy train: 0.5583333333333333 -- Accuracy test: 0.562 
Epoch#44 -- Accuracy train: 0.5412222222222223 -- Accuracy test: 0.528 
Epoch#45 -- Accuracy train: 0.5521111111111111 -- Accuracy test: 0.526 
Epoch#46 -- Accuracy train: 0.5401111111111111 -- Accuracy test: 0.529 
Epoch#47 -- Accuracy train: 0.5481111111111111 -- Accuracy test: 0.541 
Epoch#48 -- Accuracy train: 0.5588888888888889 -- Accuracy test: 0.564 
Epoch#49 -- Accuracy train: 0.5441111111111111 -- Accuracy test: 0.538 
Epoch#50 -- Accuracy train: 0.5473333333333333 -- Accuracy test: 0.53 
Epoch#51 -- Accuracy train: 0.5433333333333333 -- Accuracy test: 0.528 
Epoch#52 -- Accuracy train: 0.5461111111111111 -- Accuracy test: 0.538 
Epoch#53 -- Accuracy train: 0.5533333333333333 -- Accuracy test: 0.542 
Epoch#54 -- Accuracy train: 0.55 -- Accuracy test: 0.531 
Epoch#55 -- Accuracy train: 0.5395555555555556 -- Accuracy test: 0.522 
Epoch#56 -- Accuracy train: 0.547 -- Accuracy test: 0.535 
Epoch#57 -- Accuracy train: 0.5491111111111111 -- Accuracy test: 0.536 
Epoch#58 -- Accuracy train: 0.5527777777777778 -- Accuracy test: 0.553 
Epoch#59 -- Accuracy train: 0.5456666666666666 -- Accuracy test: 0.532 
Epoch#60 -- Accuracy train: 0.5415555555555556 -- Accuracy test: 0.527 
Epoch#61 -- Accuracy train: 0.5388888888888889 -- Accuracy test: 0.534 
Epoch#62 -- Accuracy train: 0.5403333333333333 -- Accuracy test: 0.533 
Epoch#63 -- Accuracy train: 0.5468888888888889 -- Accuracy test: 0.565 
Epoch#64 -- Accuracy train: 0.5541111111111111 -- Accuracy test: 0.554 
Epoch#65 -- Accuracy train: 0.5416666666666666 -- Accuracy test: 0.528 
Epoch#66 -- Accuracy train: 0.5426666666666666 -- Accuracy test: 0.541 
Epoch#67 -- Accuracy train: 0.5447777777777778 -- Accuracy test: 0.533 
Epoch#68 -- Accuracy train: 0.5461111111111111 -- Accuracy test: 0.548 
Epoch#69 -- Accuracy train: 0.5562222222222222 -- Accuracy test: 0.544 
Epoch#70 -- Accuracy train: 0.5532222222222222 -- Accuracy test: 0.595 
Epoch#71 -- Accuracy train: 0.5486666666666666 -- Accuracy test: 0.534 
Epoch#72 -- Accuracy train: 0.5476666666666666 -- Accuracy test: 0.532 
Epoch#73 -- Accuracy train: 0.5417777777777778 -- Accuracy test: 0.529 
Epoch#74 -- Accuracy train: 0.5423333333333333 -- Accuracy test: 0.535 
Epoch#75 -- Accuracy train: 0.5533333333333333 -- Accuracy test: 0.549 
Epoch#76 -- Accuracy train: 0.5526666666666666 -- Accuracy test: 0.539 
Epoch#77 -- Accuracy train: 0.5428888888888889 -- Accuracy test: 0.526 
Epoch#78 -- Accuracy train: 0.5422222222222223 -- Accuracy test: 0.529 
Epoch#79 -- Accuracy train: 0.5431111111111111 -- Accuracy test: 0.549 
Epoch#80 -- Accuracy train: 0.5515555555555556 -- Accuracy test: 0.544 
Epoch#81 -- Accuracy train: 0.5561111111111111 -- Accuracy test: 0.545 
Epoch#82 -- Accuracy train: 0.5424444444444444 -- Accuracy test: 0.534 
Epoch#83 -- Accuracy train: 0.5506666666666666 -- Accuracy test: 0.548 
Epoch#84 -- Accuracy train: 0.561 -- Accuracy test: 0.539 
Epoch#85 -- Accuracy train: 0.5565555555555556 -- Accuracy test: 0.549 
Epoch#86 -- Accuracy train: 0.544 -- Accuracy test: 0.534 
Epoch#87 -- Accuracy train: 0.5522222222222222 -- Accuracy test: 0.541 
Epoch#88 -- Accuracy train: 0.5482222222222223 -- Accuracy test: 0.54 
Epoch#89 -- Accuracy train: 0.5586666666666666 -- Accuracy test: 0.599 
Epoch#90 -- Accuracy train: 0.5514444444444444 -- Accuracy test: 0.545 
Epoch#91 -- Accuracy train: 0.565 -- Accuracy test: 0.561 
Epoch#92 -- Accuracy train: 0.5707777777777778 -- Accuracy test: 0.564 
Epoch#93 -- Accuracy train: 0.5613333333333334 -- Accuracy test: 0.558 
Epoch#94 -- Accuracy train: 0.5638888888888889 -- Accuracy test: 0.572 
Epoch#95 -- Accuracy train: 0.5421111111111111 -- Accuracy test: 0.527 
Epoch#96 -- Accuracy train: 0.5518888888888889 -- Accuracy test: 0.542 
Epoch#97 -- Accuracy train: 0.5573333333333333 -- Accuracy test: 0.576 
Epoch#98 -- Accuracy train: 0.572 -- Accuracy test: 0.576 
Epoch#99 -- Accuracy train: 0.5426666666666666 -- Accuracy test: 0.531 
Epoch#100 -- Accuracy train: 0.5493333333333333 -- Accuracy test: 0.538 
Epoch#101 -- Accuracy train: 0.5578888888888889 -- Accuracy test: 0.575 
Epoch#102 -- Accuracy train: 0.5483333333333333 -- Accuracy test: 0.531 
Epoch#103 -- Accuracy train: 0.5556666666666666 -- Accuracy test: 0.555 
Epoch#104 -- Accuracy train: 0.5584444444444444 -- Accuracy test: 0.55 
Epoch#105 -- Accuracy train: 0.5413333333333333 -- Accuracy test: 0.53 
Epoch#106 -- Accuracy train: 0.542 -- Accuracy test: 0.528 
Epoch#107 -- Accuracy train: 0.5424444444444444 -- Accuracy test: 0.532 
Epoch#108 -- Accuracy train: 0.5447777777777778 -- Accuracy test: 0.53 
Epoch#109 -- Accuracy train: 0.5411111111111111 -- Accuracy test: 0.529 
Epoch#110 -- Accuracy train: 0.5585555555555556 -- Accuracy test: 0.563 
Epoch#111 -- Accuracy train: 0.5415555555555556 -- Accuracy test: 0.529 
Epoch#112 -- Accuracy train: 0.5544444444444444 -- Accuracy test: 0.542 
Epoch#113 -- Accuracy train: 0.5646666666666667 -- Accuracy test: 0.569 
Epoch#114 -- Accuracy train: 0.5604444444444444 -- Accuracy test: 0.557 
Epoch#115 -- Accuracy train: 0.5447777777777778 -- Accuracy test: 0.527 
Epoch#116 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#117 -- Accuracy train: 0.5468888888888889 -- Accuracy test: 0.541 
Epoch#118 -- Accuracy train: 0.5427777777777778 -- Accuracy test: 0.531 
Epoch#119 -- Accuracy train: 0.564 -- Accuracy test: 0.549 
Epoch#120 -- Accuracy train: 0.5496666666666666 -- Accuracy test: 0.542 
Epoch#121 -- Accuracy train: 0.5408888888888889 -- Accuracy test: 0.532 
Epoch#122 -- Accuracy train: 0.5546666666666666 -- Accuracy test: 0.545 
Epoch#123 -- Accuracy train: 0.5408888888888889 -- Accuracy test: 0.531 
Epoch#124 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.528 
Epoch#125 -- Accuracy train: 0.5413333333333333 -- Accuracy test: 0.53 
Epoch#126 -- Accuracy train: 0.5543333333333333 -- Accuracy test: 0.54 
Epoch#127 -- Accuracy train: 0.5483333333333333 -- Accuracy test: 0.533 
Epoch#128 -- Accuracy train: 0.5553333333333333 -- Accuracy test: 0.546 
Epoch#129 -- Accuracy train: 0.5442222222222223 -- Accuracy test: 0.536 
Epoch#130 -- Accuracy train: 0.5415555555555556 -- Accuracy test: 0.53 
Epoch#131 -- Accuracy train: 0.5461111111111111 -- Accuracy test: 0.533 
Epoch#132 -- Accuracy train: 0.559 -- Accuracy test: 0.578 
Epoch#133 -- Accuracy train: 0.5425555555555556 -- Accuracy test: 0.53 
Epoch#134 -- Accuracy train: 0.5413333333333333 -- Accuracy test: 0.53 
Epoch#135 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#136 -- Accuracy train: 0.5438888888888889 -- Accuracy test: 0.532 
Epoch#137 -- Accuracy train: 0.544 -- Accuracy test: 0.535 
Epoch#138 -- Accuracy train: 0.5438888888888889 -- Accuracy test: 0.536 
Epoch#139 -- Accuracy train: 0.5454444444444444 -- Accuracy test: 0.54 
Epoch#140 -- Accuracy train: 0.5532222222222222 -- Accuracy test: 0.541 
Epoch#141 -- Accuracy train: 0.5285555555555556 -- Accuracy test: 0.506 
Epoch#142 -- Accuracy train: 0.5474444444444444 -- Accuracy test: 0.526 
Epoch#143 -- Accuracy train: 0.5428888888888889 -- Accuracy test: 0.526 
Epoch#144 -- Accuracy train: 0.5532222222222222 -- Accuracy test: 0.542 
Epoch#145 -- Accuracy train: 0.5418888888888889 -- Accuracy test: 0.529 
Epoch#146 -- Accuracy train: 0.5383333333333333 -- Accuracy test: 0.538 
Epoch#147 -- Accuracy train: 0.5443333333333333 -- Accuracy test: 0.527 
Epoch#148 -- Accuracy train: 0.551 -- Accuracy test: 0.553 
Epoch#149 -- Accuracy train: 0.574 -- Accuracy test: 0.568 
Epoch#150 -- Accuracy train: 0.5516666666666666 -- Accuracy test: 0.538 
Time: 8960.674680233002
Clause #0 W:(58 -26) NOT x25 AND NOT x269 AND NOT x292 AND NOT x470 AND NOT x509
Number of literals: 5
Clause #1 W:(64 32) NOT x195 AND NOT x248 AND NOT x398 AND NOT x471 AND NOT x495
Number of literals: 5
Clause #2 W:(69 -41) NOT x54 AND NOT x239 AND NOT x290 AND NOT x333
Number of literals: 4
Clause #3 W:(-65 -101) NOT x3 AND NOT x122 AND NOT x258 AND NOT x341 AND NOT x392 AND NOT x495
Number of literals: 6
Clause #4 W:(29 -11) NOT x12 AND NOT x108 AND NOT x179 AND NOT x314 AND NOT x465 AND NOT x480
Number of literals: 6
Clause #5 W:(155 44) NOT x30 AND NOT x40 AND NOT x221 AND NOT x223 AND NOT x349 AND NOT x376 AND NOT x396 AND NOT x495
Number of literals: 8
Clause #6 W:(-37 96) NOT x1 AND NOT x24 AND NOT x104 AND NOT x145 AND NOT x187 AND NOT x227 AND NOT x408 AND NOT x424
Number of literals: 8
Clause #7 W:(67 -4) NOT x84 AND NOT x89 AND NOT x140 AND NOT x367 AND NOT x384 AND NOT x394
Number of literals: 6
Clause #8 W:(-38 32) NOT x64 AND NOT x108
Number of literals: 2
Clause #9 W:(-157 -22) 
Number of literals: 0
Clause #10 W:(78 59) NOT x37 AND NOT x57 AND NOT x485
Number of literals: 3
Clause #11 W:(2 -13) NOT x36 AND NOT x205 AND NOT x211 AND NOT x256 AND NOT x425 AND NOT x468
Number of literals: 6
Clause #12 W:(-25 161) NOT x29 AND NOT x84 AND NOT x310
Number of literals: 3
Clause #13 W:(122 -129) NOT x0 AND NOT x111 AND NOT x213
Number of literals: 3
Clause #14 W:(26 -61) NOT x136
Number of literals: 1
Clause #15 W:(-122 6) NOT x84 AND NOT x217 AND NOT x265 AND NOT x268 AND NOT x273 AND NOT x468
Number of literals: 6
Clause #16 W:(-67 -62) NOT x168 AND NOT x208 AND NOT x279 AND NOT x288 AND NOT x399 AND NOT x501
Number of literals: 6
Clause #17 W:(105 67) NOT x181 AND NOT x182 AND NOT x457
Number of literals: 3
Clause #18 W:(43 31) NOT x91 AND NOT x173 AND NOT x255 AND NOT x275
Number of literals: 4
Clause #19 W:(-21 -22) NOT x100 AND NOT x153 AND NOT x178 AND NOT x380 AND NOT x391 AND NOT x455
Number of literals: 6
Clause #20 W:(-9 10) x0 AND NOT x133 AND NOT x192 AND NOT x292 AND NOT x334
Number of literals: 5
Clause #21 W:(27 148) NOT x97 AND NOT x200 AND NOT x232 AND NOT x251
Number of literals: 4
Clause #22 W:(7 -81) NOT x2 AND NOT x15 AND NOT x101 AND NOT x200 AND NOT x242 AND NOT x423
Number of literals: 6
Clause #23 W:(-20 6) NOT x24 AND NOT x56 AND NOT x230 AND NOT x330 AND NOT x334 AND NOT x455 AND NOT x503
Number of literals: 7
Clause #24 W:(-19 -60) NOT x96 AND NOT x286 AND NOT x406
Number of literals: 3
Clause #25 W:(-76 -11) NOT x145 AND NOT x502 AND NOT x508
Number of literals: 3
Clause #26 W:(10 -84) NOT x126 AND NOT x339 AND NOT x422 AND NOT x430 AND NOT x442
Number of literals: 5
Clause #27 W:(-17 82) NOT x44 AND NOT x85 AND NOT x287 AND NOT x401 AND NOT x407 AND NOT x414 AND NOT x502 AND NOT x511
Number of literals: 8
Clause #28 W:(9 58) NOT x35 AND NOT x179 AND NOT x259 AND NOT x260 AND NOT x275
Number of literals: 5
Clause #29 W:(133 148) NOT x15 AND NOT x44 AND NOT x179 AND NOT x202 AND NOT x416
Number of literals: 5
Clause #30 W:(-141 -100) NOT x25 AND NOT x168 AND NOT x195 AND NOT x255 AND NOT x298 AND NOT x348 AND NOT x489
Number of literals: 7
Clause #31 W:(12 42) NOT x229 AND NOT x346 AND NOT x371 AND NOT x475
Number of literals: 4
Clause #32 W:(10 -15) x1 AND NOT x0 AND NOT x47 AND NOT x270 AND NOT x398
Number of literals: 5
Clause #33 W:(-91 -87) NOT x173 AND NOT x288 AND NOT x312 AND NOT x344 AND NOT x480
Number of literals: 5
Clause #34 W:(-13 71) x0 AND NOT x77 AND NOT x82 AND NOT x185 AND NOT x362 AND NOT x465
Number of literals: 6
Clause #35 W:(-44 -85) NOT x74 AND NOT x146 AND NOT x308 AND NOT x365 AND NOT x393 AND NOT x408
Number of literals: 6
Clause #36 W:(62 -12) NOT x184 AND NOT x308
Number of literals: 2
Clause #37 W:(20 118) NOT x46 AND NOT x168 AND NOT x276 AND NOT x440 AND NOT x476 AND NOT x479
Number of literals: 6
Clause #38 W:(33 -20) NOT x99 AND NOT x112 AND NOT x412 AND NOT x494
Number of literals: 4
Clause #39 W:(-92 -146) NOT x0 AND NOT x169 AND NOT x172 AND NOT x200 AND NOT x226 AND NOT x246 AND NOT x251
Number of literals: 7
Clause #40 W:(61 35) NOT x198 AND NOT x221
Number of literals: 2
Clause #41 W:(-55 112) NOT x196 AND NOT x389
Number of literals: 2
Clause #42 W:(-56 -107) NOT x102 AND NOT x115 AND NOT x215 AND NOT x216 AND NOT x328 AND NOT x417 AND NOT x506
Number of literals: 7
Clause #43 W:(43 37) NOT x64 AND NOT x231 AND NOT x260 AND NOT x346 AND NOT x441
Number of literals: 5
Clause #44 W:(15 69) NOT x193 AND NOT x321 AND NOT x331
Number of literals: 3
Clause #45 W:(134 17) NOT x74 AND NOT x189 AND NOT x292 AND NOT x306 AND NOT x336 AND NOT x340 AND NOT x476
Number of literals: 7
Clause #46 W:(-152 -56) NOT x11 AND NOT x199 AND NOT x409 AND NOT x448
Number of literals: 4
Clause #47 W:(58 -16) NOT x45 AND NOT x165 AND NOT x172 AND NOT x279 AND NOT x362 AND NOT x420 AND NOT x492
Number of literals: 7
Clause #48 W:(82 -36) NOT x12 AND NOT x33
Number of literals: 2
Clause #49 W:(9 -3) NOT x273 AND NOT x388 AND NOT x420
Number of literals: 3
Clause #50 W:(-84 13) NOT x3 AND NOT x40 AND NOT x306 AND NOT x403
Number of literals: 4
Clause #51 W:(-24 -3) x1 AND NOT x21 AND NOT x92 AND NOT x277 AND NOT x295 AND NOT x366 AND NOT x448
Number of literals: 7
Clause #52 W:(50 104) NOT x7 AND NOT x111 AND NOT x169 AND NOT x232 AND NOT x271 AND NOT x327 AND NOT x476
Number of literals: 7
Clause #53 W:(-9 45) NOT x35 AND NOT x79 AND NOT x211 AND NOT x282 AND NOT x472
Number of literals: 5
Clause #54 W:(84 -21) NOT x0 AND NOT x90 AND NOT x149 AND NOT x161 AND NOT x309 AND NOT x486
Number of literals: 6
Clause #55 W:(-11 107) NOT x38 AND NOT x251 AND NOT x287 AND NOT x288 AND NOT x372 AND NOT x478
Number of literals: 6
Clause #56 W:(42 16) NOT x95 AND NOT x169 AND NOT x204 AND NOT x279 AND NOT x280 AND NOT x432 AND NOT x469
Number of literals: 7
Clause #57 W:(-111 -25) NOT x50 AND NOT x252 AND NOT x305 AND NOT x375 AND NOT x397 AND NOT x454 AND NOT x481
Number of literals: 7
Clause #58 W:(-35 59) NOT x81 AND NOT x84 AND NOT x288 AND NOT x300 AND NOT x361
Number of literals: 5
Clause #59 W:(-162 41) x1 AND NOT x89 AND NOT x199 AND NOT x298 AND NOT x367
Number of literals: 5
Clause #60 W:(11 156) NOT x36 AND NOT x170 AND NOT x205 AND NOT x274 AND NOT x282 AND NOT x369
Number of literals: 6
Clause #61 W:(-65 -38) NOT x77 AND NOT x285
Number of literals: 2
Clause #62 W:(85 -117) NOT x7 AND NOT x79 AND NOT x148 AND NOT x278
Number of literals: 4
Clause #63 W:(78 71) NOT x0 AND NOT x126 AND NOT x150 AND NOT x286 AND NOT x334
Number of literals: 5
Clause #64 W:(8 -49) NOT x1 AND NOT x152 AND NOT x194 AND NOT x273 AND NOT x319 AND NOT x490
Number of literals: 6
Clause #65 W:(50 11) x2 AND NOT x0 AND NOT x1 AND NOT x198 AND NOT x212 AND NOT x293 AND NOT x487
Number of literals: 7
Clause #66 W:(-84 -58) NOT x73 AND NOT x188 AND NOT x329 AND NOT x399 AND NOT x478
Number of literals: 5
Clause #67 W:(-50 -7) NOT x16 AND NOT x38 AND NOT x124 AND NOT x162
Number of literals: 4
Clause #68 W:(-86 -37) NOT x84 AND NOT x86 AND NOT x124 AND NOT x178 AND NOT x417 AND NOT x433
Number of literals: 6
Clause #69 W:(147 -17) NOT x47 AND NOT x100 AND NOT x125 AND NOT x132 AND NOT x331 AND NOT x451
Number of literals: 6
Clause #70 W:(-42 -141) NOT x114 AND NOT x145 AND NOT x218 AND NOT x289 AND NOT x292 AND NOT x310
Number of literals: 6
Clause #71 W:(47 39) NOT x14 AND NOT x47 AND NOT x176 AND NOT x236 AND NOT x278 AND NOT x299 AND NOT x365 AND NOT x373 AND NOT x475 AND NOT x510
Number of literals: 10
Clause #72 W:(112 86) NOT x63 AND NOT x87 AND NOT x483
Number of literals: 3
Clause #73 W:(249 47) NOT x6 AND NOT x75 AND NOT x105 AND NOT x222 AND NOT x226 AND NOT x272 AND NOT x508
Number of literals: 7
Clause #74 W:(-89 44) NOT x145 AND NOT x181 AND NOT x453 AND NOT x502
Number of literals: 4
Clause #75 W:(-19 64) NOT x396 AND NOT x452 AND NOT x483
Number of literals: 3
Clause #76 W:(60 -29) x0 AND NOT x1 AND NOT x4 AND NOT x274
Number of literals: 4
Clause #77 W:(31 36) NOT x352 AND NOT x360 AND NOT x405
Number of literals: 3
Clause #78 W:(-126 -50) NOT x121 AND NOT x130 AND NOT x300 AND NOT x329 AND NOT x339 AND NOT x367 AND NOT x392
Number of literals: 7
Clause #79 W:(-45 19) NOT x130 AND NOT x242 AND NOT x254 AND NOT x267 AND NOT x369 AND NOT x494 AND NOT x496
Number of literals: 7
Clause #80 W:(-47 79) NOT x75 AND NOT x234 AND NOT x468 AND NOT x511
Number of literals: 4
Clause #81 W:(-24 2) NOT x86 AND NOT x96 AND NOT x154 AND NOT x191 AND NOT x252 AND NOT x269 AND NOT x332 AND NOT x496
Number of literals: 8
Clause #82 W:(-27 40) NOT x48 AND NOT x306 AND NOT x425
Number of literals: 3
Clause #83 W:(5 5) x1 AND NOT x120 AND NOT x169 AND NOT x336 AND NOT x360
Number of literals: 5
Clause #84 W:(-99 -54) NOT x0 AND NOT x4 AND NOT x270 AND NOT x382
Number of literals: 4
Clause #85 W:(88 57) NOT x58 AND NOT x139 AND NOT x226 AND NOT x388 AND NOT x395
Number of literals: 5
Clause #86 W:(0 -3) NOT x56 AND NOT x136 AND NOT x258 AND NOT x342 AND NOT x394 AND NOT x422 AND NOT x445
Number of literals: 7
Clause #87 W:(18 -8) NOT x11 AND NOT x141 AND NOT x323 AND NOT x390
Number of literals: 4
Clause #88 W:(-104 -12) NOT x6 AND NOT x58 AND NOT x124 AND NOT x166 AND NOT x260 AND NOT x261 AND NOT x281 AND NOT x292
Number of literals: 8
Clause #89 W:(73 23) NOT x1 AND NOT x6 AND NOT x23 AND NOT x88 AND NOT x131 AND NOT x216 AND NOT x232 AND NOT x282 AND NOT x311 AND NOT x433 AND NOT x462
Number of literals: 11
Clause #90 W:(61 39) NOT x63 AND NOT x75 AND NOT x293 AND NOT x313 AND NOT x356 AND NOT x449 AND NOT x463
Number of literals: 7
Clause #91 W:(-45 -92) NOT x137 AND NOT x173 AND NOT x181 AND NOT x195 AND NOT x363 AND NOT x478 AND NOT x489
Number of literals: 7
Clause #92 W:(-5 -100) NOT x5 AND NOT x71 AND NOT x76 AND NOT x223 AND NOT x262 AND NOT x449
Number of literals: 6
Clause #93 W:(-69 -82) NOT x6 AND NOT x30 AND NOT x111 AND NOT x154 AND NOT x283 AND NOT x325 AND NOT x481
Number of literals: 7
Clause #94 W:(15 -102) NOT x1 AND NOT x94 AND NOT x105 AND NOT x236 AND NOT x288 AND NOT x344 AND NOT x403
Number of literals: 7
Clause #95 W:(-124 43) NOT x142 AND NOT x223 AND NOT x371 AND NOT x487
Number of literals: 4
Clause #96 W:(-108 -93) NOT x123 AND NOT x160 AND NOT x277 AND NOT x279 AND NOT x328 AND NOT x384 AND NOT x430 AND NOT x456
Number of literals: 8
Clause #97 W:(-62 -11) x1 AND NOT x58 AND NOT x124 AND NOT x143 AND NOT x366
Number of literals: 5
Clause #98 W:(-53 17) NOT x0 AND NOT x73 AND NOT x122 AND NOT x142 AND NOT x144 AND NOT x150 AND NOT x295 AND NOT x305 AND NOT x331 AND NOT x394 AND NOT x416
Number of literals: 11
Clause #99 W:(74 74) NOT x55 AND NOT x128 AND NOT x162 AND NOT x205 AND NOT x311 AND NOT x410
Number of literals: 6
Clause #100 W:(-106 5) NOT x130 AND NOT x131 AND NOT x509
Number of literals: 3
Clause #101 W:(-69 -45) NOT x74 AND NOT x227 AND NOT x240 AND NOT x392 AND NOT x400
Number of literals: 5
Clause #102 W:(34 55) NOT x29 AND NOT x164 AND NOT x273 AND NOT x413 AND NOT x431 AND NOT x441
Number of literals: 6
Clause #103 W:(-67 100) NOT x166 AND NOT x406
Number of literals: 2
Clause #104 W:(22 -30) NOT x93 AND NOT x180 AND NOT x232 AND NOT x273 AND NOT x282 AND NOT x339 AND NOT x366 AND NOT x394 AND NOT x395 AND NOT x432
Number of literals: 10
Clause #105 W:(84 -60) NOT x88 AND NOT x320 AND NOT x404 AND NOT x467 AND NOT x480
Number of literals: 5
Clause #106 W:(-78 -27) NOT x63 AND NOT x106 AND NOT x109 AND NOT x274 AND NOT x466
Number of literals: 5
Clause #107 W:(76 122) NOT x55 AND NOT x64 AND NOT x66 AND NOT x227 AND NOT x229 AND NOT x429 AND NOT x461
Number of literals: 7
Clause #108 W:(-92 113) NOT x1 AND NOT x30 AND NOT x325
Number of literals: 3
Clause #109 W:(60 -34) NOT x2 AND NOT x57 AND NOT x112 AND NOT x336 AND NOT x393
Number of literals: 5
Clause #110 W:(1 33) NOT x83 AND NOT x223 AND NOT x266 AND NOT x289 AND NOT x345 AND NOT x495 AND NOT x501
Number of literals: 7
Clause #111 W:(-19 -25) NOT x6 AND NOT x29 AND NOT x48 AND NOT x84 AND NOT x143 AND NOT x222 AND NOT x498
Number of literals: 7
Clause #112 W:(-28 -16) NOT x154 AND NOT x243
Number of literals: 2
Clause #113 W:(54 -38) NOT x196 AND NOT x208 AND NOT x373 AND NOT x508
Number of literals: 4
Clause #114 W:(4 -18) NOT x134 AND NOT x149 AND NOT x187 AND NOT x200 AND NOT x280 AND NOT x348 AND NOT x442 AND NOT x472
Number of literals: 8
Clause #115 W:(-52 29) NOT x191 AND NOT x242 AND NOT x256 AND NOT x302 AND NOT x305 AND NOT x396 AND NOT x477
Number of literals: 7
Clause #116 W:(13 65) NOT x47 AND NOT x147 AND NOT x214
Number of literals: 3
Clause #117 W:(-7 -127) NOT x66 AND NOT x158 AND NOT x244 AND NOT x323 AND NOT x385
Number of literals: 5
Clause #118 W:(-39 29) NOT x82 AND NOT x157 AND NOT x252 AND NOT x336 AND NOT x415
Number of literals: 5
Clause #119 W:(88 -116) NOT x21 AND NOT x63 AND NOT x93 AND NOT x115 AND NOT x435
Number of literals: 5
Clause #120 W:(19 115) NOT x0 AND NOT x25 AND NOT x115 AND NOT x149 AND NOT x176 AND NOT x319 AND NOT x462
Number of literals: 7
Clause #121 W:(-35 -111) NOT x6 AND NOT x150 AND NOT x161 AND NOT x348 AND NOT x428
Number of literals: 5
Clause #122 W:(60 21) NOT x1 AND NOT x98 AND NOT x220 AND NOT x285 AND NOT x338 AND NOT x363 AND NOT x382 AND NOT x402
Number of literals: 8
Clause #123 W:(121 211) NOT x55 AND NOT x309 AND NOT x322 AND NOT x507
Number of literals: 4
Clause #124 W:(24 -83) NOT x59 AND NOT x337 AND NOT x376
Number of literals: 3
Clause #125 W:(68 -17) NOT x5 AND NOT x14 AND NOT x119 AND NOT x275 AND NOT x422 AND NOT x469
Number of literals: 6
Clause #126 W:(-87 26) NOT x130 AND NOT x250 AND NOT x323 AND NOT x348 AND NOT x359 AND NOT x414
Number of literals: 6
Clause #127 W:(36 -83) NOT x231 AND NOT x245 AND NOT x277 AND NOT x301 AND NOT x367 AND NOT x496
Number of literals: 6
Clause #128 W:(-105 -169) NOT x86 AND NOT x88 AND NOT x129 AND NOT x196 AND NOT x300 AND NOT x331 AND NOT x470
Number of literals: 7
Clause #129 W:(17 78) NOT x19 AND NOT x166 AND NOT x194 AND NOT x218 AND NOT x304 AND NOT x307 AND NOT x374 AND NOT x427 AND NOT x463
Number of literals: 9
Clause #130 W:(-8 -58) NOT x2 AND NOT x9 AND NOT x38 AND NOT x136 AND NOT x193 AND NOT x195 AND NOT x258
Number of literals: 7
Clause #131 W:(6 3) NOT x6 AND NOT x135 AND NOT x149 AND NOT x213 AND NOT x258 AND NOT x282 AND NOT x443 AND NOT x451
Number of literals: 8
Clause #132 W:(55 -46) NOT x279 AND NOT x497
Number of literals: 2
Clause #133 W:(-130 -133) NOT x168 AND NOT x411 AND NOT x439
Number of literals: 3
Clause #134 W:(138 68) NOT x210 AND NOT x409
Number of literals: 2
Clause #135 W:(-7 -49) NOT x56 AND NOT x105 AND NOT x211 AND NOT x250 AND NOT x310 AND NOT x511
Number of literals: 6
Clause #136 W:(-92 -43) NOT x34 AND NOT x77 AND NOT x123 AND NOT x196 AND NOT x459 AND NOT x467 AND NOT x484 AND NOT x508
Number of literals: 8
Clause #137 W:(-35 21) x1 AND NOT x18 AND NOT x37 AND NOT x102 AND NOT x273 AND NOT x345 AND NOT x393 AND NOT x434 AND NOT x495
Number of literals: 9
Clause #138 W:(-32 5) x0 AND NOT x125 AND NOT x153 AND NOT x227 AND NOT x490
Number of literals: 5
Clause #139 W:(60 10) NOT x39 AND NOT x154 AND NOT x164 AND NOT x179 AND NOT x276 AND NOT x446 AND NOT x461
Number of literals: 7
Clause #140 W:(-20 -50) NOT x24 AND NOT x141 AND NOT x379 AND NOT x403 AND NOT x404 AND NOT x405 AND NOT x445
Number of literals: 7
Clause #141 W:(-70 -83) NOT x433 AND NOT x444
Number of literals: 2
Clause #142 W:(-1 3) NOT x60 AND NOT x76 AND NOT x168 AND NOT x195 AND NOT x234 AND NOT x459
Number of literals: 6
Clause #143 W:(36 -111) NOT x1 AND NOT x369 AND NOT x424
Number of literals: 3
Clause #144 W:(69 215) x1 AND NOT x58 AND NOT x196 AND NOT x319 AND NOT x392 AND NOT x443 AND NOT x483
Number of literals: 7
Clause #145 W:(-19 -156) NOT x52 AND NOT x71 AND NOT x109 AND NOT x227 AND NOT x381 AND NOT x474 AND NOT x503
Number of literals: 7
Clause #146 W:(-50 -68) NOT x289
Number of literals: 1
Clause #147 W:(122 106) NOT x0 AND NOT x5 AND NOT x44 AND NOT x106 AND NOT x134 AND NOT x264 AND NOT x286 AND NOT x353 AND NOT x368 AND NOT x478
Number of literals: 10
Clause #148 W:(-19 -1) x1 AND NOT x2 AND NOT x25 AND NOT x43 AND NOT x78 AND NOT x137 AND NOT x254 AND NOT x385 AND NOT x428 AND NOT x432 AND NOT x449 AND NOT x465 AND NOT x482 AND NOT x486
Number of literals: 14
Clause #149 W:(-145 -10) NOT x230 AND NOT x426 AND NOT x434 AND NOT x452
Number of literals: 4
Clause #150 W:(53 0) NOT x1 AND NOT x108 AND NOT x157 AND NOT x243 AND NOT x344
Number of literals: 5
Clause #151 W:(-48 30) x1 AND NOT x0 AND NOT x90 AND NOT x139 AND NOT x211 AND NOT x232 AND NOT x451
Number of literals: 7
Clause #152 W:(-15 88) NOT x223 AND NOT x261 AND NOT x267 AND NOT x295
Number of literals: 4
Clause #153 W:(-110 139) NOT x358 AND NOT x456 AND NOT x476 AND NOT x479
Number of literals: 4
Clause #154 W:(16 -6) NOT x72 AND NOT x93 AND NOT x112 AND NOT x298 AND NOT x427
Number of literals: 5
Clause #155 W:(-71 -50) NOT x1 AND NOT x16 AND NOT x24 AND NOT x47 AND NOT x68 AND NOT x84 AND NOT x90 AND NOT x160 AND NOT x190 AND NOT x226 AND NOT x283 AND NOT x331 AND NOT x334 AND NOT x359 AND NOT x469
Number of literals: 15
Clause #156 W:(-69 -101) x1 AND NOT x0 AND NOT x20 AND NOT x70 AND NOT x138 AND NOT x154 AND NOT x272 AND NOT x481 AND NOT x492
Number of literals: 9
Clause #157 W:(-52 48) NOT x87 AND NOT x244 AND NOT x347
Number of literals: 3
Clause #158 W:(-35 69) NOT x74 AND NOT x116 AND NOT x172 AND NOT x334 AND NOT x445 AND NOT x478
Number of literals: 6
Clause #159 W:(15 17) NOT x380 AND NOT x410 AND NOT x436 AND NOT x463
Number of literals: 4
Clause #160 W:(11 6) NOT x97 AND NOT x120 AND NOT x336 AND NOT x439 AND NOT x504
Number of literals: 5
Clause #161 W:(3 -95) NOT x155 AND NOT x174 AND NOT x216 AND NOT x299 AND NOT x331 AND NOT x408
Number of literals: 6
Clause #162 W:(40 51) NOT x238 AND NOT x427
Number of literals: 2
Clause #163 W:(23 79) NOT x66 AND NOT x147 AND NOT x198 AND NOT x234 AND NOT x266 AND NOT x275 AND NOT x299 AND NOT x317 AND NOT x356
Number of literals: 9
Clause #164 W:(44 5) x1 AND NOT x157 AND NOT x217 AND NOT x265
Number of literals: 4
Clause #165 W:(-43 -138) NOT x12 AND NOT x268 AND NOT x316 AND NOT x319 AND NOT x412 AND NOT x459
Number of literals: 6
Clause #166 W:(-41 -45) NOT x13 AND NOT x23 AND NOT x250 AND NOT x296 AND NOT x312 AND NOT x418
Number of literals: 6
Clause #167 W:(12 -9) x1 AND NOT x152
Number of literals: 2
Clause #168 W:(-40 8) NOT x2 AND NOT x29 AND NOT x167 AND NOT x252 AND NOT x348 AND NOT x419 AND NOT x489
Number of literals: 7
Clause #169 W:(-49 99) NOT x235 AND NOT x247 AND NOT x253 AND NOT x257 AND NOT x326
Number of literals: 5
Clause #170 W:(183 -47) NOT x369
Number of literals: 1
Clause #171 W:(124 27) NOT x36 AND NOT x71 AND NOT x238 AND NOT x332 AND NOT x341
Number of literals: 5
Clause #172 W:(132 34) NOT x81 AND NOT x82 AND NOT x190 AND NOT x270 AND NOT x432
Number of literals: 5
Clause #173 W:(-76 -2) NOT x64 AND NOT x187 AND NOT x247 AND NOT x401 AND NOT x412 AND NOT x463
Number of literals: 6
Clause #174 W:(41 20) NOT x27 AND NOT x263 AND NOT x304 AND NOT x392 AND NOT x457 AND NOT x475
Number of literals: 6
Clause #175 W:(-40 16) NOT x0 AND NOT x37 AND NOT x77 AND NOT x120 AND NOT x446 AND NOT x498
Number of literals: 6
Clause #176 W:(78 -90) NOT x25 AND NOT x57 AND NOT x176 AND NOT x187 AND NOT x245 AND NOT x276 AND NOT x360 AND NOT x374
Number of literals: 8
Clause #177 W:(50 -106) NOT x145 AND NOT x208 AND NOT x348 AND NOT x433
Number of literals: 4
Clause #178 W:(-76 -114) NOT x268 AND NOT x312 AND NOT x376 AND NOT x414 AND NOT x488
Number of literals: 5
Clause #179 W:(16 11) NOT x26 AND NOT x404
Number of literals: 2
Clause #180 W:(3 2) NOT x7 AND NOT x200 AND NOT x210 AND NOT x334 AND NOT x362
Number of literals: 5
Clause #181 W:(12 -71) NOT x96 AND NOT x166 AND NOT x190 AND NOT x254 AND NOT x403 AND NOT x418
Number of literals: 6
Clause #182 W:(-50 -23) NOT x66 AND NOT x219 AND NOT x475 AND NOT x495
Number of literals: 4
Clause #183 W:(-29 5) NOT x35 AND NOT x47 AND NOT x336
Number of literals: 3
Clause #184 W:(-22 -16) NOT x33 AND NOT x321 AND NOT x384
Number of literals: 3
Clause #185 W:(-29 75) NOT x244 AND NOT x280 AND NOT x399 AND NOT x408 AND NOT x495
Number of literals: 5
Clause #186 W:(63 52) NOT x16 AND NOT x144 AND NOT x207 AND NOT x305
Number of literals: 4
Clause #187 W:(114 -184) NOT x154 AND NOT x283 AND NOT x403
Number of literals: 3
Clause #188 W:(-4 -29) NOT x91 AND NOT x124 AND NOT x148 AND NOT x178 AND NOT x368 AND NOT x448
Number of literals: 6
Clause #189 W:(6 -10) NOT x3 AND NOT x35 AND NOT x199 AND NOT x416
Number of literals: 4
Clause #190 W:(-165 40) x1 AND NOT x0 AND NOT x86 AND NOT x88 AND NOT x102 AND NOT x264 AND NOT x386 AND NOT x422
Number of literals: 8
Clause #191 W:(28 33) NOT x17 AND NOT x67 AND NOT x199 AND NOT x301 AND NOT x315 AND NOT x368 AND NOT x422 AND NOT x441
Number of literals: 8
Clause #192 W:(-27 45) NOT x0 AND NOT x78 AND NOT x161 AND NOT x209 AND NOT x252 AND NOT x298 AND NOT x481
Number of literals: 7
Clause #193 W:(176 86) NOT x111 AND NOT x263 AND NOT x346 AND NOT x476
Number of literals: 4
Clause #194 W:(127 67) NOT x88 AND NOT x115 AND NOT x145 AND NOT x229 AND NOT x256
Number of literals: 5
Clause #195 W:(21 -87) NOT x68 AND NOT x78 AND NOT x214 AND NOT x390 AND NOT x460 AND NOT x505
Number of literals: 6
Clause #196 W:(-32 110) NOT x104 AND NOT x128 AND NOT x154 AND NOT x195 AND NOT x198 AND NOT x222 AND NOT x311 AND NOT x421
Number of literals: 8
Clause #197 W:(-22 -37) NOT x114 AND NOT x273 AND NOT x371 AND NOT x459
Number of literals: 4
Clause #198 W:(31 251) x1 AND NOT x125 AND NOT x240 AND NOT x311 AND NOT x479 AND NOT x487 AND NOT x505
Number of literals: 7
Clause #199 W:(30 21) NOT x15 AND NOT x18 AND NOT x65 AND NOT x203 AND NOT x395 AND NOT x438 AND NOT x480 AND NOT x483 AND NOT x492
Number of literals: 9
Clause #200 W:(16 79) NOT x82 AND NOT x92 AND NOT x150 AND NOT x166 AND NOT x314
Number of literals: 5
Clause #201 W:(48 -33) NOT x237 AND NOT x380
Number of literals: 2
Clause #202 W:(-13 -73) NOT x36 AND NOT x216 AND NOT x235 AND NOT x410
Number of literals: 4
Clause #203 W:(44 -3) NOT x200 AND NOT x234 AND NOT x238 AND NOT x405 AND NOT x437 AND NOT x441 AND NOT x474
Number of literals: 7
Clause #204 W:(56 -29) NOT x94 AND NOT x279 AND NOT x285 AND NOT x306 AND NOT x308
Number of literals: 5
Clause #205 W:(41 75) NOT x38 AND NOT x87 AND NOT x273 AND NOT x290 AND NOT x364 AND NOT x423 AND NOT x439
Number of literals: 7
Clause #206 W:(-186 -150) NOT x153 AND NOT x240 AND NOT x267 AND NOT x402
Number of literals: 4
Clause #207 W:(33 10) NOT x250 AND NOT x313 AND NOT x316
Number of literals: 3
Clause #208 W:(-69 -111) NOT x4 AND NOT x248 AND NOT x258 AND NOT x313 AND NOT x358 AND NOT x447
Number of literals: 6
Clause #209 W:(-39 7) x2 AND NOT x0 AND NOT x127 AND NOT x145 AND NOT x262 AND NOT x280 AND NOT x502
Number of literals: 7
Clause #210 W:(-66 -1) NOT x86 AND NOT x192 AND NOT x331
Number of literals: 3
Clause #211 W:(-39 57) NOT x129 AND NOT x167 AND NOT x179 AND NOT x291
Number of literals: 4
Clause #212 W:(42 6) NOT x51 AND NOT x434 AND NOT x459
Number of literals: 3
Clause #213 W:(1 29) NOT x93 AND NOT x164 AND NOT x416 AND NOT x483
Number of literals: 4
Clause #214 W:(-34 -7) NOT x276
Number of literals: 1
Clause #215 W:(-44 -36) NOT x154 AND NOT x263 AND NOT x327 AND NOT x345
Number of literals: 4
Clause #216 W:(17 72) NOT x46 AND NOT x64 AND NOT x189 AND NOT x382 AND NOT x392
Number of literals: 5
Clause #217 W:(10 -52) NOT x91 AND NOT x190 AND NOT x201 AND NOT x347
Number of literals: 4
Clause #218 W:(-175 -54) x1 AND NOT x6 AND NOT x33 AND NOT x77 AND NOT x216 AND NOT x225 AND NOT x269
Number of literals: 7
Clause #219 W:(-15 -81) x0 AND NOT x1 AND NOT x2 AND NOT x17 AND NOT x113 AND NOT x479
Number of literals: 6
Clause #220 W:(17 6) NOT x41 AND NOT x130 AND NOT x139 AND NOT x182 AND NOT x318 AND NOT x339 AND NOT x372 AND NOT x431 AND NOT x472
Number of literals: 9
Clause #221 W:(-45 86) NOT x122 AND NOT x167 AND NOT x328 AND NOT x331 AND NOT x430 AND NOT x469 AND NOT x509
Number of literals: 7
Clause #222 W:(39 28) NOT x1 AND NOT x9 AND NOT x211 AND NOT x377
Number of literals: 4
Clause #223 W:(-59 49) NOT x130 AND NOT x135 AND NOT x184 AND NOT x241 AND NOT x332 AND NOT x413 AND NOT x478
Number of literals: 7
Clause #224 W:(-41 0) x1 AND NOT x13 AND NOT x125 AND NOT x178 AND NOT x205 AND NOT x210
Number of literals: 6
Clause #225 W:(-33 -80) NOT x104 AND NOT x169 AND NOT x350 AND NOT x463
Number of literals: 4
Clause #226 W:(54 -2) NOT x24 AND NOT x49 AND NOT x236 AND NOT x253 AND NOT x447
Number of literals: 5
Clause #227 W:(-96 -21) NOT x46 AND NOT x178 AND NOT x282 AND NOT x381
Number of literals: 4
Clause #228 W:(95 -7) NOT x160 AND NOT x269 AND NOT x395 AND NOT x484
Number of literals: 4
Clause #229 W:(-25 15) NOT x24 AND NOT x196 AND NOT x228 AND NOT x249 AND NOT x369 AND NOT x428 AND NOT x429 AND NOT x498
Number of literals: 8
Clause #230 W:(-96 -99) NOT x26 AND NOT x244 AND NOT x281
Number of literals: 3
Clause #231 W:(-118 -158) NOT x62 AND NOT x93 AND NOT x212 AND NOT x214 AND NOT x245 AND NOT x438
Number of literals: 6
Clause #232 W:(4 8) NOT x1 AND NOT x45 AND NOT x120 AND NOT x124 AND NOT x248 AND NOT x389 AND NOT x395 AND NOT x461
Number of literals: 8
Clause #233 W:(-35 -46) NOT x134 AND NOT x136 AND NOT x146 AND NOT x282 AND NOT x488
Number of literals: 5
Clause #234 W:(-62 -65) NOT x34 AND NOT x176 AND NOT x191 AND NOT x329
Number of literals: 4
Clause #235 W:(127 39) NOT x4 AND NOT x253 AND NOT x305 AND NOT x348 AND NOT x356
Number of literals: 5
Clause #236 W:(43 56) NOT x153 AND NOT x165 AND NOT x210 AND NOT x228
Number of literals: 4
Clause #237 W:(-84 12) x0 AND NOT x77 AND NOT x297 AND NOT x298 AND NOT x354 AND NOT x388 AND NOT x403 AND NOT x435
Number of literals: 8
Clause #238 W:(-57 -29) NOT x72 AND NOT x155 AND NOT x276 AND NOT x286 AND NOT x298 AND NOT x324 AND NOT x342 AND NOT x380
Number of literals: 8
Clause #239 W:(6 -80) x0 AND NOT x30 AND NOT x98 AND NOT x123 AND NOT x220 AND NOT x244 AND NOT x258 AND NOT x348 AND NOT x414 AND NOT x486
Number of literals: 10
Clause #240 W:(-38 51) NOT x2 AND NOT x33 AND NOT x84 AND NOT x120 AND NOT x138 AND NOT x176 AND NOT x427
Number of literals: 7
Clause #241 W:(-36 27) NOT x170 AND NOT x325 AND NOT x371 AND NOT x377 AND NOT x408 AND NOT x428
Number of literals: 6
Clause #242 W:(-11 41) NOT x248 AND NOT x260 AND NOT x377 AND NOT x380 AND NOT x507
Number of literals: 5
Clause #243 W:(0 48) NOT x172 AND NOT x316
Number of literals: 2
Clause #244 W:(35 77) NOT x77 AND NOT x111 AND NOT x240 AND NOT x250 AND NOT x389
Number of literals: 5
Clause #245 W:(131 159) NOT x1 AND NOT x15 AND NOT x140 AND NOT x286 AND NOT x314 AND NOT x509
Number of literals: 6
Clause #246 W:(11 4) NOT x137 AND NOT x150 AND NOT x336 AND NOT x416 AND NOT x423 AND NOT x479
Number of literals: 6
Clause #247 W:(-9 -43) NOT x0 AND NOT x193 AND NOT x229 AND NOT x300 AND NOT x326 AND NOT x360 AND NOT x451 AND NOT x456
Number of literals: 8
Clause #248 W:(54 62) NOT x22 AND NOT x26 AND NOT x128 AND NOT x148 AND NOT x237 AND NOT x252 AND NOT x355 AND NOT x421 AND NOT x437
Number of literals: 9
Clause #249 W:(5 -55) NOT x195 AND NOT x302 AND NOT x312 AND NOT x356 AND NOT x504
Number of literals: 5
Clause #250 W:(-45 -122) NOT x59 AND NOT x84 AND NOT x112 AND NOT x233 AND NOT x391 AND NOT x482
Number of literals: 6
Clause #251 W:(-11 75) NOT x33 AND NOT x180 AND NOT x373
Number of literals: 3
Clause #252 W:(-14 31) NOT x0 AND NOT x149 AND NOT x379
Number of literals: 3
Clause #253 W:(9 6) NOT x3 AND NOT x166 AND NOT x210 AND NOT x256 AND NOT x285 AND NOT x294 AND NOT x337 AND NOT x486
Number of literals: 8
Clause #254 W:(-4 -13) NOT x94 AND NOT x114 AND NOT x181 AND NOT x187 AND NOT x350 AND NOT x508
Number of literals: 6
Clause #255 W:(-74 -6) NOT x3 AND NOT x158 AND NOT x161 AND NOT x212 AND NOT x225 AND NOT x351 AND NOT x469
Number of literals: 7
Clause #256 W:(86 -64) NOT x211 AND NOT x311 AND NOT x505
Number of literals: 3
Clause #257 W:(139 49) NOT x33 AND NOT x68 AND NOT x110 AND NOT x261 AND NOT x335 AND NOT x393
Number of literals: 6
Clause #258 W:(-73 137) NOT x63
Number of literals: 1
Clause #259 W:(-4 -56) NOT x92 AND NOT x213 AND NOT x331 AND NOT x336 AND NOT x401 AND NOT x434 AND NOT x504
Number of literals: 7
Clause #260 W:(188 -80) NOT x44 AND NOT x334 AND NOT x406 AND NOT x408
Number of literals: 4
Clause #261 W:(-82 -36) NOT x1 AND NOT x59 AND NOT x222 AND NOT x254 AND NOT x342
Number of literals: 5
Clause #262 W:(-74 29) NOT x25 AND NOT x191 AND NOT x274
Number of literals: 3
Clause #263 W:(-20 -1) NOT x431
Number of literals: 1
Clause #264 W:(91 -25) NOT x83 AND NOT x117 AND NOT x225 AND NOT x275
Number of literals: 4
Clause #265 W:(-160 -159) NOT x165 AND NOT x186 AND NOT x239 AND NOT x302 AND NOT x356
Number of literals: 5
Clause #266 W:(-21 -21) NOT x0 AND NOT x32 AND NOT x89
Number of literals: 3
Clause #267 W:(-41 60) NOT x202 AND NOT x286 AND NOT x493 AND NOT x499
Number of literals: 4
Clause #268 W:(19 47) NOT x0 AND NOT x46 AND NOT x269 AND NOT x292
Number of literals: 4
Clause #269 W:(-17 -82) NOT x81 AND NOT x135 AND NOT x256
Number of literals: 3
Clause #270 W:(-10 19) NOT x173 AND NOT x181 AND NOT x355 AND NOT x393 AND NOT x422 AND NOT x478
Number of literals: 6
Clause #271 W:(19 19) NOT x16 AND NOT x36 AND NOT x83 AND NOT x127 AND NOT x252 AND NOT x411 AND NOT x455
Number of literals: 7
Clause #272 W:(11 64) NOT x268 AND NOT x279 AND NOT x282 AND NOT x296 AND NOT x306 AND NOT x364 AND NOT x394 AND NOT x431 AND NOT x484
Number of literals: 9
Clause #273 W:(-10 21) NOT x113 AND NOT x137 AND NOT x336 AND NOT x401
Number of literals: 4
Clause #274 W:(-96 185) NOT x85 AND NOT x107 AND NOT x189
Number of literals: 3
Clause #275 W:(-94 -39) NOT x52 AND NOT x118 AND NOT x212 AND NOT x339 AND NOT x420
Number of literals: 5
Clause #276 W:(20 -5) NOT x33 AND NOT x149 AND NOT x194 AND NOT x293 AND NOT x329 AND NOT x416 AND NOT x426
Number of literals: 7
Clause #277 W:(-50 45) NOT x176 AND NOT x186 AND NOT x312 AND NOT x332 AND NOT x371 AND NOT x488 AND NOT x501
Number of literals: 7
Clause #278 W:(54 -28) x1 AND NOT x0
Number of literals: 2
Clause #279 W:(68 0) NOT x192 AND NOT x201 AND NOT x258 AND NOT x281 AND NOT x298
Number of literals: 5
Clause #280 W:(71 17) NOT x66 AND NOT x101 AND NOT x502
Number of literals: 3
Clause #281 W:(-33 57) NOT x1 AND NOT x7 AND NOT x77 AND NOT x109 AND NOT x126 AND NOT x318 AND NOT x430
Number of literals: 7
Clause #282 W:(99 -35) NOT x10 AND NOT x18 AND NOT x43 AND NOT x125 AND NOT x127 AND NOT x136 AND NOT x169 AND NOT x185 AND NOT x299 AND NOT x372 AND NOT x381
Number of literals: 11
Clause #283 W:(26 17) NOT x1 AND NOT x222 AND NOT x278 AND NOT x413 AND NOT x428 AND NOT x435
Number of literals: 6
Clause #284 W:(-49 -18) NOT x0 AND NOT x108 AND NOT x135 AND NOT x157 AND NOT x195 AND NOT x276 AND NOT x446 AND NOT x499 AND NOT x509
Number of literals: 9
Clause #285 W:(107 20) NOT x23 AND NOT x177 AND NOT x374
Number of literals: 3
Clause #286 W:(-186 85) NOT x0 AND NOT x68 AND NOT x485
Number of literals: 3
Clause #287 W:(-18 88) x0 AND NOT x95 AND NOT x233 AND NOT x380 AND NOT x409 AND NOT x436
Number of literals: 6
Clause #288 W:(32 19) NOT x53 AND NOT x193 AND NOT x219 AND NOT x310
Number of literals: 4
Clause #289 W:(6 52) NOT x228 AND NOT x266 AND NOT x279 AND NOT x304 AND NOT x339 AND NOT x451
Number of literals: 6
Clause #290 W:(-56 -38) NOT x149 AND NOT x193 AND NOT x263 AND NOT x448
Number of literals: 4
Clause #291 W:(6 42) NOT x27 AND NOT x174 AND NOT x217 AND NOT x251 AND NOT x452
Number of literals: 5
Clause #292 W:(17 7) NOT x124 AND NOT x265
Number of literals: 2
Clause #293 W:(10 64) NOT x44 AND NOT x60 AND NOT x221 AND NOT x398 AND NOT x465
Number of literals: 5
Clause #294 W:(-38 48) NOT x61 AND NOT x87 AND NOT x125 AND NOT x165 AND NOT x186
Number of literals: 5
Clause #295 W:(13 10) NOT x13 AND NOT x189 AND NOT x269 AND NOT x372
Number of literals: 4
Clause #296 W:(-4 98) NOT x29 AND NOT x155 AND NOT x166 AND NOT x304 AND NOT x410 AND NOT x471
Number of literals: 6
Clause #297 W:(91 36) NOT x68 AND NOT x136 AND NOT x137 AND NOT x201 AND NOT x240 AND NOT x387 AND NOT x404
Number of literals: 7
Clause #298 W:(-34 -58) NOT x62 AND NOT x110 AND NOT x111 AND NOT x220 AND NOT x281 AND NOT x296 AND NOT x334
Number of literals: 7
Clause #299 W:(-10 -82) NOT x21 AND NOT x341 AND NOT x358
Number of literals: 3
Clause #300 W:(-154 -84) NOT x63 AND NOT x148 AND NOT x400 AND NOT x422 AND NOT x453
Number of literals: 5
Clause #301 W:(-50 -61) NOT x227 AND NOT x333
Number of literals: 2
Clause #302 W:(178 -88) NOT x4 AND NOT x103 AND NOT x114 AND NOT x164 AND NOT x169 AND NOT x173 AND NOT x245 AND NOT x280 AND NOT x397 AND NOT x459 AND NOT x502
Number of literals: 11
Clause #303 W:(104 -2) x1 AND NOT x94 AND NOT x283 AND NOT x498
Number of literals: 4
Clause #304 W:(-27 -25) NOT x34 AND NOT x193 AND NOT x194 AND NOT x198 AND NOT x283 AND NOT x365 AND NOT x388 AND NOT x430 AND NOT x483
Number of literals: 9
Clause #305 W:(85 14) NOT x93 AND NOT x187 AND NOT x225 AND NOT x333 AND NOT x356 AND NOT x394 AND NOT x475
Number of literals: 7
Clause #306 W:(-56 -119) NOT x72 AND NOT x130 AND NOT x171 AND NOT x208 AND NOT x237 AND NOT x295 AND NOT x304 AND NOT x376 AND NOT x492
Number of literals: 9
Clause #307 W:(-10 36) NOT x2 AND NOT x243 AND NOT x284 AND NOT x349 AND NOT x423 AND NOT x434
Number of literals: 6
Clause #308 W:(42 -36) NOT x38 AND NOT x46 AND NOT x281 AND NOT x283 AND NOT x340 AND NOT x475
Number of literals: 6
Clause #309 W:(34 -81) NOT x25 AND NOT x168 AND NOT x198 AND NOT x223 AND NOT x390 AND NOT x457 AND NOT x471 AND NOT x492
Number of literals: 8
Clause #310 W:(-12 54) NOT x94 AND NOT x127 AND NOT x300 AND NOT x363 AND NOT x449
Number of literals: 5
Clause #311 W:(67 14) NOT x7 AND NOT x99 AND NOT x256 AND NOT x292 AND NOT x466 AND NOT x487
Number of literals: 6
Clause #312 W:(-60 -83) NOT x203 AND NOT x207 AND NOT x238 AND NOT x285 AND NOT x394 AND NOT x406 AND NOT x497 AND NOT x506
Number of literals: 8
Clause #313 W:(12 16) x0 AND NOT x94 AND NOT x403 AND NOT x503 AND NOT x511
Number of literals: 5
Clause #314 W:(-31 -115) NOT x75 AND NOT x354 AND NOT x375 AND NOT x466
Number of literals: 4
Clause #315 W:(-36 -53) NOT x32 AND NOT x40 AND NOT x82 AND NOT x129 AND NOT x204 AND NOT x389
Number of literals: 6
Clause #316 W:(-117 -100) NOT x80 AND NOT x119 AND NOT x222 AND NOT x240 AND NOT x423 AND NOT x443
Number of literals: 6
Clause #317 W:(96 116) NOT x36 AND NOT x344 AND NOT x469
Number of literals: 3
Clause #318 W:(4 183) NOT x281 AND NOT x359 AND NOT x460 AND NOT x461
Number of literals: 4
Clause #319 W:(-184 17) NOT x23 AND NOT x226 AND NOT x240 AND NOT x246 AND NOT x298 AND NOT x347 AND NOT x349
Number of literals: 7
Clause #320 W:(-1 -21) NOT x129 AND NOT x163 AND NOT x389 AND NOT x444
Number of literals: 4
Clause #321 W:(-45 -7) NOT x0 AND NOT x364
Number of literals: 2
Clause #322 W:(-12 61) NOT x0 AND NOT x149 AND NOT x162 AND NOT x193 AND NOT x334 AND NOT x394 AND NOT x449 AND NOT x501
Number of literals: 8
Clause #323 W:(6 120) NOT x115 AND NOT x180 AND NOT x236 AND NOT x315 AND NOT x493 AND NOT x499
Number of literals: 6
Clause #324 W:(18 122) NOT x50 AND NOT x227 AND NOT x285 AND NOT x368 AND NOT x370 AND NOT x386 AND NOT x461 AND NOT x466
Number of literals: 8
Clause #325 W:(96 -11) NOT x149 AND NOT x453
Number of literals: 2
Clause #326 W:(-17 1) NOT x156 AND NOT x192 AND NOT x194 AND NOT x221 AND NOT x315 AND NOT x484
Number of literals: 6
Clause #327 W:(57 46) NOT x159 AND NOT x264 AND NOT x351 AND NOT x421
Number of literals: 4
Clause #328 W:(112 3) NOT x115 AND NOT x118 AND NOT x144 AND NOT x290
Number of literals: 4
Clause #329 W:(18 63) NOT x299 AND NOT x338 AND NOT x370 AND NOT x473 AND NOT x485 AND NOT x497 AND NOT x503
Number of literals: 7
Clause #330 W:(11 -26) NOT x9 AND NOT x12 AND NOT x64 AND NOT x268 AND NOT x298 AND NOT x379 AND NOT x430
Number of literals: 7
Clause #331 W:(63 76) NOT x152 AND NOT x162 AND NOT x169 AND NOT x285 AND NOT x364 AND NOT x393 AND NOT x439 AND NOT x453
Number of literals: 8
Clause #332 W:(-25 8) NOT x111 AND NOT x142 AND NOT x326 AND NOT x392
Number of literals: 4
Clause #333 W:(-26 -152) NOT x358 AND NOT x499
Number of literals: 2
Clause #334 W:(-37 3) NOT x86 AND NOT x136 AND NOT x202 AND NOT x231
Number of literals: 4
Clause #335 W:(-84 -17) NOT x4 AND NOT x61 AND NOT x177 AND NOT x296 AND NOT x311 AND NOT x470 AND NOT x478
Number of literals: 7
Clause #336 W:(-74 32) NOT x1 AND NOT x71 AND NOT x354 AND NOT x508
Number of literals: 4
Clause #337 W:(182 -53) NOT x0 AND NOT x39 AND NOT x64 AND NOT x72 AND NOT x142 AND NOT x197 AND NOT x247 AND NOT x276 AND NOT x313 AND NOT x373
Number of literals: 10
Clause #338 W:(-67 -101) NOT x6 AND NOT x21 AND NOT x88 AND NOT x272 AND NOT x325
Number of literals: 5
Clause #339 W:(4 -3) NOT x21 AND NOT x50 AND NOT x59 AND NOT x146 AND NOT x279 AND NOT x509
Number of literals: 6
Clause #340 W:(-32 8) NOT x36 AND NOT x45 AND NOT x153 AND NOT x174 AND NOT x339 AND NOT x363 AND NOT x383 AND NOT x436
Number of literals: 8
Clause #341 W:(-106 109) NOT x2 AND NOT x164 AND NOT x208 AND NOT x302 AND NOT x303 AND NOT x368 AND NOT x463
Number of literals: 7
Clause #342 W:(-25 12) NOT x232 AND NOT x239 AND NOT x251 AND NOT x427 AND NOT x479
Number of literals: 5
Clause #343 W:(-7 -107) x0 AND NOT x1 AND NOT x354 AND NOT x383 AND NOT x448
Number of literals: 5
Clause #344 W:(53 -19) NOT x154 AND NOT x323 AND NOT x467 AND NOT x469 AND NOT x477 AND NOT x484
Number of literals: 6
Clause #345 W:(-81 -58) NOT x25 AND NOT x197 AND NOT x293 AND NOT x398 AND NOT x416 AND NOT x431 AND NOT x439
Number of literals: 7
Clause #346 W:(34 13) NOT x12 AND NOT x18 AND NOT x277 AND NOT x325 AND NOT x433
Number of literals: 5
Clause #347 W:(1 89) NOT x95 AND NOT x190 AND NOT x256 AND NOT x341 AND NOT x349 AND NOT x404 AND NOT x496
Number of literals: 7
Clause #348 W:(32 15) NOT x11 AND NOT x173 AND NOT x339 AND NOT x405 AND NOT x445 AND NOT x454
Number of literals: 6
Clause #349 W:(15 23) NOT x59 AND NOT x112 AND NOT x488 AND NOT x511
Number of literals: 4
Clause #350 W:(-27 -50) NOT x13 AND NOT x151 AND NOT x195 AND NOT x276 AND NOT x351 AND NOT x426
Number of literals: 6
Clause #351 W:(-68 -25) NOT x22 AND NOT x109 AND NOT x118 AND NOT x121 AND NOT x160 AND NOT x354 AND NOT x388
Number of literals: 7
Clause #352 W:(-85 -139) NOT x119 AND NOT x181 AND NOT x204 AND NOT x277 AND NOT x293
Number of literals: 5
Clause #353 W:(116 -43) NOT x108 AND NOT x129 AND NOT x139 AND NOT x145 AND NOT x160 AND NOT x294 AND NOT x375 AND NOT x473 AND NOT x483
Number of literals: 9
Clause #354 W:(-69 -35) NOT x0 AND NOT x48 AND NOT x116 AND NOT x127 AND NOT x253 AND NOT x254 AND NOT x364
Number of literals: 7
Clause #355 W:(-41 -3) NOT x2 AND NOT x84 AND NOT x99 AND NOT x110 AND NOT x237 AND NOT x371
Number of literals: 6
Clause #356 W:(25 92) NOT x56 AND NOT x129 AND NOT x359 AND NOT x423 AND NOT x426 AND NOT x434 AND NOT x466 AND NOT x508
Number of literals: 8
Clause #357 W:(151 12) NOT x106 AND NOT x243 AND NOT x273 AND NOT x331 AND NOT x462 AND NOT x506
Number of literals: 6
Clause #358 W:(-101 -12) NOT x18 AND NOT x261 AND NOT x295 AND NOT x408 AND NOT x489
Number of literals: 5
Clause #359 W:(-4 -6) NOT x26 AND NOT x186 AND NOT x218 AND NOT x339 AND NOT x340 AND NOT x363 AND NOT x431 AND NOT x494 AND NOT x495
Number of literals: 9
Clause #360 W:(-11 105) NOT x140 AND NOT x443
Number of literals: 2
Clause #361 W:(17 -27) NOT x145 AND NOT x281 AND NOT x329 AND NOT x331 AND NOT x397 AND NOT x477 AND NOT x486 AND NOT x491
Number of literals: 8
Clause #362 W:(-5 -8) NOT x25 AND NOT x32 AND NOT x63 AND NOT x290 AND NOT x374 AND NOT x378 AND NOT x415 AND NOT x450
Number of literals: 8
Clause #363 W:(-32 -29) NOT x3 AND NOT x96 AND NOT x134 AND NOT x259
Number of literals: 4
Clause #364 W:(35 -62) NOT x2 AND NOT x45 AND NOT x65 AND NOT x139 AND NOT x187 AND NOT x299 AND NOT x368
Number of literals: 7
Clause #365 W:(-6 -8) NOT x79 AND NOT x249 AND NOT x352 AND NOT x426 AND NOT x510
Number of literals: 5
Clause #366 W:(42 89) NOT x55 AND NOT x350
Number of literals: 2
Clause #367 W:(-51 -38) NOT x377 AND NOT x394 AND NOT x480
Number of literals: 3
Clause #368 W:(-38 -75) NOT x88 AND NOT x177 AND NOT x296
Number of literals: 3
Clause #369 W:(-67 -20) NOT x28 AND NOT x43 AND NOT x52 AND NOT x102 AND NOT x162 AND NOT x166 AND NOT x172 AND NOT x222
Number of literals: 8
Clause #370 W:(17 54) NOT x7 AND NOT x37 AND NOT x64 AND NOT x501
Number of literals: 4
Clause #371 W:(-26 7) NOT x89 AND NOT x211 AND NOT x271
Number of literals: 3
Clause #372 W:(-64 117) NOT x86 AND NOT x206 AND NOT x238 AND NOT x301 AND NOT x398 AND NOT x407
Number of literals: 6
Clause #373 W:(29 -44) NOT x11 AND NOT x120 AND NOT x208 AND NOT x262 AND NOT x270 AND NOT x388
Number of literals: 6
Clause #374 W:(-16 -17) NOT x160 AND NOT x202 AND NOT x205 AND NOT x356 AND NOT x431 AND NOT x434
Number of literals: 6
Clause #375 W:(-18 -81) NOT x500
Number of literals: 1
Clause #376 W:(-3 4) NOT x347 AND NOT x410 AND NOT x420 AND NOT x507
Number of literals: 4
Clause #377 W:(1 65) x1 AND NOT x175 AND NOT x196 AND NOT x212 AND NOT x218 AND NOT x316
Number of literals: 6
Clause #378 W:(-55 -71) NOT x75 AND NOT x111 AND NOT x158 AND NOT x224 AND NOT x359 AND NOT x381 AND NOT x386 AND NOT x447
Number of literals: 8
Clause #379 W:(90 -21) NOT x1 AND NOT x13 AND NOT x211 AND NOT x271
Number of literals: 4
Clause #380 W:(3 95) NOT x233 AND NOT x265 AND NOT x271 AND NOT x484
Number of literals: 4
Clause #381 W:(2 -4) NOT x260 AND NOT x335 AND NOT x344 AND NOT x426 AND NOT x485
Number of literals: 5
Clause #382 W:(-22 37) NOT x169 AND NOT x506
Number of literals: 2
Clause #383 W:(-33 -73) NOT x26 AND NOT x125 AND NOT x312 AND NOT x403 AND NOT x442
Number of literals: 5
Clause #384 W:(-10 -65) x1 AND NOT x134 AND NOT x236 AND NOT x252 AND NOT x424 AND NOT x426 AND NOT x490
Number of literals: 7
Clause #385 W:(-41 -4) NOT x35 AND NOT x66 AND NOT x95 AND NOT x97 AND NOT x264 AND NOT x331 AND NOT x370 AND NOT x375 AND NOT x473
Number of literals: 9
Clause #386 W:(57 86) NOT x1 AND NOT x51 AND NOT x59 AND NOT x209 AND NOT x372
Number of literals: 5
Clause #387 W:(-34 -39) NOT x146 AND NOT x239 AND NOT x269 AND NOT x358 AND NOT x423
Number of literals: 5
Clause #388 W:(-3 0) NOT x62 AND NOT x410
Number of literals: 2
Clause #389 W:(10 -122) x2 AND NOT x75 AND NOT x306 AND NOT x309
Number of literals: 4
Clause #390 W:(41 15) NOT x27 AND NOT x119 AND NOT x430 AND NOT x440 AND NOT x461
Number of literals: 5
Clause #391 W:(-16 -29) NOT x64 AND NOT x95 AND NOT x209 AND NOT x485
Number of literals: 4
Clause #392 W:(-61 18) NOT x163 AND NOT x220 AND NOT x252 AND NOT x362 AND NOT x407 AND NOT x422
Number of literals: 6
Clause #393 W:(74 -6) NOT x21 AND NOT x49 AND NOT x127 AND NOT x150 AND NOT x248 AND NOT x374 AND NOT x481
Number of literals: 7
Clause #394 W:(19 -92) NOT x0 AND NOT x154 AND NOT x174 AND NOT x212 AND NOT x249 AND NOT x292 AND NOT x314
Number of literals: 7
Clause #395 W:(36 -17) NOT x382 AND NOT x410 AND NOT x457
Number of literals: 3
Clause #396 W:(31 -74) NOT x32 AND NOT x51 AND NOT x126 AND NOT x138 AND NOT x378 AND NOT x384
Number of literals: 6
Clause #397 W:(-39 -12) NOT x208 AND NOT x262 AND NOT x303
Number of literals: 3
Clause #398 W:(79 -53) NOT x28 AND NOT x206 AND NOT x207 AND NOT x219 AND NOT x277 AND NOT x403 AND NOT x450 AND NOT x491
Number of literals: 8
Clause #399 W:(1 5) x0 AND NOT x48 AND NOT x105 AND NOT x109 AND NOT x308 AND NOT x314
Number of literals: 6
Clause #400 W:(-23 14) NOT x123 AND NOT x143 AND NOT x153 AND NOT x306 AND NOT x346 AND NOT x359
Number of literals: 6
Clause #401 W:(-11 66) NOT x1 AND NOT x159 AND NOT x173 AND NOT x184 AND NOT x231 AND NOT x421 AND NOT x484
Number of literals: 7
Clause #402 W:(-36 -34) NOT x63 AND NOT x108 AND NOT x341 AND NOT x499
Number of literals: 4
Clause #403 W:(24 -60) NOT x156 AND NOT x176 AND NOT x412 AND NOT x454
Number of literals: 4
Clause #404 W:(29 -2) NOT x2 AND NOT x273 AND NOT x499
Number of literals: 3
Clause #405 W:(64 45) NOT x292 AND NOT x409 AND NOT x444 AND NOT x451
Number of literals: 4
Clause #406 W:(5 81) NOT x181 AND NOT x245 AND NOT x251 AND NOT x257 AND NOT x369 AND NOT x433
Number of literals: 6
Clause #407 W:(99 127) NOT x83 AND NOT x176 AND NOT x275 AND NOT x333 AND NOT x389
Number of literals: 5
Clause #408 W:(-1 -104) NOT x11 AND NOT x237 AND NOT x369
Number of literals: 3
Clause #409 W:(172 -12) NOT x44 AND NOT x71 AND NOT x102 AND NOT x262 AND NOT x401 AND NOT x440 AND NOT x485
Number of literals: 7
Clause #410 W:(100 65) NOT x14 AND NOT x246
Number of literals: 2
Clause #411 W:(68 -90) NOT x42 AND NOT x150 AND NOT x337 AND NOT x355 AND NOT x448
Number of literals: 5
Clause #412 W:(-51 27) NOT x170 AND NOT x306 AND NOT x324 AND NOT x365 AND NOT x460
Number of literals: 5
Clause #413 W:(2 114) NOT x8 AND NOT x170 AND NOT x278 AND NOT x290 AND NOT x471
Number of literals: 5
Clause #414 W:(56 120) x1 AND NOT x240 AND NOT x280 AND NOT x298 AND NOT x351 AND NOT x437 AND NOT x449
Number of literals: 7
Clause #415 W:(24 99) NOT x368 AND NOT x463
Number of literals: 2
Clause #416 W:(-72 -146) NOT x0 AND NOT x322 AND NOT x367 AND NOT x480 AND NOT x500
Number of literals: 5
Clause #417 W:(94 65) NOT x195 AND NOT x504
Number of literals: 2
Clause #418 W:(34 35) NOT x49 AND NOT x79 AND NOT x181 AND NOT x188
Number of literals: 4
Clause #419 W:(41 -7) NOT x136 AND NOT x216 AND NOT x241 AND NOT x302 AND NOT x357 AND NOT x409 AND NOT x428
Number of literals: 7
Clause #420 W:(-31 85) NOT x75 AND NOT x96 AND NOT x130 AND NOT x279 AND NOT x299 AND NOT x356 AND NOT x406
Number of literals: 7
Clause #421 W:(21 -203) NOT x225 AND NOT x231 AND NOT x291 AND NOT x351 AND NOT x373
Number of literals: 5
Clause #422 W:(-13 60) NOT x121 AND NOT x198 AND NOT x202 AND NOT x224 AND NOT x260 AND NOT x330 AND NOT x437 AND NOT x462
Number of literals: 8
Clause #423 W:(108 -16) NOT x53 AND NOT x78 AND NOT x140 AND NOT x142 AND NOT x180 AND NOT x440
Number of literals: 6
Clause #424 W:(-122 -46) 
Number of literals: 0
Clause #425 W:(75 76) NOT x44 AND NOT x173 AND NOT x181 AND NOT x290 AND NOT x315
Number of literals: 5
Clause #426 W:(-111 -74) NOT x0 AND NOT x43 AND NOT x498 AND NOT x511
Number of literals: 4
Clause #427 W:(26 54) NOT x67 AND NOT x79 AND NOT x348
Number of literals: 3
Clause #428 W:(-15 29) NOT x201 AND NOT x236 AND NOT x251 AND NOT x321 AND NOT x351 AND NOT x384 AND NOT x421
Number of literals: 7
Clause #429 W:(-72 97) NOT x2 AND NOT x23 AND NOT x134 AND NOT x186 AND NOT x212 AND NOT x220
Number of literals: 6
Clause #430 W:(15 31) NOT x52 AND NOT x409 AND NOT x497
Number of literals: 3
Clause #431 W:(-37 -67) NOT x133 AND NOT x239 AND NOT x254 AND NOT x279 AND NOT x343 AND NOT x373 AND NOT x419 AND NOT x453
Number of literals: 8
Clause #432 W:(-29 -10) NOT x119 AND NOT x225 AND NOT x375 AND NOT x435 AND NOT x439 AND NOT x460
Number of literals: 6
Clause #433 W:(-49 -132) NOT x239 AND NOT x504
Number of literals: 2
Clause #434 W:(-42 -39) NOT x103 AND NOT x211 AND NOT x405 AND NOT x453
Number of literals: 4
Clause #435 W:(17 13) NOT x93 AND NOT x97 AND NOT x98 AND NOT x213 AND NOT x332 AND NOT x461 AND NOT x500
Number of literals: 7
Clause #436 W:(156 78) NOT x255 AND NOT x312 AND NOT x337 AND NOT x346 AND NOT x371
Number of literals: 5
Clause #437 W:(-7 58) NOT x398
Number of literals: 1
Clause #438 W:(2 -6) NOT x28 AND NOT x130 AND NOT x149 AND NOT x270 AND NOT x483
Number of literals: 5
Clause #439 W:(24 28) NOT x263 AND NOT x392 AND NOT x485
Number of literals: 3
Clause #440 W:(48 52) NOT x85 AND NOT x162 AND NOT x266 AND NOT x395 AND NOT x436
Number of literals: 5
Clause #441 W:(22 -27) NOT x35 AND NOT x155 AND NOT x305 AND NOT x307 AND NOT x330 AND NOT x331 AND NOT x481 AND NOT x500
Number of literals: 8
Clause #442 W:(-4 -59) NOT x342 AND NOT x485
Number of literals: 2
Clause #443 W:(64 14) NOT x100 AND NOT x165 AND NOT x305 AND NOT x374 AND NOT x384 AND NOT x437 AND NOT x485
Number of literals: 7
Clause #444 W:(-24 -9) NOT x10 AND NOT x71 AND NOT x282
Number of literals: 3
Clause #445 W:(170 -8) NOT x2 AND NOT x117 AND NOT x186 AND NOT x496
Number of literals: 4
Clause #446 W:(-23 -43) NOT x23 AND NOT x138 AND NOT x286 AND NOT x393 AND NOT x403 AND NOT x475 AND NOT x486
Number of literals: 7
Clause #447 W:(28 -129) NOT x173 AND NOT x294 AND NOT x377 AND NOT x407
Number of literals: 4
Clause #448 W:(-34 84) NOT x142 AND NOT x203 AND NOT x346 AND NOT x359
Number of literals: 4
Clause #449 W:(-81 -28) NOT x206 AND NOT x347 AND NOT x376 AND NOT x419
Number of literals: 4
Clause #450 W:(-61 12) NOT x2 AND NOT x25 AND NOT x141 AND NOT x148 AND NOT x334 AND NOT x399 AND NOT x459
Number of literals: 7
Clause #451 W:(-14 -84) NOT x51 AND NOT x74 AND NOT x75 AND NOT x132 AND NOT x150 AND NOT x325 AND NOT x439 AND NOT x460
Number of literals: 8
Clause #452 W:(-92 -15) NOT x67 AND NOT x85 AND NOT x167 AND NOT x190 AND NOT x219
Number of literals: 5
Clause #453 W:(175 7) NOT x44 AND NOT x451
Number of literals: 2
Clause #454 W:(56 18) NOT x155 AND NOT x197 AND NOT x372 AND NOT x392
Number of literals: 4
Clause #455 W:(46 20) NOT x15 AND NOT x96 AND NOT x177 AND NOT x217 AND NOT x373 AND NOT x376 AND NOT x466
Number of literals: 7
Clause #456 W:(-40 14) NOT x0 AND NOT x286
Number of literals: 2
Clause #457 W:(76 129) NOT x158 AND NOT x206 AND NOT x211 AND NOT x322 AND NOT x412 AND NOT x461
Number of literals: 6
Clause #458 W:(-56 -14) NOT x110 AND NOT x151 AND NOT x393 AND NOT x415
Number of literals: 4
Clause #459 W:(-60 152) NOT x32 AND NOT x56 AND NOT x148 AND NOT x184 AND NOT x283 AND NOT x345 AND NOT x359
Number of literals: 7
Clause #460 W:(-6 -7) NOT x23 AND NOT x83 AND NOT x263 AND NOT x346
Number of literals: 4
Clause #461 W:(-198 -39) NOT x59 AND NOT x274 AND NOT x294 AND NOT x331 AND NOT x455
Number of literals: 5
Clause #462 W:(66 96) NOT x0 AND NOT x66 AND NOT x223 AND NOT x252 AND NOT x293 AND NOT x399 AND NOT x432
Number of literals: 7
Clause #463 W:(28 37) NOT x160 AND NOT x233 AND NOT x313 AND NOT x337 AND NOT x466
Number of literals: 5
Clause #464 W:(-21 19) NOT x0 AND NOT x24 AND NOT x127 AND NOT x203 AND NOT x247
Number of literals: 5
Clause #465 W:(149 10) NOT x78 AND NOT x144 AND NOT x213 AND NOT x332 AND NOT x505 AND NOT x506
Number of literals: 6
Clause #466 W:(-74 39) x0 AND NOT x258 AND NOT x308 AND NOT x380 AND NOT x435 AND NOT x487 AND NOT x505
Number of literals: 7
Clause #467 W:(-74 40) NOT x281 AND NOT x369 AND NOT x388
Number of literals: 3
Clause #468 W:(63 18) NOT x218 AND NOT x386 AND NOT x465
Number of literals: 3
Clause #469 W:(-27 -15) x0 AND NOT x179 AND NOT x198 AND NOT x393 AND NOT x481 AND NOT x488
Number of literals: 6
Clause #470 W:(-1 59) NOT x44 AND NOT x318 AND NOT x329 AND NOT x375
Number of literals: 4
Clause #471 W:(-5 45) NOT x49 AND NOT x64 AND NOT x291 AND NOT x329 AND NOT x400 AND NOT x412 AND NOT x492
Number of literals: 7
Clause #472 W:(47 -80) NOT x31 AND NOT x186 AND NOT x207 AND NOT x373 AND NOT x421
Number of literals: 5
Clause #473 W:(-11 -30) x1 AND NOT x0 AND NOT x143 AND NOT x151 AND NOT x292 AND NOT x371 AND NOT x404 AND NOT x447
Number of literals: 8
Clause #474 W:(1 22) NOT x1 AND NOT x43 AND NOT x93 AND NOT x204 AND NOT x273
Number of literals: 5
Clause #475 W:(-25 32) NOT x128 AND NOT x318 AND NOT x427 AND NOT x479
Number of literals: 4
Clause #476 W:(9 -43) NOT x84 AND NOT x117 AND NOT x129 AND NOT x134 AND NOT x194 AND NOT x226 AND NOT x420 AND NOT x466
Number of literals: 8
Clause #477 W:(-21 16) NOT x22 AND NOT x56 AND NOT x284 AND NOT x287 AND NOT x465
Number of literals: 5
Clause #478 W:(-10 16) NOT x147 AND NOT x200 AND NOT x270 AND NOT x464
Number of literals: 4
Clause #479 W:(-44 58) NOT x1 AND NOT x96 AND NOT x137
Number of literals: 3
Clause #480 W:(29 62) NOT x8 AND NOT x23 AND NOT x300 AND NOT x396 AND NOT x509
Number of literals: 5
Clause #481 W:(158 -45) NOT x15 AND NOT x216 AND NOT x421 AND NOT x467 AND NOT x506
Number of literals: 5
Clause #482 W:(35 110) NOT x1 AND NOT x52 AND NOT x101 AND NOT x111 AND NOT x199 AND NOT x402
Number of literals: 6
Clause #483 W:(-33 4) NOT x2 AND NOT x38 AND NOT x241 AND NOT x250 AND NOT x266 AND NOT x295 AND NOT x350 AND NOT x364 AND NOT x442
Number of literals: 9
Clause #484 W:(-48 -20) NOT x61 AND NOT x85 AND NOT x89 AND NOT x133 AND NOT x145 AND NOT x374
Number of literals: 6
Clause #485 W:(43 10) NOT x132 AND NOT x141 AND NOT x196 AND NOT x221 AND NOT x246 AND NOT x389 AND NOT x401 AND NOT x491
Number of literals: 8
Clause #486 W:(-32 -26) NOT x192 AND NOT x331 AND NOT x374
Number of literals: 3
Clause #487 W:(-96 -147) NOT x155 AND NOT x240 AND NOT x285 AND NOT x408
Number of literals: 4
Clause #488 W:(-57 12) NOT x1 AND NOT x346
Number of literals: 2
Clause #489 W:(-33 43) NOT x17 AND NOT x268 AND NOT x335 AND NOT x376 AND NOT x431 AND NOT x453 AND NOT x496
Number of literals: 7
Clause #490 W:(43 48) NOT x25 AND NOT x72 AND NOT x216 AND NOT x290 AND NOT x436
Number of literals: 5
Clause #491 W:(-67 55) NOT x59 AND NOT x131 AND NOT x320 AND NOT x483 AND NOT x490
Number of literals: 5
Clause #492 W:(-44 -66) NOT x39 AND NOT x221 AND NOT x244 AND NOT x464
Number of literals: 4
Clause #493 W:(74 40) NOT x1 AND NOT x165 AND NOT x350 AND NOT x354 AND NOT x412 AND NOT x465
Number of literals: 6
Clause #494 W:(-94 32) NOT x22 AND NOT x87 AND NOT x352
Number of literals: 3
Clause #495 W:(51 -47) NOT x22 AND NOT x27 AND NOT x185 AND NOT x194 AND NOT x356 AND NOT x394
Number of literals: 6
Clause #496 W:(148 -20) NOT x3 AND NOT x341 AND NOT x438 AND NOT x483 AND NOT x507
Number of literals: 5
Clause #497 W:(28 -71) NOT x92 AND NOT x166 AND NOT x213
Number of literals: 3
Clause #498 W:(-26 -73) NOT x47 AND NOT x83 AND NOT x277 AND NOT x426 AND NOT x455
Number of literals: 5
Clause #499 W:(-2 2) NOT x58 AND NOT x188 AND NOT x370 AND NOT x488
Number of literals: 4
results: Results(training_time_s=8960.674680233002, inference_time_s=1.9324684143066406, memory_usage_mb=611.44140625, accuracy=0.538, precision=0.5525558774203384, recall=0.538, f1_score=0.4257948403513343)
confusion matrix: [[36, 435], [27, 502]]
reporting runs/2024-12-18T17:24:10/results.toml
reporting runs/2024-12-18T17:24:10/confusion_matrix.csv
reporting runs/2024-12-18T17:24:10/weights.csv
