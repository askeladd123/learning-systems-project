creating new run in runs/2024-12-19T21:18:58
reporting parameters in runs/2024-12-19T21:18:58/params.toml, values:
{'epochs': 50, 'number_of_clauses': 100, 't': 800, 's': 0.9884700872858594, 'depth': 7, 'hypervector_size': 256, 'hypervector_bits': 2, 'message_size': 512, 'message_bits': 1, 'double_hashing': False, 'max_included_literals': 32}
loading dataset from /home/ask/skole-learning-systems/attempt1/data/3x3_medium.csv
hashing dataset
saving dataset report to runs/2024-12-19T21:18:58/dataset.toml, content:
{'filename': '/home/ask/skole-learning-systems/attempt1/data/3x3_medium.csv', 'hash-blake2b': 'e9bf73e53fde757aee03a9898821212a0b3ffc12b8ac80471fda9e14e5c6d7ecd20c3cf42daf290055e4d53e56700ff350d4ae6970c2f5d38736556be10fa3de', 'dimensions': 3, 'rows': 10000}
X_train shape: (9000,)
X_test shape: (1000,)
Creating training data
bytecode dump:
>          0	NOP(arg=None, lineno=72)
           2	RESUME(arg=0, lineno=72)
           4	LOAD_GLOBAL(arg=1, lineno=75)
          14	LOAD_FAST(arg=1, lineno=75)
          16	LOAD_ATTR(arg=2, lineno=75)
          36	LOAD_CONST(arg=1, lineno=75)
          38	BINARY_SUBSCR(arg=None, lineno=75)
          42	CALL(arg=1, lineno=75)
          50	GET_ITER(arg=None, lineno=75)
>         52	FOR_ITER(arg=50, lineno=75)
          56	STORE_FAST(arg=2, lineno=75)
          58	LOAD_GLOBAL(arg=1, lineno=76)
          68	LOAD_FAST(arg=0, lineno=76)
          70	LOAD_FAST(arg=0, lineno=76)
          72	LOAD_CONST(arg=2, lineno=76)
          74	BINARY_OP(arg=5, lineno=76)
          78	CALL(arg=2, lineno=76)
          86	GET_ITER(arg=None, lineno=76)
>         88	FOR_ITER(arg=30, lineno=76)
          92	STORE_FAST(arg=3, lineno=76)
          94	LOAD_FAST(arg=3, lineno=77)
          96	LOAD_CONST(arg=3, lineno=77)
          98	BINARY_OP(arg=2, lineno=77)
         102	STORE_FAST(arg=4, lineno=77)
         104	LOAD_FAST(arg=3, lineno=78)
         106	LOAD_CONST(arg=3, lineno=78)
         108	BINARY_OP(arg=6, lineno=78)
         112	STORE_FAST(arg=5, lineno=78)
         114	LOAD_FAST(arg=1, lineno=79)
         116	LOAD_FAST(arg=2, lineno=79)
         118	LOAD_FAST(arg=4, lineno=79)
         120	BUILD_TUPLE(arg=2, lineno=79)
         122	COPY(arg=2, lineno=79)
         124	COPY(arg=2, lineno=79)
         126	BINARY_SUBSCR(arg=None, lineno=79)
         130	LOAD_CONST(arg=4, lineno=79)
         132	LOAD_FAST(arg=5, lineno=79)
         134	BINARY_OP(arg=3, lineno=79)
         138	BINARY_OP(arg=20, lineno=79)
         142	SWAP(arg=3, lineno=79)
         144	SWAP(arg=2, lineno=79)
         146	STORE_SUBSCR(arg=None, lineno=79)
         150	JUMP_BACKWARD(arg=32, lineno=79)
>        152	END_FOR(arg=None, lineno=76)
         154	JUMP_BACKWARD(arg=52, lineno=76)
>        156	END_FOR(arg=None, lineno=75)
         158	RETURN_CONST(arg=0, lineno=75)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=72)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=72)
stack []
dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=75)
stack []
dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0']
dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$X14.2']
dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3']
dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3', '$const36.4']
dispatch pc=42, inst=CALL(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$38binary_subscr.5']
dispatch pc=50, inst=GET_ITER(arg=None, lineno=75)
stack ['$42call.6']
end state. edges=[Edge(pc=52, stack=('$50get_iter.7',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1)])
stack: ['$phi52.0']
state.pc_initial: State(pc_initial=52 nstack_initial=1)
dispatch pc=52, inst=FOR_ITER(arg=50, lineno=75)
stack ['$phi52.0']
end state. edges=[Edge(pc=156, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=156 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
stack: ['$phi156.0', '$phi156.1']
state.pc_initial: State(pc_initial=156 nstack_initial=2)
dispatch pc=156, inst=END_FOR(arg=None, lineno=75)
stack ['$phi156.0', '$phi156.1']
dispatch pc=158, inst=RETURN_CONST(arg=0, lineno=75)
stack []
end state. edges=[]
pending: deque([State(pc_initial=56 nstack_initial=2)])
stack: ['$phi56.0', '$phi56.1']
state.pc_initial: State(pc_initial=56 nstack_initial=2)
dispatch pc=56, inst=STORE_FAST(arg=2, lineno=75)
stack ['$phi56.0', '$phi56.1']
dispatch pc=58, inst=LOAD_GLOBAL(arg=1, lineno=76)
stack ['$phi56.0']
dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2']
dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4']
dispatch pc=72, inst=LOAD_CONST(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5']
dispatch pc=74, inst=BINARY_OP(arg=5, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5', '$const72.6']
dispatch pc=78, inst=CALL(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$binop_mul74.7']
dispatch pc=86, inst=GET_ITER(arg=None, lineno=76)
stack ['$phi56.0', '$78call.8']
end state. edges=[Edge(pc=88, stack=('$phi56.0', '$86get_iter.9'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=88 nstack_initial=2)])
stack: ['$phi88.0', '$phi88.1']
state.pc_initial: State(pc_initial=88 nstack_initial=2)
dispatch pc=88, inst=FOR_ITER(arg=30, lineno=76)
stack ['$phi88.0', '$phi88.1']
end state. edges=[Edge(pc=152, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0), Edge(pc=92, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=152 nstack_initial=3), State(pc_initial=92 nstack_initial=3)])
stack: ['$phi152.0', '$phi152.1', '$phi152.2']
state.pc_initial: State(pc_initial=152 nstack_initial=3)
dispatch pc=152, inst=END_FOR(arg=None, lineno=76)
stack ['$phi152.0', '$phi152.1', '$phi152.2']
dispatch pc=154, inst=JUMP_BACKWARD(arg=52, lineno=76)
stack ['$phi152.0']
end state. edges=[Edge(pc=52, stack=('$phi152.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=92 nstack_initial=3), State(pc_initial=52 nstack_initial=1)])
stack: ['$phi92.0', '$phi92.1', '$phi92.2']
state.pc_initial: State(pc_initial=92 nstack_initial=3)
dispatch pc=92, inst=STORE_FAST(arg=3, lineno=76)
stack ['$phi92.0', '$phi92.1', '$phi92.2']
dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1']
dispatch pc=96, inst=LOAD_CONST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3']
dispatch pc=98, inst=BINARY_OP(arg=2, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3', '$const96.4']
dispatch pc=102, inst=STORE_FAST(arg=4, lineno=77)
stack ['$phi92.0', '$phi92.1', '$binop_floordiv98.5']
dispatch pc=104, inst=LOAD_FAST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1']
dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6']
dispatch pc=108, inst=BINARY_OP(arg=6, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6', '$const106.7']
dispatch pc=112, inst=STORE_FAST(arg=5, lineno=78)
stack ['$phi92.0', '$phi92.1', '$binop_mod108.8']
dispatch pc=114, inst=LOAD_FAST(arg=1, lineno=79)
stack ['$phi92.0', '$phi92.1']
dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9']
dispatch pc=118, inst=LOAD_FAST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10']
dispatch pc=120, inst=BUILD_TUPLE(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10', '$chunk118.11']
dispatch pc=122, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12']
dispatch pc=124, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9']
dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9', '$120build_tuple.12']
dispatch pc=130, inst=LOAD_CONST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13']
dispatch pc=132, inst=LOAD_FAST(arg=5, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14']
dispatch pc=134, inst=BINARY_OP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14', '$pos132.15']
dispatch pc=138, inst=BINARY_OP(arg=20, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$binop_lshift134.16']
dispatch pc=142, inst=SWAP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$binop_ior138.17']
dispatch pc=144, inst=SWAP(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$120build_tuple.12', '$X114.9']
dispatch pc=146, inst=STORE_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$X114.9', '$120build_tuple.12']
dispatch pc=150, inst=JUMP_BACKWARD(arg=32, lineno=79)
stack ['$phi92.0', '$phi92.1']
end state. edges=[Edge(pc=88, stack=('$phi92.0', '$phi92.1'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1), State(pc_initial=88 nstack_initial=2)])
pending: deque([State(pc_initial=88 nstack_initial=2)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=88 nstack_initial=2): {'$phi88.1'},
             State(pc_initial=92 nstack_initial=3): {'$phi92.2'},
             State(pc_initial=152 nstack_initial=3): set(),
             State(pc_initial=156 nstack_initial=2): set()})
defmap: {'$phi152.2': State(pc_initial=88 nstack_initial=2),
 '$phi156.1': State(pc_initial=52 nstack_initial=1),
 '$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi88.1': State(pc_initial=56 nstack_initial=2),
 '$phi92.2': State(pc_initial=88 nstack_initial=2)}
phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi152.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi152.0',
                           State(pc_initial=152 nstack_initial=3))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi92.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi92.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=3))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
keep phismap: {'$phi52.0': {('$50get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))},
 '$phi88.1': {('$86get_iter.9', State(pc_initial=56 nstack_initial=2))},
 '$phi92.2': {('$88for_iter.3', State(pc_initial=88 nstack_initial=2))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.7'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'},
             State(pc_initial=56 nstack_initial=2): {'$phi88.1': '$86get_iter.9'},
             State(pc_initial=88 nstack_initial=2): {'$phi92.2': '$88for_iter.3'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$X14.2'}), (16, {'item': '$X14.2', 'res': '$16load_attr.3'}), (36, {'res': '$const36.4'}), (38, {'index': '$const36.4', 'target': '$16load_attr.3', 'res': '$38binary_subscr.5'}), (42, {'func': '$4load_global.0', 'args': ['$38binary_subscr.5'], 'kw_names': None, 'res': '$42call.6'}), (50, {'value': '$42call.6', 'res': '$50get_iter.7'})), outgoing_phis={'$phi52.0': '$50get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.7',)})
block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={156: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'idx': 0, 'res': '$58load_global.2'}), (68, {'res': '$hypervector_size68.4'}), (70, {'res': '$hypervector_size70.5'}), (72, {'res': '$const72.6'}), (74, {'op': '*', 'lhs': '$hypervector_size70.5', 'rhs': '$const72.6', 'res': '$binop_mul74.7'}), (78, {'func': '$58load_global.2', 'args': ['$hypervector_size68.4', '$binop_mul74.7'], 'kw_names': None, 'res': '$78call.8'}), (86, {'value': '$78call.8', 'res': '$86get_iter.9'})), outgoing_phis={'$phi88.1': '$86get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi56.0', '$86get_iter.9')})
block_infos State(pc_initial=88 nstack_initial=2):
AdaptBlockInfo(insts=((88, {'iterator': '$phi88.1', 'pair': '$88for_iter.2', 'indval': '$88for_iter.3', 'pred': '$88for_iter.4'}),), outgoing_phis={'$phi92.2': '$88for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi88.0', '$phi88.1', '$88for_iter.3'), 92: ('$phi88.0', '$phi88.1', '$88for_iter.3')})
block_infos State(pc_initial=92 nstack_initial=3):
AdaptBlockInfo(insts=((92, {'value': '$phi92.2'}), (94, {'res': '$k94.3'}), (96, {'res': '$const96.4'}), (98, {'op': '//', 'lhs': '$k94.3', 'rhs': '$const96.4', 'res': '$binop_floordiv98.5'}), (102, {'value': '$binop_floordiv98.5'}), (104, {'res': '$k104.6'}), (106, {'res': '$const106.7'}), (108, {'op': '%', 'lhs': '$k104.6', 'rhs': '$const106.7', 'res': '$binop_mod108.8'}), (112, {'value': '$binop_mod108.8'}), (114, {'res': '$X114.9'}), (116, {'res': '$i116.10'}), (118, {'res': '$chunk118.11'}), (120, {'items': ['$i116.10', '$chunk118.11'], 'res': '$120build_tuple.12'}), (126, {'index': '$120build_tuple.12', 'target': '$X114.9', 'res': '$126binary_subscr.13'}), (130, {'res': '$const130.14'}), (132, {'res': '$pos132.15'}), (134, {'op': '<<', 'lhs': '$const130.14', 'rhs': '$pos132.15', 'res': '$binop_lshift134.16'}), (138, {'op': '|=', 'lhs': '$126binary_subscr.13', 'rhs': '$binop_lshift134.16', 'res': '$binop_ior138.17'}), (146, {'target': '$X114.9', 'index': '$120build_tuple.12', 'value': '$binop_ior138.17'}), (150, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi92.0', '$phi92.1')})
block_infos State(pc_initial=152 nstack_initial=3):
AdaptBlockInfo(insts=((154, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi152.0',)})
block_infos State(pc_initial=156 nstack_initial=2):
AdaptBlockInfo(insts=((158, {'retval': '$const158.2', 'castval': '$158return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervector_size = arg(0, name=hypervector_size) ['hypervector_size']
    X = arg(1, name=X)                       ['X']
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $16load_attr.3 = getattr(value=X, attr=shape) ['$16load_attr.3', 'X']
    $const36.4 = const(int, 0)               ['$const36.4']
    $38binary_subscr.5 = getitem(value=$16load_attr.3, index=$const36.4, fn=<built-in function getitem>) ['$16load_attr.3', '$38binary_subscr.5', '$const36.4']
    $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None) ['$38binary_subscr.5', '$42call.6', '$4load_global.0']
    $50get_iter.7 = getiter(value=$42call.6) ['$42call.6', '$50get_iter.7']
    $phi52.0 = $50get_iter.7                 ['$50get_iter.7', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 156            ['$52for_iter.3']
label 56:
    i = $phi56.1                             ['$phi56.1', 'i']
    $58load_global.2 = global(range: <class 'range'>) ['$58load_global.2']
    $const72.6 = const(int, 2)               ['$const72.6']
    $binop_mul74.7 = hypervector_size * $const72.6 ['$binop_mul74.7', '$const72.6', 'hypervector_size']
    $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_global.2', '$78call.8', '$binop_mul74.7', 'hypervector_size']
    $86get_iter.9 = getiter(value=$78call.8) ['$78call.8', '$86get_iter.9']
    $phi88.1 = $86get_iter.9                 ['$86get_iter.9', '$phi88.1']
    jump 88                                  []
label 88:
    $88for_iter.2 = iternext(value=$phi88.1) ['$88for_iter.2', '$phi88.1']
    $88for_iter.3 = pair_first(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.3']
    $88for_iter.4 = pair_second(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.4']
    $phi92.2 = $88for_iter.3                 ['$88for_iter.3', '$phi92.2']
    branch $88for_iter.4, 92, 152            ['$88for_iter.4']
label 92:
    k = $phi92.2                             ['$phi92.2', 'k']
    $const96.4 = const(int, 32)              ['$const96.4']
    chunk = k // $const96.4                  ['$const96.4', 'chunk', 'k']
    $const106.7 = const(int, 32)             ['$const106.7']
    pos = k % $const106.7                    ['$const106.7', 'k', 'pos']
    $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)]) ['$120build_tuple.12', 'chunk', 'i']
    $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>) ['$120build_tuple.12', '$126binary_subscr.13', 'X']
    $const130.14 = const(int, 1)             ['$const130.14']
    $binop_lshift134.16 = $const130.14 << pos ['$binop_lshift134.16', '$const130.14', 'pos']
    $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined) ['$126binary_subscr.13', '$binop_ior138.17', '$binop_lshift134.16']
    X[$120build_tuple.12] = $binop_ior138.17 ['$120build_tuple.12', '$binop_ior138.17', 'X']
    jump 88                                  []
label 152:
    jump 52                                  []
label 156:
    $const158.2 = const(NoneType, None)      ['$const158.2']
    $158return_const.3 = cast(value=$const158.2) ['$158return_const.3', '$const158.2']
    return $158return_const.3                ['$158return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: hypervector_size = arg(0, name=hypervector_size)
on stmt: X = arg(1, name=X)
on stmt: $4load_global.0 = global(range: <class 'range'>)
on stmt: $16load_attr.3 = getattr(value=X, attr=shape)
on stmt: $const36.4 = const(int, 0)
on stmt: $38binary_subscr.5 = static_getitem(value=$16load_attr.3, index=0, index_var=$const36.4, fn=<built-in function getitem>)
on stmt: $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $50get_iter.7 = getiter(value=$42call.6)
on stmt: $phi52.0 = $50get_iter.7
on stmt: jump 52
==== SSA block analysis pass on 52
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: $52for_iter.1 = iternext(value=$phi52.0)
on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
on stmt: $phi56.1 = $52for_iter.2
on stmt: branch $52for_iter.3, 56, 156
==== SSA block analysis pass on 56
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: i = $phi56.1
on stmt: $58load_global.2 = global(range: <class 'range'>)
on stmt: $const72.6 = const(int, 2)
on stmt: $binop_mul74.7 = hypervector_size * $const72.6
on stmt: $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $86get_iter.9 = getiter(value=$78call.8)
on stmt: $phi88.1 = $86get_iter.9
on stmt: jump 88
==== SSA block analysis pass on 88
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: $88for_iter.2 = iternext(value=$phi88.1)
on stmt: $88for_iter.3 = pair_first(value=$88for_iter.2)
on stmt: $88for_iter.4 = pair_second(value=$88for_iter.2)
on stmt: $phi92.2 = $88for_iter.3
on stmt: branch $88for_iter.4, 92, 152
==== SSA block analysis pass on 92
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: k = $phi92.2
on stmt: $const96.4 = const(int, 32)
on stmt: chunk = k // $const96.4
on stmt: $const106.7 = const(int, 32)
on stmt: pos = k % $const106.7
on stmt: $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)])
on stmt: $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>)
on stmt: $const130.14 = const(int, 1)
on stmt: $binop_lshift134.16 = $const130.14 << pos
on stmt: $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$120build_tuple.12] = $binop_ior138.17
on stmt: jump 88
==== SSA block analysis pass on 152
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: jump 52
==== SSA block analysis pass on 156
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654d6fa40>
on stmt: $const158.2 = const(NoneType, None)
on stmt: $158return_const.3 = cast(value=$const158.2)
on stmt: return $158return_const.3
defs defaultdict(<class 'list'>,
            {'$120build_tuple.12': [(<numba.core.ir.Assign object at 0x7b7654d6da30>,
                                     92)],
             '$126binary_subscr.13': [(<numba.core.ir.Assign object at 0x7b7654d6fb90>,
                                       92)],
             '$158return_const.3': [(<numba.core.ir.Assign object at 0x7b7654d6ed50>,
                                     156)],
             '$16load_attr.3': [(<numba.core.ir.Assign object at 0x7b7654d6ddc0>,
                                 0)],
             '$38binary_subscr.5': [(<numba.core.ir.Assign object at 0x7b7654d6dd00>,
                                     0)],
             '$42call.6': [(<numba.core.ir.Assign object at 0x7b7654d6e300>,
                            0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7b7654d6de80>,
                                  0)],
             '$50get_iter.7': [(<numba.core.ir.Assign object at 0x7b7654d6e390>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x7b7654d6e540>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x7b7654d6e5d0>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x7b7654d6e660>,
                                52)],
             '$58load_global.2': [(<numba.core.ir.Assign object at 0x7b7654d6e870>,
                                   56)],
             '$78call.8': [(<numba.core.ir.Assign object at 0x7b7654d6ec30>,
                            56)],
             '$86get_iter.9': [(<numba.core.ir.Assign object at 0x7b7654d6ecc0>,
                                56)],
             '$88for_iter.2': [(<numba.core.ir.Assign object at 0x7b7654d6ee40>,
                                88)],
             '$88for_iter.3': [(<numba.core.ir.Assign object at 0x7b7654d6ef00>,
                                88)],
             '$88for_iter.4': [(<numba.core.ir.Assign object at 0x7b7654d6eff0>,
                                88)],
             '$binop_ior138.17': [(<numba.core.ir.Assign object at 0x7b7654d6ffe0>,
                                   92)],
             '$binop_lshift134.16': [(<numba.core.ir.Assign object at 0x7b7654d6fec0>,
                                      92)],
             '$binop_mul74.7': [(<numba.core.ir.Assign object at 0x7b7654d6eb40>,
                                 56)],
             '$const106.7': [(<numba.core.ir.Assign object at 0x7b7654d6f830>,
                              92)],
             '$const130.14': [(<numba.core.ir.Assign object at 0x7b7654d6fc80>,
                               92)],
             '$const158.2': [(<numba.core.ir.Assign object at 0x7b7654d6cbf0>,
                              156)],
             '$const36.4': [(<numba.core.ir.Assign object at 0x7b7654d6e120>,
                             0)],
             '$const72.6': [(<numba.core.ir.Assign object at 0x7b7654d6ea50>,
                             56)],
             '$const96.4': [(<numba.core.ir.Assign object at 0x7b7654d6f410>,
                             92)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x7b7654d6e090>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x7b7654d6e4b0>,
                           52)],
             '$phi88.1': [(<numba.core.ir.Assign object at 0x7b7654d6e990>,
                           56)],
             '$phi92.2': [(<numba.core.ir.Assign object at 0x7b7654d6f080>,
                           88)],
             'X': [(<numba.core.ir.Assign object at 0x7b7654d6e0c0>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x7b7654d6f560>, 92)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x7b7654d6d700>,
                                   0)],
             'i': [(<numba.core.ir.Assign object at 0x7b7654d6e7b0>, 56)],
             'k': [(<numba.core.ir.Assign object at 0x7b7654d6f200>, 92)],
             'pos': [(<numba.core.ir.Assign object at 0x7b7654d6f980>, 92)]})
SSA violators <numba.core.utils.OrderedSet object at 0x7b7658228260>
bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	RESUME(arg=0, lineno=121)
           4	LOAD_FAST(arg=0, lineno=124)
           6	LOAD_FAST(arg=4, lineno=124)
           8	LOAD_CONST(arg=0, lineno=124)
          10	LOAD_CONST(arg=0, lineno=124)
          12	BUILD_SLICE(arg=2, lineno=124)
          14	BUILD_TUPLE(arg=2, lineno=124)
          16	BINARY_SUBSCR(arg=None, lineno=124)
          20	GET_ITER(arg=None, lineno=124)
>         22	FOR_ITER(arg=71, lineno=124)
          26	STORE_FAST(arg=6, lineno=124)
          28	LOAD_FAST(arg=6, lineno=125)
          30	LOAD_CONST(arg=1, lineno=125)
          32	BINARY_OP(arg=2, lineno=125)
          36	STORE_FAST(arg=7, lineno=125)
          38	LOAD_FAST(arg=6, lineno=126)
          40	LOAD_CONST(arg=1, lineno=126)
          42	BINARY_OP(arg=6, lineno=126)
          46	STORE_FAST(arg=8, lineno=126)
          48	LOAD_FAST(arg=5, lineno=128)
          50	LOAD_FAST(arg=2, lineno=128)
          52	LOAD_FAST(arg=3, lineno=128)
          54	BINARY_OP(arg=0, lineno=128)
          58	LOAD_FAST(arg=7, lineno=128)
          60	BUILD_TUPLE(arg=2, lineno=128)
          62	COPY(arg=2, lineno=128)
          64	COPY(arg=2, lineno=128)
          66	BINARY_SUBSCR(arg=None, lineno=128)
          70	LOAD_CONST(arg=2, lineno=128)
          72	LOAD_FAST(arg=8, lineno=128)
          74	BINARY_OP(arg=3, lineno=128)
          78	BINARY_OP(arg=20, lineno=128)
          82	SWAP(arg=3, lineno=128)
          84	SWAP(arg=2, lineno=128)
          86	STORE_SUBSCR(arg=None, lineno=128)
          90	LOAD_FAST(arg=6, lineno=130)
          92	LOAD_FAST(arg=1, lineno=130)
          94	BINARY_OP(arg=0, lineno=130)
          98	LOAD_CONST(arg=1, lineno=130)
         100	BINARY_OP(arg=2, lineno=130)
         104	STORE_FAST(arg=7, lineno=130)
         106	LOAD_FAST(arg=6, lineno=131)
         108	LOAD_FAST(arg=1, lineno=131)
         110	BINARY_OP(arg=0, lineno=131)
         114	LOAD_CONST(arg=1, lineno=131)
         116	BINARY_OP(arg=6, lineno=131)
         120	STORE_FAST(arg=8, lineno=131)
         122	LOAD_FAST(arg=5, lineno=132)
         124	LOAD_FAST(arg=2, lineno=132)
         126	LOAD_FAST(arg=3, lineno=132)
         128	BINARY_OP(arg=0, lineno=132)
         132	LOAD_FAST(arg=7, lineno=132)
         134	BUILD_TUPLE(arg=2, lineno=132)
         136	COPY(arg=2, lineno=132)
         138	COPY(arg=2, lineno=132)
         140	BINARY_SUBSCR(arg=None, lineno=132)
         144	LOAD_CONST(arg=2, lineno=132)
         146	LOAD_FAST(arg=8, lineno=132)
         148	BINARY_OP(arg=3, lineno=132)
         152	UNARY_INVERT(arg=None, lineno=132)
         154	BINARY_OP(arg=14, lineno=132)
         158	SWAP(arg=3, lineno=132)
         160	SWAP(arg=2, lineno=132)
         162	STORE_SUBSCR(arg=None, lineno=132)
         166	JUMP_BACKWARD(arg=73, lineno=132)
>        168	END_FOR(arg=None, lineno=124)
         170	RETURN_CONST(arg=0, lineno=124)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=121)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=121)
stack []
dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=124)
stack []
dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=124)
stack ['$hypervectors4.0']
dispatch pc=8, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1']
dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2']
dispatch pc=12, inst=BUILD_SLICE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2', '$const10.3']
dispatch pc=14, inst=BUILD_TUPLE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$12build_slice.5']
dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=124)
stack ['$hypervectors4.0', '$14build_tuple.6']
dispatch pc=20, inst=GET_ITER(arg=None, lineno=124)
stack ['$16binary_subscr.7']
end state. edges=[Edge(pc=22, stack=('$20get_iter.8',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
stack: ['$phi22.0']
state.pc_initial: State(pc_initial=22 nstack_initial=1)
dispatch pc=22, inst=FOR_ITER(arg=71, lineno=124)
stack ['$phi22.0']
end state. edges=[Edge(pc=168, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0), Edge(pc=26, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=168 nstack_initial=2), State(pc_initial=26 nstack_initial=2)])
stack: ['$phi168.0', '$phi168.1']
state.pc_initial: State(pc_initial=168 nstack_initial=2)
dispatch pc=168, inst=END_FOR(arg=None, lineno=124)
stack ['$phi168.0', '$phi168.1']
dispatch pc=170, inst=RETURN_CONST(arg=0, lineno=124)
stack []
end state. edges=[]
pending: deque([State(pc_initial=26 nstack_initial=2)])
stack: ['$phi26.0', '$phi26.1']
state.pc_initial: State(pc_initial=26 nstack_initial=2)
dispatch pc=26, inst=STORE_FAST(arg=6, lineno=124)
stack ['$phi26.0', '$phi26.1']
dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=125)
stack ['$phi26.0']
dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=125)
stack ['$phi26.0', '$k28.2']
dispatch pc=32, inst=BINARY_OP(arg=2, lineno=125)
stack ['$phi26.0', '$k28.2', '$const30.3']
dispatch pc=36, inst=STORE_FAST(arg=7, lineno=125)
stack ['$phi26.0', '$binop_floordiv32.4']
dispatch pc=38, inst=LOAD_FAST(arg=6, lineno=126)
stack ['$phi26.0']
dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=126)
stack ['$phi26.0', '$k38.5']
dispatch pc=42, inst=BINARY_OP(arg=6, lineno=126)
stack ['$phi26.0', '$k38.5', '$const40.6']
dispatch pc=46, inst=STORE_FAST(arg=8, lineno=126)
stack ['$phi26.0', '$binop_mod42.7']
dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=128)
stack ['$phi26.0']
dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8']
dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9']
dispatch pc=54, inst=BINARY_OP(arg=0, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9', '$node52.10']
dispatch pc=58, inst=LOAD_FAST(arg=7, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11']
dispatch pc=60, inst=BUILD_TUPLE(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11', '$chunk58.12']
dispatch pc=62, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13']
dispatch pc=64, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8']
dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8', '$60build_tuple.13']
dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14']
dispatch pc=72, inst=LOAD_FAST(arg=8, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15']
dispatch pc=74, inst=BINARY_OP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15', '$pos72.16']
dispatch pc=78, inst=BINARY_OP(arg=20, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$binop_lshift74.17']
dispatch pc=82, inst=SWAP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$binop_ior78.18']
dispatch pc=84, inst=SWAP(arg=2, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$60build_tuple.13', '$X48.8']
dispatch pc=86, inst=STORE_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$X48.8', '$60build_tuple.13']
dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=130)
stack ['$phi26.0']
dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=130)
stack ['$phi26.0', '$k90.19']
dispatch pc=94, inst=BINARY_OP(arg=0, lineno=130)
stack ['$phi26.0', '$k90.19', '$hypervector_size92.20']
dispatch pc=98, inst=LOAD_CONST(arg=1, lineno=130)
stack ['$phi26.0', '$binop_add94.21']
dispatch pc=100, inst=BINARY_OP(arg=2, lineno=130)
stack ['$phi26.0', '$binop_add94.21', '$const98.22']
dispatch pc=104, inst=STORE_FAST(arg=7, lineno=130)
stack ['$phi26.0', '$binop_floordiv100.23']
dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=131)
stack ['$phi26.0']
dispatch pc=108, inst=LOAD_FAST(arg=1, lineno=131)
stack ['$phi26.0', '$k106.24']
dispatch pc=110, inst=BINARY_OP(arg=0, lineno=131)
stack ['$phi26.0', '$k106.24', '$hypervector_size108.25']
dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=131)
stack ['$phi26.0', '$binop_add110.26']
dispatch pc=116, inst=BINARY_OP(arg=6, lineno=131)
stack ['$phi26.0', '$binop_add110.26', '$const114.27']
dispatch pc=120, inst=STORE_FAST(arg=8, lineno=131)
stack ['$phi26.0', '$binop_mod116.28']
dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=132)
stack ['$phi26.0']
dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29']
dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30']
dispatch pc=128, inst=BINARY_OP(arg=0, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30', '$node126.31']
dispatch pc=132, inst=LOAD_FAST(arg=7, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32']
dispatch pc=134, inst=BUILD_TUPLE(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32', '$chunk132.33']
dispatch pc=136, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34']
dispatch pc=138, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29']
dispatch pc=140, inst=BINARY_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29', '$134build_tuple.34']
dispatch pc=144, inst=LOAD_CONST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35']
dispatch pc=146, inst=LOAD_FAST(arg=8, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36']
dispatch pc=148, inst=BINARY_OP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36', '$pos146.37']
dispatch pc=152, inst=UNARY_INVERT(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$binop_lshift148.38']
dispatch pc=154, inst=BINARY_OP(arg=14, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$152unary_invert.39']
dispatch pc=158, inst=SWAP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$binop_iand154.40']
dispatch pc=160, inst=SWAP(arg=2, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$134build_tuple.34', '$X122.29']
dispatch pc=162, inst=STORE_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$X122.29', '$134build_tuple.34']
dispatch pc=166, inst=JUMP_BACKWARD(arg=73, lineno=132)
stack ['$phi26.0']
end state. edges=[Edge(pc=22, stack=('$phi26.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=1): {'$phi22.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=168 nstack_initial=2): set()})
defmap: {'$phi168.1': State(pc_initial=22 nstack_initial=1),
 '$phi22.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=22 nstack_initial=1)}
phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
keep phismap: {'$phi22.0': {('$20get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$22for_iter.2', State(pc_initial=22 nstack_initial=1))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi22.0': '$20get_iter.8'},
             State(pc_initial=22 nstack_initial=1): {'$phi26.1': '$22for_iter.2'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$hypervectors4.0'}), (6, {'res': '$symbol6.1'}), (8, {'res': '$const8.2'}), (10, {'res': '$const10.3'}), (12, {'start': '$const8.2', 'stop': '$const10.3', 'step': None, 'res': '$12build_slice.5', 'slicevar': '$12build_slice.4'}), (14, {'items': ['$symbol6.1', '$12build_slice.5'], 'res': '$14build_tuple.6'}), (16, {'index': '$14build_tuple.6', 'target': '$hypervectors4.0', 'res': '$16binary_subscr.7'}), (20, {'value': '$16binary_subscr.7', 'res': '$20get_iter.8'})), outgoing_phis={'$phi22.0': '$20get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$20get_iter.8',)})
block_infos State(pc_initial=22 nstack_initial=1):
AdaptBlockInfo(insts=((22, {'iterator': '$phi22.0', 'pair': '$22for_iter.1', 'indval': '$22for_iter.2', 'pred': '$22for_iter.3'}),), outgoing_phis={'$phi26.1': '$22for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: ('$phi22.0', '$22for_iter.2'), 26: ('$phi22.0', '$22for_iter.2')})
block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$k28.2'}), (30, {'res': '$const30.3'}), (32, {'op': '//', 'lhs': '$k28.2', 'rhs': '$const30.3', 'res': '$binop_floordiv32.4'}), (36, {'value': '$binop_floordiv32.4'}), (38, {'res': '$k38.5'}), (40, {'res': '$const40.6'}), (42, {'op': '%', 'lhs': '$k38.5', 'rhs': '$const40.6', 'res': '$binop_mod42.7'}), (46, {'value': '$binop_mod42.7'}), (48, {'res': '$X48.8'}), (50, {'res': '$graph_index50.9'}), (52, {'res': '$node52.10'}), (54, {'op': '+', 'lhs': '$graph_index50.9', 'rhs': '$node52.10', 'res': '$binop_add54.11'}), (58, {'res': '$chunk58.12'}), (60, {'items': ['$binop_add54.11', '$chunk58.12'], 'res': '$60build_tuple.13'}), (66, {'index': '$60build_tuple.13', 'target': '$X48.8', 'res': '$66binary_subscr.14'}), (70, {'res': '$const70.15'}), (72, {'res': '$pos72.16'}), (74, {'op': '<<', 'lhs': '$const70.15', 'rhs': '$pos72.16', 'res': '$binop_lshift74.17'}), (78, {'op': '|=', 'lhs': '$66binary_subscr.14', 'rhs': '$binop_lshift74.17', 'res': '$binop_ior78.18'}), (86, {'target': '$X48.8', 'index': '$60build_tuple.13', 'value': '$binop_ior78.18'}), (90, {'res': '$k90.19'}), (92, {'res': '$hypervector_size92.20'}), (94, {'op': '+', 'lhs': '$k90.19', 'rhs': '$hypervector_size92.20', 'res': '$binop_add94.21'}), (98, {'res': '$const98.22'}), (100, {'op': '//', 'lhs': '$binop_add94.21', 'rhs': '$const98.22', 'res': '$binop_floordiv100.23'}), (104, {'value': '$binop_floordiv100.23'}), (106, {'res': '$k106.24'}), (108, {'res': '$hypervector_size108.25'}), (110, {'op': '+', 'lhs': '$k106.24', 'rhs': '$hypervector_size108.25', 'res': '$binop_add110.26'}), (114, {'res': '$const114.27'}), (116, {'op': '%', 'lhs': '$binop_add110.26', 'rhs': '$const114.27', 'res': '$binop_mod116.28'}), (120, {'value': '$binop_mod116.28'}), (122, {'res': '$X122.29'}), (124, {'res': '$graph_index124.30'}), (126, {'res': '$node126.31'}), (128, {'op': '+', 'lhs': '$graph_index124.30', 'rhs': '$node126.31', 'res': '$binop_add128.32'}), (132, {'res': '$chunk132.33'}), (134, {'items': ['$binop_add128.32', '$chunk132.33'], 'res': '$134build_tuple.34'}), (140, {'index': '$134build_tuple.34', 'target': '$X122.29', 'res': '$140binary_subscr.35'}), (144, {'res': '$const144.36'}), (146, {'res': '$pos146.37'}), (148, {'op': '<<', 'lhs': '$const144.36', 'rhs': '$pos146.37', 'res': '$binop_lshift148.38'}), (152, {'value': '$binop_lshift148.38', 'res': '$152unary_invert.39'}), (154, {'op': '&=', 'lhs': '$140binary_subscr.35', 'rhs': '$152unary_invert.39', 'res': '$binop_iand154.40'}), (162, {'target': '$X122.29', 'index': '$134build_tuple.34', 'value': '$binop_iand154.40'}), (166, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$phi26.0',)})
block_infos State(pc_initial=168 nstack_initial=2):
AdaptBlockInfo(insts=((170, {'retval': '$const170.2', 'castval': '$170return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervectors = arg(0, name=hypervectors) ['hypervectors']
    hypervector_size = arg(1, name=hypervector_size) ['hypervector_size']
    graph_index = arg(2, name=graph_index)   ['graph_index']
    node = arg(3, name=node)                 ['node']
    symbol = arg(4, name=symbol)             ['symbol']
    X = arg(5, name=X)                       ['X']
    $const8.2 = const(NoneType, None)        ['$const8.2']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12build_slice.4 = global(slice: <class 'slice'>) ['$12build_slice.4']
    $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None) ['$12build_slice.4', '$12build_slice.5', '$const10.3', '$const8.2']
    $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)]) ['$12build_slice.5', '$14build_tuple.6', 'symbol']
    $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>) ['$14build_tuple.6', '$16binary_subscr.7', 'hypervectors']
    $20get_iter.8 = getiter(value=$16binary_subscr.7) ['$16binary_subscr.7', '$20get_iter.8']
    $phi22.0 = $20get_iter.8                 ['$20get_iter.8', '$phi22.0']
    jump 22                                  []
label 22:
    $22for_iter.1 = iternext(value=$phi22.0) ['$22for_iter.1', '$phi22.0']
    $22for_iter.2 = pair_first(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.2']
    $22for_iter.3 = pair_second(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.3']
    $phi26.1 = $22for_iter.2                 ['$22for_iter.2', '$phi26.1']
    branch $22for_iter.3, 26, 168            ['$22for_iter.3']
label 26:
    k = $phi26.1                             ['$phi26.1', 'k']
    $const30.3 = const(int, 32)              ['$const30.3']
    chunk = k // $const30.3                  ['$const30.3', 'chunk', 'k']
    $const40.6 = const(int, 32)              ['$const40.6']
    pos = k % $const40.6                     ['$const40.6', 'k', 'pos']
    $binop_add54.11 = graph_index + node     ['$binop_add54.11', 'graph_index', 'node']
    $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)]) ['$60build_tuple.13', '$binop_add54.11', 'chunk']
    $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>) ['$60build_tuple.13', '$66binary_subscr.14', 'X']
    $const70.15 = const(int, 1)              ['$const70.15']
    $binop_lshift74.17 = $const70.15 << pos  ['$binop_lshift74.17', '$const70.15', 'pos']
    $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined) ['$66binary_subscr.14', '$binop_ior78.18', '$binop_lshift74.17']
    X[$60build_tuple.13] = $binop_ior78.18   ['$60build_tuple.13', '$binop_ior78.18', 'X']
    $binop_add94.21 = k + hypervector_size   ['$binop_add94.21', 'hypervector_size', 'k']
    $const98.22 = const(int, 32)             ['$const98.22']
    chunk = $binop_add94.21 // $const98.22   ['$binop_add94.21', '$const98.22', 'chunk']
    $binop_add110.26 = k + hypervector_size  ['$binop_add110.26', 'hypervector_size', 'k']
    $const114.27 = const(int, 32)            ['$const114.27']
    pos = $binop_add110.26 % $const114.27    ['$binop_add110.26', '$const114.27', 'pos']
    $binop_add128.32 = graph_index + node    ['$binop_add128.32', 'graph_index', 'node']
    $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)]) ['$134build_tuple.34', '$binop_add128.32', 'chunk']
    $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>) ['$134build_tuple.34', '$140binary_subscr.35', 'X']
    $const144.36 = const(int, 1)             ['$const144.36']
    $binop_lshift148.38 = $const144.36 << pos ['$binop_lshift148.38', '$const144.36', 'pos']
    $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38) ['$152unary_invert.39', '$binop_lshift148.38']
    $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined) ['$140binary_subscr.35', '$152unary_invert.39', '$binop_iand154.40']
    X[$134build_tuple.34] = $binop_iand154.40 ['$134build_tuple.34', '$binop_iand154.40', 'X']
    jump 22                                  []
label 168:
    $const170.2 = const(NoneType, None)      ['$const170.2']
    $170return_const.3 = cast(value=$const170.2) ['$170return_const.3', '$const170.2']
    return $170return_const.3                ['$170return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654ae8cb0>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block analysis pass on 22
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654ae8cb0>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block analysis pass on 26
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654ae8cb0>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block analysis pass on 168
Running <numba.core.ssa._GatherDefsHandler object at 0x7b7654ae8cb0>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
defs defaultdict(<class 'list'>,
            {'$12build_slice.4': [(<numba.core.ir.Assign object at 0x7b7654ae9d30>,
                                   0)],
             '$12build_slice.5': [(<numba.core.ir.Assign object at 0x7b7654ae9e20>,
                                   0)],
             '$134build_tuple.34': [(<numba.core.ir.Assign object at 0x7b7654995070>,
                                     26)],
             '$140binary_subscr.35': [(<numba.core.ir.Assign object at 0x7b76549951f0>,
                                       26)],
             '$14build_tuple.6': [(<numba.core.ir.Assign object at 0x7b7654ae9f40>,
                                   0)],
             '$152unary_invert.39': [(<numba.core.ir.Assign object at 0x7b7654995670>,
                                      26)],
             '$16binary_subscr.7': [(<numba.core.ir.Assign object at 0x7b7654aea090>,
                                     0)],
             '$170return_const.3': [(<numba.core.ir.Assign object at 0x7b7654aeb5c0>,
                                     168)],
             '$20get_iter.8': [(<numba.core.ir.Assign object at 0x7b7654aea1b0>,
                                0)],
             '$22for_iter.1': [(<numba.core.ir.Assign object at 0x7b7654aea390>,
                                22)],
             '$22for_iter.2': [(<numba.core.ir.Assign object at 0x7b7654aea4b0>,
                                22)],
             '$22for_iter.3': [(<numba.core.ir.Assign object at 0x7b7654aea5d0>,
                                22)],
             '$60build_tuple.13': [(<numba.core.ir.Assign object at 0x7b7654aeb710>,
                                    26)],
             '$66binary_subscr.14': [(<numba.core.ir.Assign object at 0x7b7654aeb890>,
                                      26)],
             '$binop_add110.26': [(<numba.core.ir.Assign object at 0x7b7654994740>,
                                   26)],
             '$binop_add128.32': [(<numba.core.ir.Assign object at 0x7b7654994e60>,
                                   26)],
             '$binop_add54.11': [(<numba.core.ir.Assign object at 0x7b7654aeb500>,
                                  26)],
             '$binop_add94.21': [(<numba.core.ir.Assign object at 0x7b7654994110>,
                                  26)],
             '$binop_iand154.40': [(<numba.core.ir.Assign object at 0x7b76549957f0>,
                                    26)],
             '$binop_ior78.18': [(<numba.core.ir.Assign object at 0x7b7654aebd40>,
                                  26)],
             '$binop_lshift148.38': [(<numba.core.ir.Assign object at 0x7b7654995550>,
                                      26)],
             '$binop_lshift74.17': [(<numba.core.ir.Assign object at 0x7b7654aebbf0>,
                                     26)],
             '$const10.3': [(<numba.core.ir.Assign object at 0x7b7654ae9c10>,
                             0)],
             '$const114.27': [(<numba.core.ir.Assign object at 0x7b7654994830>,
                               26)],
             '$const144.36': [(<numba.core.ir.Assign object at 0x7b76549952e0>,
                               26)],
             '$const170.2': [(<numba.core.ir.Assign object at 0x7b7654aeb1a0>,
                              168)],
             '$const30.3': [(<numba.core.ir.Assign object at 0x7b7654aeaa20>,
                             26)],
             '$const40.6': [(<numba.core.ir.Assign object at 0x7b7654aeae70>,
                             26)],
             '$const70.15': [(<numba.core.ir.Assign object at 0x7b7654aeb980>,
                              26)],
             '$const8.2': [(<numba.core.ir.Assign object at 0x7b7654ae9af0>,
                            0)],
             '$const98.22': [(<numba.core.ir.Assign object at 0x7b7654994200>,
                              26)],
             '$phi22.0': [(<numba.core.ir.Assign object at 0x7b7654ae99d0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7b7654aea660>,
                           22)],
             'X': [(<numba.core.ir.Assign object at 0x7b7654ae97f0>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x7b7654aeaba0>, 26),
                       (<numba.core.ir.Assign object at 0x7b7654994380>, 26)],
             'graph_index': [(<numba.core.ir.Assign object at 0x7b7654ae9520>,
                              0)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x7b7654ae9100>,
                                   0)],
             'hypervectors': [(<numba.core.ir.Assign object at 0x7b7654ae93d0>,
                               0)],
             'k': [(<numba.core.ir.Assign object at 0x7b7654aea810>, 26)],
             'node': [(<numba.core.ir.Assign object at 0x7b7654ae9610>, 0)],
             'pos': [(<numba.core.ir.Assign object at 0x7b7654aeaff0>, 26),
                     (<numba.core.ir.Assign object at 0x7b76549949b0>, 26)],
             'symbol': [(<numba.core.ir.Assign object at 0x7b7654ae9700>, 0)]})
SSA violators <numba.core.utils.OrderedSet object at 0x7b7654d97c20>
Fix SSA violator on var chunk
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654cc2a80>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654cc2a80>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654cc2a80>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
first assign: chunk
replaced with: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
replaced with: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654cc2a80>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7b7654d6cad0>,
                  <numba.core.ir.Assign object at 0x7b7654d6d940>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x7b7654cc2a80>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x7b7654cc2a80>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x7b7654cc2a80>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
replaced with: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x7b7654cc2a80>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Fix SSA violator on var pos
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654d6e210>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654d6e210>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654d6e210>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
first assign: pos
replaced with: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
replaced with: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x7b7654d6e210>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7b7654cc2bd0>,
                  <numba.core.ir.Assign object at 0x7b7654ae8c50>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x7b7654ae9160>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x7b7654ae9160>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x7b7654ae9160>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
find_def var='pos' stmt=$binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
find_def var='pos' stmt=$binop_lshift148.38 = $const144.36 << pos
replaced with: $binop_lshift148.38 = $const144.36 << pos.1
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x7b7654ae9160>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Creating test data
Epoch#1 -- Accuracy train: 0.694 -- Accuracy test: 0.688 
Epoch#2 -- Accuracy train: 0.7555555555555555 -- Accuracy test: 0.774 
Epoch#3 -- Accuracy train: 0.7752222222222223 -- Accuracy test: 0.788 
Epoch#4 -- Accuracy train: 0.7937777777777778 -- Accuracy test: 0.792 
Epoch#5 -- Accuracy train: 0.6967777777777778 -- Accuracy test: 0.696 
Epoch#6 -- Accuracy train: 0.8463333333333334 -- Accuracy test: 0.837 
Epoch#7 -- Accuracy train: 0.7344444444444445 -- Accuracy test: 0.743 
Epoch#8 -- Accuracy train: 0.8533333333333334 -- Accuracy test: 0.855 
Epoch#9 -- Accuracy train: 0.8787777777777778 -- Accuracy test: 0.874 
Epoch#10 -- Accuracy train: 0.8955555555555555 -- Accuracy test: 0.902 
Epoch#11 -- Accuracy train: 0.8871111111111111 -- Accuracy test: 0.89 
Epoch#12 -- Accuracy train: 0.8313333333333334 -- Accuracy test: 0.825 
Epoch#13 -- Accuracy train: 0.9118888888888889 -- Accuracy test: 0.905 
Epoch#14 -- Accuracy train: 0.8462222222222222 -- Accuracy test: 0.836 
Epoch#15 -- Accuracy train: 0.8663333333333333 -- Accuracy test: 0.852 
Epoch#16 -- Accuracy train: 0.8818888888888889 -- Accuracy test: 0.891 
Epoch#17 -- Accuracy train: 0.7914444444444444 -- Accuracy test: 0.784 
Epoch#18 -- Accuracy train: 0.8511111111111112 -- Accuracy test: 0.846 
Epoch#19 -- Accuracy train: 0.8131111111111111 -- Accuracy test: 0.812 
Epoch#20 -- Accuracy train: 0.8725555555555555 -- Accuracy test: 0.862 
Epoch#21 -- Accuracy train: 0.9058888888888889 -- Accuracy test: 0.907 
Epoch#22 -- Accuracy train: 0.6798888888888889 -- Accuracy test: 0.69 
Epoch#23 -- Accuracy train: 0.7702222222222223 -- Accuracy test: 0.764 
Epoch#24 -- Accuracy train: 0.8505555555555555 -- Accuracy test: 0.836 
Epoch#25 -- Accuracy train: 0.8788888888888889 -- Accuracy test: 0.885 
Epoch#26 -- Accuracy train: 0.9013333333333333 -- Accuracy test: 0.883 
Epoch#27 -- Accuracy train: 0.9155555555555556 -- Accuracy test: 0.91 
Epoch#28 -- Accuracy train: 0.8976666666666666 -- Accuracy test: 0.891 
Epoch#29 -- Accuracy train: 0.8803333333333333 -- Accuracy test: 0.88 
Epoch#30 -- Accuracy train: 0.9008888888888889 -- Accuracy test: 0.89 
Epoch#31 -- Accuracy train: 0.9084444444444445 -- Accuracy test: 0.904 
Epoch#32 -- Accuracy train: 0.9164444444444444 -- Accuracy test: 0.922 
Epoch#33 -- Accuracy train: 0.9194444444444444 -- Accuracy test: 0.913 
Epoch#34 -- Accuracy train: 0.892 -- Accuracy test: 0.884 
Epoch#35 -- Accuracy train: 0.9002222222222223 -- Accuracy test: 0.895 
Epoch#36 -- Accuracy train: 0.9021111111111111 -- Accuracy test: 0.905 
Epoch#37 -- Accuracy train: 0.914 -- Accuracy test: 0.924 
Epoch#38 -- Accuracy train: 0.9167777777777778 -- Accuracy test: 0.909 
Epoch#39 -- Accuracy train: 0.9218888888888889 -- Accuracy test: 0.928 
Epoch#40 -- Accuracy train: 0.9225555555555556 -- Accuracy test: 0.926 
Epoch#41 -- Accuracy train: 0.6801111111111111 -- Accuracy test: 0.699 
Epoch#42 -- Accuracy train: 0.6947777777777778 -- Accuracy test: 0.69 
Epoch#43 -- Accuracy train: 0.7595555555555555 -- Accuracy test: 0.784 
Epoch#44 -- Accuracy train: 0.756 -- Accuracy test: 0.771 
Epoch#45 -- Accuracy train: 0.7585555555555555 -- Accuracy test: 0.765 
Epoch#46 -- Accuracy train: 0.7694444444444445 -- Accuracy test: 0.779 
Epoch#47 -- Accuracy train: 0.7911111111111111 -- Accuracy test: 0.8 
Epoch#48 -- Accuracy train: 0.7911111111111111 -- Accuracy test: 0.8 
Epoch#49 -- Accuracy train: 0.6982222222222222 -- Accuracy test: 0.69 
Epoch#50 -- Accuracy train: 0.7003333333333334 -- Accuracy test: 0.692 
Time: 499.00077080726624
Clause #0 W:(223 -159) x74 AND x157 AND NOT x197 AND NOT x223
Number of literals: 4
Clause #1 W:(-19 -29) NOT x74 AND NOT x157
Number of literals: 2
Clause #2 W:(71 74) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #3 W:(-85 184) x197 AND x223
Number of literals: 2
Clause #4 W:(-96 -67) NOT x197 AND NOT x223
Number of literals: 2
Clause #5 W:(-253 149) x74 AND x157 AND NOT x17 AND NOT x147 AND NOT x197 AND NOT x223
Number of literals: 6
Clause #6 W:(-47 -17) NOT x197 AND NOT x223
Number of literals: 2
Clause #7 W:(36 66) 
Number of literals: 0
Clause #8 W:(17 125) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #9 W:(-241 26) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #10 W:(-86 -6) x197 AND x223 AND NOT x17 AND NOT x74 AND NOT x147 AND NOT x157
Number of literals: 6
Clause #11 W:(-112 -140) NOT x17 AND NOT x147
Number of literals: 2
Clause #12 W:(191 -149) NOT x197 AND NOT x223
Number of literals: 2
Clause #13 W:(51 -64) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #14 W:(-585 345) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #15 W:(184 -267) NOT x197 AND NOT x223
Number of literals: 2
Clause #16 W:(-88 109) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x74 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x157 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 254
Clause #17 W:(131 -191) NOT x197 AND NOT x223
Number of literals: 2
Clause #18 W:(72 -17) NOT x197 AND NOT x223
Number of literals: 2
Clause #19 W:(170 0) NOT x197 AND NOT x223
Number of literals: 2
Clause #20 W:(265 -175) NOT x197 AND NOT x223
Number of literals: 2
Clause #21 W:(-219 163) NOT x17 AND NOT x147
Number of literals: 2
Clause #22 W:(135 -135) x74 AND x157 AND NOT x17 AND NOT x147 AND NOT x197 AND NOT x223
Number of literals: 6
Clause #23 W:(13 161) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #24 W:(-29 93) x197 AND x223
Number of literals: 2
Clause #25 W:(99 202) NOT x17 AND NOT x147
Number of literals: 2
Clause #26 W:(19 50) NOT x74 AND NOT x157
Number of literals: 2
Clause #27 W:(-78 -163) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #28 W:(-8 12) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #29 W:(-90 -99) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #30 W:(277 14) x74 AND x157 AND NOT x197 AND NOT x223
Number of literals: 4
Clause #31 W:(3 15) NOT x197 AND NOT x223
Number of literals: 2
Clause #32 W:(-365 503) x197 AND x223 AND NOT x17 AND NOT x74 AND NOT x147 AND NOT x157
Number of literals: 6
Clause #33 W:(9 -162) x197 AND x223
Number of literals: 2
Clause #34 W:(135 -36) NOT x197 AND NOT x223
Number of literals: 2
Clause #35 W:(61 -5) NOT x197 AND NOT x223
Number of literals: 2
Clause #36 W:(-278 97) x197 AND x223 AND NOT x17 AND NOT x74 AND NOT x147 AND NOT x157
Number of literals: 6
Clause #37 W:(-228 -58) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #38 W:(263 -57) x74 AND x157 AND NOT x197 AND NOT x223
Number of literals: 4
Clause #39 W:(-215 -267) NOT x74 AND NOT x157
Number of literals: 2
Clause #40 W:(45 132) x197 AND x223 AND NOT x17 AND NOT x74 AND NOT x147 AND NOT x157
Number of literals: 6
Clause #41 W:(-257 254) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #42 W:(416 -544) NOT x197 AND NOT x223
Number of literals: 2
Clause #43 W:(-161 -118) NOT x17 AND NOT x147
Number of literals: 2
Clause #44 W:(101 268) 
Number of literals: 0
Clause #45 W:(-331 96) x197 AND x223
Number of literals: 2
Clause #46 W:(236 -38) NOT x197 AND NOT x223
Number of literals: 2
Clause #47 W:(-358 24) x197 AND x223
Number of literals: 2
Clause #48 W:(123 74) NOT x74 AND NOT x157
Number of literals: 2
Clause #49 W:(268 -292) NOT x197 AND NOT x223
Number of literals: 2
Clause #50 W:(176 70) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #51 W:(423 -429) 
Number of literals: 0
Clause #52 W:(-119 149) x197 AND x223 AND NOT x17 AND NOT x74 AND NOT x147 AND NOT x157
Number of literals: 6
Clause #53 W:(-188 175) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #54 W:(176 -221) NOT x197 AND NOT x223
Number of literals: 2
Clause #55 W:(142 77) x74 AND x157 AND NOT x197 AND NOT x223
Number of literals: 4
Clause #56 W:(125 43) NOT x197 AND NOT x223
Number of literals: 2
Clause #57 W:(-30 111) x197 AND x223
Number of literals: 2
Clause #58 W:(254 -195) NOT x197 AND NOT x223
Number of literals: 2
Clause #59 W:(-140 -101) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #60 W:(175 -80) x74 AND x157 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 254
Clause #61 W:(-122 -53) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #62 W:(-20 287) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x74 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x157 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 254
Clause #63 W:(76 91) 
Number of literals: 0
Clause #64 W:(401 -21) NOT x197 AND NOT x223
Number of literals: 2
Clause #65 W:(-189 58) x197 AND x223
Number of literals: 2
Clause #66 W:(-46 -282) NOT x197 AND NOT x223
Number of literals: 2
Clause #67 W:(152 -124) x74 AND x157 AND NOT x17 AND NOT x147 AND NOT x197 AND NOT x223
Number of literals: 6
Clause #68 W:(-136 -202) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #69 W:(-164 -132) x197 AND x223
Number of literals: 2
Clause #70 W:(-516 457) x197 AND x223 AND NOT x17 AND NOT x147
Number of literals: 4
Clause #71 W:(-83 177) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #72 W:(-187 251) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x17 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x74 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x147 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x157 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 256
Clause #73 W:(46 17) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #74 W:(-230 164) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x74 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x157 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 254
Clause #75 W:(408 -223) NOT x197 AND NOT x223
Number of literals: 2
Clause #76 W:(-118 79) x74 AND x157
Number of literals: 2
Clause #77 W:(-187 -101) NOT x197 AND NOT x223
Number of literals: 2
Clause #78 W:(206 -260) NOT x197 AND NOT x223
Number of literals: 2
Clause #79 W:(-204 -7) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 250
Clause #80 W:(-322 69) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #81 W:(74 -52) NOT x197 AND NOT x223
Number of literals: 2
Clause #82 W:(-70 138) x197 AND x223 AND NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #83 W:(-36 27) NOT x17 AND NOT x147
Number of literals: 2
Clause #84 W:(-54 290) x197 AND x223 AND NOT x74 AND NOT x157
Number of literals: 4
Clause #85 W:(-276 79) x197 AND x223
Number of literals: 2
Clause #86 W:(365 -114) NOT x197 AND NOT x223
Number of literals: 2
Clause #87 W:(100 -67) NOT x197 AND NOT x223
Number of literals: 2
Clause #88 W:(-168 85) x197 AND x223
Number of literals: 2
Clause #89 W:(155 -136) x74 AND x157 AND NOT x197 AND NOT x223
Number of literals: 4
Clause #90 W:(-22 305) 
Number of literals: 0
Clause #91 W:(-81 -75) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #92 W:(239 -173) NOT x0 AND NOT x1 AND NOT x2 AND NOT x3 AND NOT x4 AND NOT x5 AND NOT x6 AND NOT x7 AND NOT x8 AND NOT x9 AND NOT x10 AND NOT x11 AND NOT x12 AND NOT x13 AND NOT x14 AND NOT x15 AND NOT x16 AND NOT x18 AND NOT x19 AND NOT x20 AND NOT x21 AND NOT x22 AND NOT x23 AND NOT x24 AND NOT x25 AND NOT x26 AND NOT x27 AND NOT x28 AND NOT x29 AND NOT x30 AND NOT x31 AND NOT x32 AND NOT x33 AND NOT x34 AND NOT x35 AND NOT x36 AND NOT x37 AND NOT x38 AND NOT x39 AND NOT x40 AND NOT x41 AND NOT x42 AND NOT x43 AND NOT x44 AND NOT x45 AND NOT x46 AND NOT x47 AND NOT x48 AND NOT x49 AND NOT x50 AND NOT x51 AND NOT x52 AND NOT x53 AND NOT x54 AND NOT x55 AND NOT x56 AND NOT x57 AND NOT x58 AND NOT x59 AND NOT x60 AND NOT x61 AND NOT x62 AND NOT x63 AND NOT x64 AND NOT x65 AND NOT x66 AND NOT x67 AND NOT x68 AND NOT x69 AND NOT x70 AND NOT x71 AND NOT x72 AND NOT x73 AND NOT x75 AND NOT x76 AND NOT x77 AND NOT x78 AND NOT x79 AND NOT x80 AND NOT x81 AND NOT x82 AND NOT x83 AND NOT x84 AND NOT x85 AND NOT x86 AND NOT x87 AND NOT x88 AND NOT x89 AND NOT x90 AND NOT x91 AND NOT x92 AND NOT x93 AND NOT x94 AND NOT x95 AND NOT x96 AND NOT x97 AND NOT x98 AND NOT x99 AND NOT x100 AND NOT x101 AND NOT x102 AND NOT x103 AND NOT x104 AND NOT x105 AND NOT x106 AND NOT x107 AND NOT x108 AND NOT x109 AND NOT x110 AND NOT x111 AND NOT x112 AND NOT x113 AND NOT x114 AND NOT x115 AND NOT x116 AND NOT x117 AND NOT x118 AND NOT x119 AND NOT x120 AND NOT x121 AND NOT x122 AND NOT x123 AND NOT x124 AND NOT x125 AND NOT x126 AND NOT x127 AND NOT x128 AND NOT x129 AND NOT x130 AND NOT x131 AND NOT x132 AND NOT x133 AND NOT x134 AND NOT x135 AND NOT x136 AND NOT x137 AND NOT x138 AND NOT x139 AND NOT x140 AND NOT x141 AND NOT x142 AND NOT x143 AND NOT x144 AND NOT x145 AND NOT x146 AND NOT x148 AND NOT x149 AND NOT x150 AND NOT x151 AND NOT x152 AND NOT x153 AND NOT x154 AND NOT x155 AND NOT x156 AND NOT x158 AND NOT x159 AND NOT x160 AND NOT x161 AND NOT x162 AND NOT x163 AND NOT x164 AND NOT x165 AND NOT x166 AND NOT x167 AND NOT x168 AND NOT x169 AND NOT x170 AND NOT x171 AND NOT x172 AND NOT x173 AND NOT x174 AND NOT x175 AND NOT x176 AND NOT x177 AND NOT x178 AND NOT x179 AND NOT x180 AND NOT x181 AND NOT x182 AND NOT x183 AND NOT x184 AND NOT x185 AND NOT x186 AND NOT x187 AND NOT x188 AND NOT x189 AND NOT x190 AND NOT x191 AND NOT x192 AND NOT x193 AND NOT x194 AND NOT x195 AND NOT x196 AND NOT x197 AND NOT x198 AND NOT x199 AND NOT x200 AND NOT x201 AND NOT x202 AND NOT x203 AND NOT x204 AND NOT x205 AND NOT x206 AND NOT x207 AND NOT x208 AND NOT x209 AND NOT x210 AND NOT x211 AND NOT x212 AND NOT x213 AND NOT x214 AND NOT x215 AND NOT x216 AND NOT x217 AND NOT x218 AND NOT x219 AND NOT x220 AND NOT x221 AND NOT x222 AND NOT x223 AND NOT x224 AND NOT x225 AND NOT x226 AND NOT x227 AND NOT x228 AND NOT x229 AND NOT x230 AND NOT x231 AND NOT x232 AND NOT x233 AND NOT x234 AND NOT x235 AND NOT x236 AND NOT x237 AND NOT x238 AND NOT x239 AND NOT x240 AND NOT x241 AND NOT x242 AND NOT x243 AND NOT x244 AND NOT x245 AND NOT x246 AND NOT x247 AND NOT x248 AND NOT x249 AND NOT x250 AND NOT x251 AND NOT x252 AND NOT x253 AND NOT x254 AND NOT x255
Number of literals: 252
Clause #93 W:(56 -12) x74 AND x157 AND NOT x17 AND NOT x147 AND NOT x197 AND NOT x223
Number of literals: 6
Clause #94 W:(128 94) 
Number of literals: 0
Clause #95 W:(133 -63) NOT x197 AND NOT x223
Number of literals: 2
Clause #96 W:(135 -129) NOT x197 AND NOT x223
Number of literals: 2
Clause #97 W:(27 17) NOT x197 AND NOT x223
Number of literals: 2
Clause #98 W:(-65 84) x197 AND x223
Number of literals: 2
Clause #99 W:(101 -8) NOT x197 AND NOT x223
Number of literals: 2
results: Results(training_time_s=499.00077080726624, inference_time_s=0.2212390899658203, memory_usage_mb=408.8984375, accuracy=0.692, precision=0.6588070950857807, recall=0.692, f1_score=0.6304266437609274)
confusion matrix: [[53, 266], [42, 639]]
reporting runs/2024-12-19T21:18:58/results.toml
reporting runs/2024-12-19T21:18:58/confusion_matrix.csv
reporting runs/2024-12-19T21:18:58/weights.csv
