creating new run in runs/2024-12-19T21:49:51
reporting parameters in runs/2024-12-19T21:49:51/params.toml, values:
{'epochs': 50, 'number_of_clauses': 500, 't': 800, 's': 2.214491807500077, 'depth': 5, 'hypervector_size': 1024, 'hypervector_bits': 1, 'message_size': 512, 'message_bits': 1, 'double_hashing': True, 'max_included_literals': 16}
loading dataset from /home/ask/skole-learning-systems/attempt1/data/3x3_medium.csv
hashing dataset
saving dataset report to runs/2024-12-19T21:49:51/dataset.toml, content:
{'filename': '/home/ask/skole-learning-systems/attempt1/data/3x3_medium.csv', 'hash-blake2b': 'e9bf73e53fde757aee03a9898821212a0b3ffc12b8ac80471fda9e14e5c6d7ecd20c3cf42daf290055e4d53e56700ff350d4ae6970c2f5d38736556be10fa3de', 'dimensions': 3, 'rows': 10000}
X_train shape: (9000,)
X_test shape: (1000,)
Creating training data
bytecode dump:
>          0	NOP(arg=None, lineno=72)
           2	RESUME(arg=0, lineno=72)
           4	LOAD_GLOBAL(arg=1, lineno=75)
          14	LOAD_FAST(arg=1, lineno=75)
          16	LOAD_ATTR(arg=2, lineno=75)
          36	LOAD_CONST(arg=1, lineno=75)
          38	BINARY_SUBSCR(arg=None, lineno=75)
          42	CALL(arg=1, lineno=75)
          50	GET_ITER(arg=None, lineno=75)
>         52	FOR_ITER(arg=50, lineno=75)
          56	STORE_FAST(arg=2, lineno=75)
          58	LOAD_GLOBAL(arg=1, lineno=76)
          68	LOAD_FAST(arg=0, lineno=76)
          70	LOAD_FAST(arg=0, lineno=76)
          72	LOAD_CONST(arg=2, lineno=76)
          74	BINARY_OP(arg=5, lineno=76)
          78	CALL(arg=2, lineno=76)
          86	GET_ITER(arg=None, lineno=76)
>         88	FOR_ITER(arg=30, lineno=76)
          92	STORE_FAST(arg=3, lineno=76)
          94	LOAD_FAST(arg=3, lineno=77)
          96	LOAD_CONST(arg=3, lineno=77)
          98	BINARY_OP(arg=2, lineno=77)
         102	STORE_FAST(arg=4, lineno=77)
         104	LOAD_FAST(arg=3, lineno=78)
         106	LOAD_CONST(arg=3, lineno=78)
         108	BINARY_OP(arg=6, lineno=78)
         112	STORE_FAST(arg=5, lineno=78)
         114	LOAD_FAST(arg=1, lineno=79)
         116	LOAD_FAST(arg=2, lineno=79)
         118	LOAD_FAST(arg=4, lineno=79)
         120	BUILD_TUPLE(arg=2, lineno=79)
         122	COPY(arg=2, lineno=79)
         124	COPY(arg=2, lineno=79)
         126	BINARY_SUBSCR(arg=None, lineno=79)
         130	LOAD_CONST(arg=4, lineno=79)
         132	LOAD_FAST(arg=5, lineno=79)
         134	BINARY_OP(arg=3, lineno=79)
         138	BINARY_OP(arg=20, lineno=79)
         142	SWAP(arg=3, lineno=79)
         144	SWAP(arg=2, lineno=79)
         146	STORE_SUBSCR(arg=None, lineno=79)
         150	JUMP_BACKWARD(arg=32, lineno=79)
>        152	END_FOR(arg=None, lineno=76)
         154	JUMP_BACKWARD(arg=52, lineno=76)
>        156	END_FOR(arg=None, lineno=75)
         158	RETURN_CONST(arg=0, lineno=75)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=72)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=72)
stack []
dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=75)
stack []
dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0']
dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$X14.2']
dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3']
dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$16load_attr.3', '$const36.4']
dispatch pc=42, inst=CALL(arg=1, lineno=75)
stack ['$null$4.1', '$4load_global.0', '$38binary_subscr.5']
dispatch pc=50, inst=GET_ITER(arg=None, lineno=75)
stack ['$42call.6']
end state. edges=[Edge(pc=52, stack=('$50get_iter.7',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1)])
stack: ['$phi52.0']
state.pc_initial: State(pc_initial=52 nstack_initial=1)
dispatch pc=52, inst=FOR_ITER(arg=50, lineno=75)
stack ['$phi52.0']
end state. edges=[Edge(pc=156, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=156 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
stack: ['$phi156.0', '$phi156.1']
state.pc_initial: State(pc_initial=156 nstack_initial=2)
dispatch pc=156, inst=END_FOR(arg=None, lineno=75)
stack ['$phi156.0', '$phi156.1']
dispatch pc=158, inst=RETURN_CONST(arg=0, lineno=75)
stack []
end state. edges=[]
pending: deque([State(pc_initial=56 nstack_initial=2)])
stack: ['$phi56.0', '$phi56.1']
state.pc_initial: State(pc_initial=56 nstack_initial=2)
dispatch pc=56, inst=STORE_FAST(arg=2, lineno=75)
stack ['$phi56.0', '$phi56.1']
dispatch pc=58, inst=LOAD_GLOBAL(arg=1, lineno=76)
stack ['$phi56.0']
dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2']
dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4']
dispatch pc=72, inst=LOAD_CONST(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5']
dispatch pc=74, inst=BINARY_OP(arg=5, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$hypervector_size70.5', '$const72.6']
dispatch pc=78, inst=CALL(arg=2, lineno=76)
stack ['$phi56.0', '$null$58.3', '$58load_global.2', '$hypervector_size68.4', '$binop_mul74.7']
dispatch pc=86, inst=GET_ITER(arg=None, lineno=76)
stack ['$phi56.0', '$78call.8']
end state. edges=[Edge(pc=88, stack=('$phi56.0', '$86get_iter.9'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=88 nstack_initial=2)])
stack: ['$phi88.0', '$phi88.1']
state.pc_initial: State(pc_initial=88 nstack_initial=2)
dispatch pc=88, inst=FOR_ITER(arg=30, lineno=76)
stack ['$phi88.0', '$phi88.1']
end state. edges=[Edge(pc=152, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0), Edge(pc=92, stack=('$phi88.0', '$phi88.1', '$88for_iter.3'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=152 nstack_initial=3), State(pc_initial=92 nstack_initial=3)])
stack: ['$phi152.0', '$phi152.1', '$phi152.2']
state.pc_initial: State(pc_initial=152 nstack_initial=3)
dispatch pc=152, inst=END_FOR(arg=None, lineno=76)
stack ['$phi152.0', '$phi152.1', '$phi152.2']
dispatch pc=154, inst=JUMP_BACKWARD(arg=52, lineno=76)
stack ['$phi152.0']
end state. edges=[Edge(pc=52, stack=('$phi152.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=92 nstack_initial=3), State(pc_initial=52 nstack_initial=1)])
stack: ['$phi92.0', '$phi92.1', '$phi92.2']
state.pc_initial: State(pc_initial=92 nstack_initial=3)
dispatch pc=92, inst=STORE_FAST(arg=3, lineno=76)
stack ['$phi92.0', '$phi92.1', '$phi92.2']
dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1']
dispatch pc=96, inst=LOAD_CONST(arg=3, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3']
dispatch pc=98, inst=BINARY_OP(arg=2, lineno=77)
stack ['$phi92.0', '$phi92.1', '$k94.3', '$const96.4']
dispatch pc=102, inst=STORE_FAST(arg=4, lineno=77)
stack ['$phi92.0', '$phi92.1', '$binop_floordiv98.5']
dispatch pc=104, inst=LOAD_FAST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1']
dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6']
dispatch pc=108, inst=BINARY_OP(arg=6, lineno=78)
stack ['$phi92.0', '$phi92.1', '$k104.6', '$const106.7']
dispatch pc=112, inst=STORE_FAST(arg=5, lineno=78)
stack ['$phi92.0', '$phi92.1', '$binop_mod108.8']
dispatch pc=114, inst=LOAD_FAST(arg=1, lineno=79)
stack ['$phi92.0', '$phi92.1']
dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9']
dispatch pc=118, inst=LOAD_FAST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10']
dispatch pc=120, inst=BUILD_TUPLE(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$i116.10', '$chunk118.11']
dispatch pc=122, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12']
dispatch pc=124, inst=COPY(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9']
dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$X114.9', '$120build_tuple.12']
dispatch pc=130, inst=LOAD_CONST(arg=4, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13']
dispatch pc=132, inst=LOAD_FAST(arg=5, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14']
dispatch pc=134, inst=BINARY_OP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$const130.14', '$pos132.15']
dispatch pc=138, inst=BINARY_OP(arg=20, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$126binary_subscr.13', '$binop_lshift134.16']
dispatch pc=142, inst=SWAP(arg=3, lineno=79)
stack ['$phi92.0', '$phi92.1', '$X114.9', '$120build_tuple.12', '$binop_ior138.17']
dispatch pc=144, inst=SWAP(arg=2, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$120build_tuple.12', '$X114.9']
dispatch pc=146, inst=STORE_SUBSCR(arg=None, lineno=79)
stack ['$phi92.0', '$phi92.1', '$binop_ior138.17', '$X114.9', '$120build_tuple.12']
dispatch pc=150, inst=JUMP_BACKWARD(arg=32, lineno=79)
stack ['$phi92.0', '$phi92.1']
end state. edges=[Edge(pc=88, stack=('$phi92.0', '$phi92.1'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=52 nstack_initial=1), State(pc_initial=88 nstack_initial=2)])
pending: deque([State(pc_initial=88 nstack_initial=2)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=88 nstack_initial=2): {'$phi88.1'},
             State(pc_initial=92 nstack_initial=3): {'$phi92.2'},
             State(pc_initial=152 nstack_initial=3): set(),
             State(pc_initial=156 nstack_initial=2): set()})
defmap: {'$phi152.2': State(pc_initial=88 nstack_initial=2),
 '$phi156.1': State(pc_initial=52 nstack_initial=1),
 '$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi88.1': State(pc_initial=56 nstack_initial=2),
 '$phi92.2': State(pc_initial=88 nstack_initial=2)}
phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi152.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi152.0',
                           State(pc_initial=152 nstack_initial=3))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi92.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi92.1': {('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2)),
                           ('$phi92.1', State(pc_initial=92 nstack_initial=3))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=3))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=3))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2)),
                          ('$phi88.1', State(pc_initial=88 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi152.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$86get_iter.9',
                            State(pc_initial=56 nstack_initial=2))},
             '$phi152.2': {('$88for_iter.3',
                            State(pc_initial=88 nstack_initial=2))},
             '$phi156.0': {('$50get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi156.1': {('$52for_iter.2',
                            State(pc_initial=52 nstack_initial=1))},
             '$phi52.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi88.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.0': {('$50get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.1': {('$86get_iter.9',
                           State(pc_initial=56 nstack_initial=2))},
             '$phi92.2': {('$88for_iter.3',
                           State(pc_initial=88 nstack_initial=2))}})
keep phismap: {'$phi52.0': {('$50get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))},
 '$phi88.1': {('$86get_iter.9', State(pc_initial=56 nstack_initial=2))},
 '$phi92.2': {('$88for_iter.3', State(pc_initial=88 nstack_initial=2))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.7'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'},
             State(pc_initial=56 nstack_initial=2): {'$phi88.1': '$86get_iter.9'},
             State(pc_initial=88 nstack_initial=2): {'$phi92.2': '$88for_iter.3'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$X14.2'}), (16, {'item': '$X14.2', 'res': '$16load_attr.3'}), (36, {'res': '$const36.4'}), (38, {'index': '$const36.4', 'target': '$16load_attr.3', 'res': '$38binary_subscr.5'}), (42, {'func': '$4load_global.0', 'args': ['$38binary_subscr.5'], 'kw_names': None, 'res': '$42call.6'}), (50, {'value': '$42call.6', 'res': '$50get_iter.7'})), outgoing_phis={'$phi52.0': '$50get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.7',)})
block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={156: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'idx': 0, 'res': '$58load_global.2'}), (68, {'res': '$hypervector_size68.4'}), (70, {'res': '$hypervector_size70.5'}), (72, {'res': '$const72.6'}), (74, {'op': '*', 'lhs': '$hypervector_size70.5', 'rhs': '$const72.6', 'res': '$binop_mul74.7'}), (78, {'func': '$58load_global.2', 'args': ['$hypervector_size68.4', '$binop_mul74.7'], 'kw_names': None, 'res': '$78call.8'}), (86, {'value': '$78call.8', 'res': '$86get_iter.9'})), outgoing_phis={'$phi88.1': '$86get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi56.0', '$86get_iter.9')})
block_infos State(pc_initial=88 nstack_initial=2):
AdaptBlockInfo(insts=((88, {'iterator': '$phi88.1', 'pair': '$88for_iter.2', 'indval': '$88for_iter.3', 'pred': '$88for_iter.4'}),), outgoing_phis={'$phi92.2': '$88for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi88.0', '$phi88.1', '$88for_iter.3'), 92: ('$phi88.0', '$phi88.1', '$88for_iter.3')})
block_infos State(pc_initial=92 nstack_initial=3):
AdaptBlockInfo(insts=((92, {'value': '$phi92.2'}), (94, {'res': '$k94.3'}), (96, {'res': '$const96.4'}), (98, {'op': '//', 'lhs': '$k94.3', 'rhs': '$const96.4', 'res': '$binop_floordiv98.5'}), (102, {'value': '$binop_floordiv98.5'}), (104, {'res': '$k104.6'}), (106, {'res': '$const106.7'}), (108, {'op': '%', 'lhs': '$k104.6', 'rhs': '$const106.7', 'res': '$binop_mod108.8'}), (112, {'value': '$binop_mod108.8'}), (114, {'res': '$X114.9'}), (116, {'res': '$i116.10'}), (118, {'res': '$chunk118.11'}), (120, {'items': ['$i116.10', '$chunk118.11'], 'res': '$120build_tuple.12'}), (126, {'index': '$120build_tuple.12', 'target': '$X114.9', 'res': '$126binary_subscr.13'}), (130, {'res': '$const130.14'}), (132, {'res': '$pos132.15'}), (134, {'op': '<<', 'lhs': '$const130.14', 'rhs': '$pos132.15', 'res': '$binop_lshift134.16'}), (138, {'op': '|=', 'lhs': '$126binary_subscr.13', 'rhs': '$binop_lshift134.16', 'res': '$binop_ior138.17'}), (146, {'target': '$X114.9', 'index': '$120build_tuple.12', 'value': '$binop_ior138.17'}), (150, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi92.0', '$phi92.1')})
block_infos State(pc_initial=152 nstack_initial=3):
AdaptBlockInfo(insts=((154, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi152.0',)})
block_infos State(pc_initial=156 nstack_initial=2):
AdaptBlockInfo(insts=((158, {'retval': '$const158.2', 'castval': '$158return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervector_size = arg(0, name=hypervector_size) ['hypervector_size']
    X = arg(1, name=X)                       ['X']
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $16load_attr.3 = getattr(value=X, attr=shape) ['$16load_attr.3', 'X']
    $const36.4 = const(int, 0)               ['$const36.4']
    $38binary_subscr.5 = getitem(value=$16load_attr.3, index=$const36.4, fn=<built-in function getitem>) ['$16load_attr.3', '$38binary_subscr.5', '$const36.4']
    $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None) ['$38binary_subscr.5', '$42call.6', '$4load_global.0']
    $50get_iter.7 = getiter(value=$42call.6) ['$42call.6', '$50get_iter.7']
    $phi52.0 = $50get_iter.7                 ['$50get_iter.7', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 156            ['$52for_iter.3']
label 56:
    i = $phi56.1                             ['$phi56.1', 'i']
    $58load_global.2 = global(range: <class 'range'>) ['$58load_global.2']
    $const72.6 = const(int, 2)               ['$const72.6']
    $binop_mul74.7 = hypervector_size * $const72.6 ['$binop_mul74.7', '$const72.6', 'hypervector_size']
    $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_global.2', '$78call.8', '$binop_mul74.7', 'hypervector_size']
    $86get_iter.9 = getiter(value=$78call.8) ['$78call.8', '$86get_iter.9']
    $phi88.1 = $86get_iter.9                 ['$86get_iter.9', '$phi88.1']
    jump 88                                  []
label 88:
    $88for_iter.2 = iternext(value=$phi88.1) ['$88for_iter.2', '$phi88.1']
    $88for_iter.3 = pair_first(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.3']
    $88for_iter.4 = pair_second(value=$88for_iter.2) ['$88for_iter.2', '$88for_iter.4']
    $phi92.2 = $88for_iter.3                 ['$88for_iter.3', '$phi92.2']
    branch $88for_iter.4, 92, 152            ['$88for_iter.4']
label 92:
    k = $phi92.2                             ['$phi92.2', 'k']
    $const96.4 = const(int, 32)              ['$const96.4']
    chunk = k // $const96.4                  ['$const96.4', 'chunk', 'k']
    $const106.7 = const(int, 32)             ['$const106.7']
    pos = k % $const106.7                    ['$const106.7', 'k', 'pos']
    $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)]) ['$120build_tuple.12', 'chunk', 'i']
    $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>) ['$120build_tuple.12', '$126binary_subscr.13', 'X']
    $const130.14 = const(int, 1)             ['$const130.14']
    $binop_lshift134.16 = $const130.14 << pos ['$binop_lshift134.16', '$const130.14', 'pos']
    $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined) ['$126binary_subscr.13', '$binop_ior138.17', '$binop_lshift134.16']
    X[$120build_tuple.12] = $binop_ior138.17 ['$120build_tuple.12', '$binop_ior138.17', 'X']
    jump 88                                  []
label 152:
    jump 52                                  []
label 156:
    $const158.2 = const(NoneType, None)      ['$const158.2']
    $158return_const.3 = cast(value=$const158.2) ['$158return_const.3', '$const158.2']
    return $158return_const.3                ['$158return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: hypervector_size = arg(0, name=hypervector_size)
on stmt: X = arg(1, name=X)
on stmt: $4load_global.0 = global(range: <class 'range'>)
on stmt: $16load_attr.3 = getattr(value=X, attr=shape)
on stmt: $const36.4 = const(int, 0)
on stmt: $38binary_subscr.5 = static_getitem(value=$16load_attr.3, index=0, index_var=$const36.4, fn=<built-in function getitem>)
on stmt: $42call.6 = call $4load_global.0($38binary_subscr.5, func=$4load_global.0, args=[Var($38binary_subscr.5, graphs.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $50get_iter.7 = getiter(value=$42call.6)
on stmt: $phi52.0 = $50get_iter.7
on stmt: jump 52
==== SSA block analysis pass on 52
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: $52for_iter.1 = iternext(value=$phi52.0)
on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
on stmt: $phi56.1 = $52for_iter.2
on stmt: branch $52for_iter.3, 56, 156
==== SSA block analysis pass on 56
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: i = $phi56.1
on stmt: $58load_global.2 = global(range: <class 'range'>)
on stmt: $const72.6 = const(int, 2)
on stmt: $binop_mul74.7 = hypervector_size * $const72.6
on stmt: $78call.8 = call $58load_global.2(hypervector_size, $binop_mul74.7, func=$58load_global.2, args=[Var(hypervector_size, graphs.py:72), Var($binop_mul74.7, graphs.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $86get_iter.9 = getiter(value=$78call.8)
on stmt: $phi88.1 = $86get_iter.9
on stmt: jump 88
==== SSA block analysis pass on 88
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: $88for_iter.2 = iternext(value=$phi88.1)
on stmt: $88for_iter.3 = pair_first(value=$88for_iter.2)
on stmt: $88for_iter.4 = pair_second(value=$88for_iter.2)
on stmt: $phi92.2 = $88for_iter.3
on stmt: branch $88for_iter.4, 92, 152
==== SSA block analysis pass on 92
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: k = $phi92.2
on stmt: $const96.4 = const(int, 32)
on stmt: chunk = k // $const96.4
on stmt: $const106.7 = const(int, 32)
on stmt: pos = k % $const106.7
on stmt: $120build_tuple.12 = build_tuple(items=[Var(i, graphs.py:75), Var(chunk, graphs.py:77)])
on stmt: $126binary_subscr.13 = getitem(value=X, index=$120build_tuple.12, fn=<built-in function getitem>)
on stmt: $const130.14 = const(int, 1)
on stmt: $binop_lshift134.16 = $const130.14 << pos
on stmt: $binop_ior138.17 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$126binary_subscr.13, rhs=$binop_lshift134.16, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$120build_tuple.12] = $binop_ior138.17
on stmt: jump 88
==== SSA block analysis pass on 152
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: jump 52
==== SSA block analysis pass on 156
Running <numba.core.ssa._GatherDefsHandler object at 0x725517c873b0>
on stmt: $const158.2 = const(NoneType, None)
on stmt: $158return_const.3 = cast(value=$const158.2)
on stmt: return $158return_const.3
defs defaultdict(<class 'list'>,
            {'$120build_tuple.12': [(<numba.core.ir.Assign object at 0x725517ca6480>,
                                     92)],
             '$126binary_subscr.13': [(<numba.core.ir.Assign object at 0x725517ca65d0>,
                                       92)],
             '$158return_const.3': [(<numba.core.ir.Assign object at 0x725517ca5430>,
                                     156)],
             '$16load_attr.3': [(<numba.core.ir.Assign object at 0x725517ca47d0>,
                                 0)],
             '$38binary_subscr.5': [(<numba.core.ir.Assign object at 0x7255183f9280>,
                                     0)],
             '$42call.6': [(<numba.core.ir.Assign object at 0x725517ca49e0>,
                            0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x725517ca4530>,
                                  0)],
             '$50get_iter.7': [(<numba.core.ir.Assign object at 0x725517ca4a70>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x725517ca4c20>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x725517ca4cb0>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x725517ca4d40>,
                                52)],
             '$58load_global.2': [(<numba.core.ir.Assign object at 0x725517ca4f50>,
                                   56)],
             '$78call.8': [(<numba.core.ir.Assign object at 0x725517ca5310>,
                            56)],
             '$86get_iter.9': [(<numba.core.ir.Assign object at 0x725517ca53a0>,
                                56)],
             '$88for_iter.2': [(<numba.core.ir.Assign object at 0x725517ca5520>,
                                88)],
             '$88for_iter.3': [(<numba.core.ir.Assign object at 0x725517ca55e0>,
                                88)],
             '$88for_iter.4': [(<numba.core.ir.Assign object at 0x725517ca56d0>,
                                88)],
             '$binop_ior138.17': [(<numba.core.ir.Assign object at 0x725517ca6a20>,
                                   92)],
             '$binop_lshift134.16': [(<numba.core.ir.Assign object at 0x725517ca6900>,
                                      92)],
             '$binop_mul74.7': [(<numba.core.ir.Assign object at 0x725517ca5220>,
                                 56)],
             '$const106.7': [(<numba.core.ir.Assign object at 0x725517ca5f10>,
                              92)],
             '$const130.14': [(<numba.core.ir.Assign object at 0x725517ca66c0>,
                               92)],
             '$const158.2': [(<numba.core.ir.Assign object at 0x725517ca62a0>,
                              156)],
             '$const36.4': [(<numba.core.ir.Assign object at 0x725517ca40e0>,
                             0)],
             '$const72.6': [(<numba.core.ir.Assign object at 0x725517ca5130>,
                             56)],
             '$const96.4': [(<numba.core.ir.Assign object at 0x725517ca5af0>,
                             92)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x725517ca44d0>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x725517ca4b90>,
                           52)],
             '$phi88.1': [(<numba.core.ir.Assign object at 0x725517ca5070>,
                           56)],
             '$phi92.2': [(<numba.core.ir.Assign object at 0x725517ca5760>,
                           88)],
             'X': [(<numba.core.ir.Assign object at 0x725517ca4770>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x725517ca5c40>, 92)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x725517ca4710>,
                                   0)],
             'i': [(<numba.core.ir.Assign object at 0x725517ca4e90>, 56)],
             'k': [(<numba.core.ir.Assign object at 0x725517ca58e0>, 92)],
             'pos': [(<numba.core.ir.Assign object at 0x725517ca6060>, 92)]})
SSA violators <numba.core.utils.OrderedSet object at 0x725517c873b0>
bytecode dump:
>          0	NOP(arg=None, lineno=121)
           2	RESUME(arg=0, lineno=121)
           4	LOAD_FAST(arg=0, lineno=124)
           6	LOAD_FAST(arg=4, lineno=124)
           8	LOAD_CONST(arg=0, lineno=124)
          10	LOAD_CONST(arg=0, lineno=124)
          12	BUILD_SLICE(arg=2, lineno=124)
          14	BUILD_TUPLE(arg=2, lineno=124)
          16	BINARY_SUBSCR(arg=None, lineno=124)
          20	GET_ITER(arg=None, lineno=124)
>         22	FOR_ITER(arg=71, lineno=124)
          26	STORE_FAST(arg=6, lineno=124)
          28	LOAD_FAST(arg=6, lineno=125)
          30	LOAD_CONST(arg=1, lineno=125)
          32	BINARY_OP(arg=2, lineno=125)
          36	STORE_FAST(arg=7, lineno=125)
          38	LOAD_FAST(arg=6, lineno=126)
          40	LOAD_CONST(arg=1, lineno=126)
          42	BINARY_OP(arg=6, lineno=126)
          46	STORE_FAST(arg=8, lineno=126)
          48	LOAD_FAST(arg=5, lineno=128)
          50	LOAD_FAST(arg=2, lineno=128)
          52	LOAD_FAST(arg=3, lineno=128)
          54	BINARY_OP(arg=0, lineno=128)
          58	LOAD_FAST(arg=7, lineno=128)
          60	BUILD_TUPLE(arg=2, lineno=128)
          62	COPY(arg=2, lineno=128)
          64	COPY(arg=2, lineno=128)
          66	BINARY_SUBSCR(arg=None, lineno=128)
          70	LOAD_CONST(arg=2, lineno=128)
          72	LOAD_FAST(arg=8, lineno=128)
          74	BINARY_OP(arg=3, lineno=128)
          78	BINARY_OP(arg=20, lineno=128)
          82	SWAP(arg=3, lineno=128)
          84	SWAP(arg=2, lineno=128)
          86	STORE_SUBSCR(arg=None, lineno=128)
          90	LOAD_FAST(arg=6, lineno=130)
          92	LOAD_FAST(arg=1, lineno=130)
          94	BINARY_OP(arg=0, lineno=130)
          98	LOAD_CONST(arg=1, lineno=130)
         100	BINARY_OP(arg=2, lineno=130)
         104	STORE_FAST(arg=7, lineno=130)
         106	LOAD_FAST(arg=6, lineno=131)
         108	LOAD_FAST(arg=1, lineno=131)
         110	BINARY_OP(arg=0, lineno=131)
         114	LOAD_CONST(arg=1, lineno=131)
         116	BINARY_OP(arg=6, lineno=131)
         120	STORE_FAST(arg=8, lineno=131)
         122	LOAD_FAST(arg=5, lineno=132)
         124	LOAD_FAST(arg=2, lineno=132)
         126	LOAD_FAST(arg=3, lineno=132)
         128	BINARY_OP(arg=0, lineno=132)
         132	LOAD_FAST(arg=7, lineno=132)
         134	BUILD_TUPLE(arg=2, lineno=132)
         136	COPY(arg=2, lineno=132)
         138	COPY(arg=2, lineno=132)
         140	BINARY_SUBSCR(arg=None, lineno=132)
         144	LOAD_CONST(arg=2, lineno=132)
         146	LOAD_FAST(arg=8, lineno=132)
         148	BINARY_OP(arg=3, lineno=132)
         152	UNARY_INVERT(arg=None, lineno=132)
         154	BINARY_OP(arg=14, lineno=132)
         158	SWAP(arg=3, lineno=132)
         160	SWAP(arg=2, lineno=132)
         162	STORE_SUBSCR(arg=None, lineno=132)
         166	JUMP_BACKWARD(arg=73, lineno=132)
>        168	END_FOR(arg=None, lineno=124)
         170	RETURN_CONST(arg=0, lineno=124)
pending: deque([State(pc_initial=0 nstack_initial=0)])
stack: []
state.pc_initial: State(pc_initial=0 nstack_initial=0)
dispatch pc=0, inst=NOP(arg=None, lineno=121)
stack []
dispatch pc=2, inst=RESUME(arg=0, lineno=121)
stack []
dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=124)
stack []
dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=124)
stack ['$hypervectors4.0']
dispatch pc=8, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1']
dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2']
dispatch pc=12, inst=BUILD_SLICE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$const8.2', '$const10.3']
dispatch pc=14, inst=BUILD_TUPLE(arg=2, lineno=124)
stack ['$hypervectors4.0', '$symbol6.1', '$12build_slice.5']
dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=124)
stack ['$hypervectors4.0', '$14build_tuple.6']
dispatch pc=20, inst=GET_ITER(arg=None, lineno=124)
stack ['$16binary_subscr.7']
end state. edges=[Edge(pc=22, stack=('$20get_iter.8',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
stack: ['$phi22.0']
state.pc_initial: State(pc_initial=22 nstack_initial=1)
dispatch pc=22, inst=FOR_ITER(arg=71, lineno=124)
stack ['$phi22.0']
end state. edges=[Edge(pc=168, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0), Edge(pc=26, stack=('$phi22.0', '$22for_iter.2'), blockstack=(), npush=0)]
pending: deque([State(pc_initial=168 nstack_initial=2), State(pc_initial=26 nstack_initial=2)])
stack: ['$phi168.0', '$phi168.1']
state.pc_initial: State(pc_initial=168 nstack_initial=2)
dispatch pc=168, inst=END_FOR(arg=None, lineno=124)
stack ['$phi168.0', '$phi168.1']
dispatch pc=170, inst=RETURN_CONST(arg=0, lineno=124)
stack []
end state. edges=[]
pending: deque([State(pc_initial=26 nstack_initial=2)])
stack: ['$phi26.0', '$phi26.1']
state.pc_initial: State(pc_initial=26 nstack_initial=2)
dispatch pc=26, inst=STORE_FAST(arg=6, lineno=124)
stack ['$phi26.0', '$phi26.1']
dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=125)
stack ['$phi26.0']
dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=125)
stack ['$phi26.0', '$k28.2']
dispatch pc=32, inst=BINARY_OP(arg=2, lineno=125)
stack ['$phi26.0', '$k28.2', '$const30.3']
dispatch pc=36, inst=STORE_FAST(arg=7, lineno=125)
stack ['$phi26.0', '$binop_floordiv32.4']
dispatch pc=38, inst=LOAD_FAST(arg=6, lineno=126)
stack ['$phi26.0']
dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=126)
stack ['$phi26.0', '$k38.5']
dispatch pc=42, inst=BINARY_OP(arg=6, lineno=126)
stack ['$phi26.0', '$k38.5', '$const40.6']
dispatch pc=46, inst=STORE_FAST(arg=8, lineno=126)
stack ['$phi26.0', '$binop_mod42.7']
dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=128)
stack ['$phi26.0']
dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8']
dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9']
dispatch pc=54, inst=BINARY_OP(arg=0, lineno=128)
stack ['$phi26.0', '$X48.8', '$graph_index50.9', '$node52.10']
dispatch pc=58, inst=LOAD_FAST(arg=7, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11']
dispatch pc=60, inst=BUILD_TUPLE(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$binop_add54.11', '$chunk58.12']
dispatch pc=62, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13']
dispatch pc=64, inst=COPY(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8']
dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$X48.8', '$60build_tuple.13']
dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14']
dispatch pc=72, inst=LOAD_FAST(arg=8, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15']
dispatch pc=74, inst=BINARY_OP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$const70.15', '$pos72.16']
dispatch pc=78, inst=BINARY_OP(arg=20, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$66binary_subscr.14', '$binop_lshift74.17']
dispatch pc=82, inst=SWAP(arg=3, lineno=128)
stack ['$phi26.0', '$X48.8', '$60build_tuple.13', '$binop_ior78.18']
dispatch pc=84, inst=SWAP(arg=2, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$60build_tuple.13', '$X48.8']
dispatch pc=86, inst=STORE_SUBSCR(arg=None, lineno=128)
stack ['$phi26.0', '$binop_ior78.18', '$X48.8', '$60build_tuple.13']
dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=130)
stack ['$phi26.0']
dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=130)
stack ['$phi26.0', '$k90.19']
dispatch pc=94, inst=BINARY_OP(arg=0, lineno=130)
stack ['$phi26.0', '$k90.19', '$hypervector_size92.20']
dispatch pc=98, inst=LOAD_CONST(arg=1, lineno=130)
stack ['$phi26.0', '$binop_add94.21']
dispatch pc=100, inst=BINARY_OP(arg=2, lineno=130)
stack ['$phi26.0', '$binop_add94.21', '$const98.22']
dispatch pc=104, inst=STORE_FAST(arg=7, lineno=130)
stack ['$phi26.0', '$binop_floordiv100.23']
dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=131)
stack ['$phi26.0']
dispatch pc=108, inst=LOAD_FAST(arg=1, lineno=131)
stack ['$phi26.0', '$k106.24']
dispatch pc=110, inst=BINARY_OP(arg=0, lineno=131)
stack ['$phi26.0', '$k106.24', '$hypervector_size108.25']
dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=131)
stack ['$phi26.0', '$binop_add110.26']
dispatch pc=116, inst=BINARY_OP(arg=6, lineno=131)
stack ['$phi26.0', '$binop_add110.26', '$const114.27']
dispatch pc=120, inst=STORE_FAST(arg=8, lineno=131)
stack ['$phi26.0', '$binop_mod116.28']
dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=132)
stack ['$phi26.0']
dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29']
dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30']
dispatch pc=128, inst=BINARY_OP(arg=0, lineno=132)
stack ['$phi26.0', '$X122.29', '$graph_index124.30', '$node126.31']
dispatch pc=132, inst=LOAD_FAST(arg=7, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32']
dispatch pc=134, inst=BUILD_TUPLE(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$binop_add128.32', '$chunk132.33']
dispatch pc=136, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34']
dispatch pc=138, inst=COPY(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29']
dispatch pc=140, inst=BINARY_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$X122.29', '$134build_tuple.34']
dispatch pc=144, inst=LOAD_CONST(arg=2, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35']
dispatch pc=146, inst=LOAD_FAST(arg=8, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36']
dispatch pc=148, inst=BINARY_OP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$const144.36', '$pos146.37']
dispatch pc=152, inst=UNARY_INVERT(arg=None, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$binop_lshift148.38']
dispatch pc=154, inst=BINARY_OP(arg=14, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$140binary_subscr.35', '$152unary_invert.39']
dispatch pc=158, inst=SWAP(arg=3, lineno=132)
stack ['$phi26.0', '$X122.29', '$134build_tuple.34', '$binop_iand154.40']
dispatch pc=160, inst=SWAP(arg=2, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$134build_tuple.34', '$X122.29']
dispatch pc=162, inst=STORE_SUBSCR(arg=None, lineno=132)
stack ['$phi26.0', '$binop_iand154.40', '$X122.29', '$134build_tuple.34']
dispatch pc=166, inst=JUMP_BACKWARD(arg=73, lineno=132)
stack ['$phi26.0']
end state. edges=[Edge(pc=22, stack=('$phi26.0',), blockstack=(), npush=0)]
pending: deque([State(pc_initial=22 nstack_initial=1)])
-------------------------Prune PHIs-------------------------
Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=1): {'$phi22.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=168 nstack_initial=2): set()})
defmap: {'$phi168.1': State(pc_initial=22 nstack_initial=1),
 '$phi22.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=22 nstack_initial=1)}
phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=1))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
changing phismap: defaultdict(<class 'set'>,
            {'$phi168.0': {('$20get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$22for_iter.2',
                            State(pc_initial=22 nstack_initial=1))},
             '$phi22.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$20get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$22for_iter.2',
                           State(pc_initial=22 nstack_initial=1))}})
keep phismap: {'$phi22.0': {('$20get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$22for_iter.2', State(pc_initial=22 nstack_initial=1))}}
new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi22.0': '$20get_iter.8'},
             State(pc_initial=22 nstack_initial=1): {'$phi26.1': '$22for_iter.2'}})
----------------------DONE Prune PHIs-----------------------
block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$hypervectors4.0'}), (6, {'res': '$symbol6.1'}), (8, {'res': '$const8.2'}), (10, {'res': '$const10.3'}), (12, {'start': '$const8.2', 'stop': '$const10.3', 'step': None, 'res': '$12build_slice.5', 'slicevar': '$12build_slice.4'}), (14, {'items': ['$symbol6.1', '$12build_slice.5'], 'res': '$14build_tuple.6'}), (16, {'index': '$14build_tuple.6', 'target': '$hypervectors4.0', 'res': '$16binary_subscr.7'}), (20, {'value': '$16binary_subscr.7', 'res': '$20get_iter.8'})), outgoing_phis={'$phi22.0': '$20get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$20get_iter.8',)})
block_infos State(pc_initial=22 nstack_initial=1):
AdaptBlockInfo(insts=((22, {'iterator': '$phi22.0', 'pair': '$22for_iter.1', 'indval': '$22for_iter.2', 'pred': '$22for_iter.3'}),), outgoing_phis={'$phi26.1': '$22for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: ('$phi22.0', '$22for_iter.2'), 26: ('$phi22.0', '$22for_iter.2')})
block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$k28.2'}), (30, {'res': '$const30.3'}), (32, {'op': '//', 'lhs': '$k28.2', 'rhs': '$const30.3', 'res': '$binop_floordiv32.4'}), (36, {'value': '$binop_floordiv32.4'}), (38, {'res': '$k38.5'}), (40, {'res': '$const40.6'}), (42, {'op': '%', 'lhs': '$k38.5', 'rhs': '$const40.6', 'res': '$binop_mod42.7'}), (46, {'value': '$binop_mod42.7'}), (48, {'res': '$X48.8'}), (50, {'res': '$graph_index50.9'}), (52, {'res': '$node52.10'}), (54, {'op': '+', 'lhs': '$graph_index50.9', 'rhs': '$node52.10', 'res': '$binop_add54.11'}), (58, {'res': '$chunk58.12'}), (60, {'items': ['$binop_add54.11', '$chunk58.12'], 'res': '$60build_tuple.13'}), (66, {'index': '$60build_tuple.13', 'target': '$X48.8', 'res': '$66binary_subscr.14'}), (70, {'res': '$const70.15'}), (72, {'res': '$pos72.16'}), (74, {'op': '<<', 'lhs': '$const70.15', 'rhs': '$pos72.16', 'res': '$binop_lshift74.17'}), (78, {'op': '|=', 'lhs': '$66binary_subscr.14', 'rhs': '$binop_lshift74.17', 'res': '$binop_ior78.18'}), (86, {'target': '$X48.8', 'index': '$60build_tuple.13', 'value': '$binop_ior78.18'}), (90, {'res': '$k90.19'}), (92, {'res': '$hypervector_size92.20'}), (94, {'op': '+', 'lhs': '$k90.19', 'rhs': '$hypervector_size92.20', 'res': '$binop_add94.21'}), (98, {'res': '$const98.22'}), (100, {'op': '//', 'lhs': '$binop_add94.21', 'rhs': '$const98.22', 'res': '$binop_floordiv100.23'}), (104, {'value': '$binop_floordiv100.23'}), (106, {'res': '$k106.24'}), (108, {'res': '$hypervector_size108.25'}), (110, {'op': '+', 'lhs': '$k106.24', 'rhs': '$hypervector_size108.25', 'res': '$binop_add110.26'}), (114, {'res': '$const114.27'}), (116, {'op': '%', 'lhs': '$binop_add110.26', 'rhs': '$const114.27', 'res': '$binop_mod116.28'}), (120, {'value': '$binop_mod116.28'}), (122, {'res': '$X122.29'}), (124, {'res': '$graph_index124.30'}), (126, {'res': '$node126.31'}), (128, {'op': '+', 'lhs': '$graph_index124.30', 'rhs': '$node126.31', 'res': '$binop_add128.32'}), (132, {'res': '$chunk132.33'}), (134, {'items': ['$binop_add128.32', '$chunk132.33'], 'res': '$134build_tuple.34'}), (140, {'index': '$134build_tuple.34', 'target': '$X122.29', 'res': '$140binary_subscr.35'}), (144, {'res': '$const144.36'}), (146, {'res': '$pos146.37'}), (148, {'op': '<<', 'lhs': '$const144.36', 'rhs': '$pos146.37', 'res': '$binop_lshift148.38'}), (152, {'value': '$binop_lshift148.38', 'res': '$152unary_invert.39'}), (154, {'op': '&=', 'lhs': '$140binary_subscr.35', 'rhs': '$152unary_invert.39', 'res': '$binop_iand154.40'}), (162, {'target': '$X122.29', 'index': '$134build_tuple.34', 'value': '$binop_iand154.40'}), (166, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: ('$phi26.0',)})
block_infos State(pc_initial=168 nstack_initial=2):
AdaptBlockInfo(insts=((170, {'retval': '$const170.2', 'castval': '$170return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
label 0:
    hypervectors = arg(0, name=hypervectors) ['hypervectors']
    hypervector_size = arg(1, name=hypervector_size) ['hypervector_size']
    graph_index = arg(2, name=graph_index)   ['graph_index']
    node = arg(3, name=node)                 ['node']
    symbol = arg(4, name=symbol)             ['symbol']
    X = arg(5, name=X)                       ['X']
    $const8.2 = const(NoneType, None)        ['$const8.2']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12build_slice.4 = global(slice: <class 'slice'>) ['$12build_slice.4']
    $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None) ['$12build_slice.4', '$12build_slice.5', '$const10.3', '$const8.2']
    $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)]) ['$12build_slice.5', '$14build_tuple.6', 'symbol']
    $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>) ['$14build_tuple.6', '$16binary_subscr.7', 'hypervectors']
    $20get_iter.8 = getiter(value=$16binary_subscr.7) ['$16binary_subscr.7', '$20get_iter.8']
    $phi22.0 = $20get_iter.8                 ['$20get_iter.8', '$phi22.0']
    jump 22                                  []
label 22:
    $22for_iter.1 = iternext(value=$phi22.0) ['$22for_iter.1', '$phi22.0']
    $22for_iter.2 = pair_first(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.2']
    $22for_iter.3 = pair_second(value=$22for_iter.1) ['$22for_iter.1', '$22for_iter.3']
    $phi26.1 = $22for_iter.2                 ['$22for_iter.2', '$phi26.1']
    branch $22for_iter.3, 26, 168            ['$22for_iter.3']
label 26:
    k = $phi26.1                             ['$phi26.1', 'k']
    $const30.3 = const(int, 32)              ['$const30.3']
    chunk = k // $const30.3                  ['$const30.3', 'chunk', 'k']
    $const40.6 = const(int, 32)              ['$const40.6']
    pos = k % $const40.6                     ['$const40.6', 'k', 'pos']
    $binop_add54.11 = graph_index + node     ['$binop_add54.11', 'graph_index', 'node']
    $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)]) ['$60build_tuple.13', '$binop_add54.11', 'chunk']
    $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>) ['$60build_tuple.13', '$66binary_subscr.14', 'X']
    $const70.15 = const(int, 1)              ['$const70.15']
    $binop_lshift74.17 = $const70.15 << pos  ['$binop_lshift74.17', '$const70.15', 'pos']
    $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined) ['$66binary_subscr.14', '$binop_ior78.18', '$binop_lshift74.17']
    X[$60build_tuple.13] = $binop_ior78.18   ['$60build_tuple.13', '$binop_ior78.18', 'X']
    $binop_add94.21 = k + hypervector_size   ['$binop_add94.21', 'hypervector_size', 'k']
    $const98.22 = const(int, 32)             ['$const98.22']
    chunk = $binop_add94.21 // $const98.22   ['$binop_add94.21', '$const98.22', 'chunk']
    $binop_add110.26 = k + hypervector_size  ['$binop_add110.26', 'hypervector_size', 'k']
    $const114.27 = const(int, 32)            ['$const114.27']
    pos = $binop_add110.26 % $const114.27    ['$binop_add110.26', '$const114.27', 'pos']
    $binop_add128.32 = graph_index + node    ['$binop_add128.32', 'graph_index', 'node']
    $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)]) ['$134build_tuple.34', '$binop_add128.32', 'chunk']
    $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>) ['$134build_tuple.34', '$140binary_subscr.35', 'X']
    $const144.36 = const(int, 1)             ['$const144.36']
    $binop_lshift148.38 = $const144.36 << pos ['$binop_lshift148.38', '$const144.36', 'pos']
    $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38) ['$152unary_invert.39', '$binop_lshift148.38']
    $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined) ['$140binary_subscr.35', '$152unary_invert.39', '$binop_iand154.40']
    X[$134build_tuple.34] = $binop_iand154.40 ['$134build_tuple.34', '$binop_iand154.40', 'X']
    jump 22                                  []
label 168:
    $const170.2 = const(NoneType, None)      ['$const170.2']
    $170return_const.3 = cast(value=$const170.2) ['$170return_const.3', '$const170.2']
    return $170return_const.3                ['$170return_const.3']

==== SSA block analysis pass on 0
Running <numba.core.ssa._GatherDefsHandler object at 0x725517a072f0>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block analysis pass on 22
Running <numba.core.ssa._GatherDefsHandler object at 0x725517a072f0>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block analysis pass on 26
Running <numba.core.ssa._GatherDefsHandler object at 0x725517a072f0>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block analysis pass on 168
Running <numba.core.ssa._GatherDefsHandler object at 0x725517a072f0>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
defs defaultdict(<class 'list'>,
            {'$12build_slice.4': [(<numba.core.ir.Assign object at 0x7255178a8350>,
                                   0)],
             '$12build_slice.5': [(<numba.core.ir.Assign object at 0x7255178a8440>,
                                   0)],
             '$134build_tuple.34': [(<numba.core.ir.Assign object at 0x7255178ab650>,
                                     26)],
             '$140binary_subscr.35': [(<numba.core.ir.Assign object at 0x7255178ab7d0>,
                                       26)],
             '$14build_tuple.6': [(<numba.core.ir.Assign object at 0x7255178a8560>,
                                   0)],
             '$152unary_invert.39': [(<numba.core.ir.Assign object at 0x7255178abc50>,
                                      26)],
             '$16binary_subscr.7': [(<numba.core.ir.Assign object at 0x7255178a86b0>,
                                     0)],
             '$170return_const.3': [(<numba.core.ir.Assign object at 0x7255178a9c10>,
                                     168)],
             '$20get_iter.8': [(<numba.core.ir.Assign object at 0x7255178a87d0>,
                                0)],
             '$22for_iter.1': [(<numba.core.ir.Assign object at 0x7255178a89e0>,
                                22)],
             '$22for_iter.2': [(<numba.core.ir.Assign object at 0x7255178a8b00>,
                                22)],
             '$22for_iter.3': [(<numba.core.ir.Assign object at 0x7255178a8c20>,
                                22)],
             '$60build_tuple.13': [(<numba.core.ir.Assign object at 0x7255178a9d60>,
                                    26)],
             '$66binary_subscr.14': [(<numba.core.ir.Assign object at 0x7255178a9ee0>,
                                      26)],
             '$binop_add110.26': [(<numba.core.ir.Assign object at 0x7255178aad20>,
                                   26)],
             '$binop_add128.32': [(<numba.core.ir.Assign object at 0x7255178ab440>,
                                   26)],
             '$binop_add54.11': [(<numba.core.ir.Assign object at 0x7255178a9b50>,
                                  26)],
             '$binop_add94.21': [(<numba.core.ir.Assign object at 0x7255178aa6f0>,
                                  26)],
             '$binop_iand154.40': [(<numba.core.ir.Assign object at 0x7255178abdd0>,
                                    26)],
             '$binop_ior78.18': [(<numba.core.ir.Assign object at 0x7255178aa360>,
                                  26)],
             '$binop_lshift148.38': [(<numba.core.ir.Assign object at 0x7255178abb30>,
                                      26)],
             '$binop_lshift74.17': [(<numba.core.ir.Assign object at 0x7255178aa210>,
                                     26)],
             '$const10.3': [(<numba.core.ir.Assign object at 0x7255178a8230>,
                             0)],
             '$const114.27': [(<numba.core.ir.Assign object at 0x7255178aae10>,
                               26)],
             '$const144.36': [(<numba.core.ir.Assign object at 0x7255178ab8c0>,
                               26)],
             '$const170.2': [(<numba.core.ir.Assign object at 0x7255178a97f0>,
                              168)],
             '$const30.3': [(<numba.core.ir.Assign object at 0x7255178a9070>,
                             26)],
             '$const40.6': [(<numba.core.ir.Assign object at 0x7255178a94c0>,
                             26)],
             '$const70.15': [(<numba.core.ir.Assign object at 0x7255178a9fd0>,
                              26)],
             '$const8.2': [(<numba.core.ir.Assign object at 0x7255178a8110>,
                            0)],
             '$const98.22': [(<numba.core.ir.Assign object at 0x7255178aa7e0>,
                              26)],
             '$phi22.0': [(<numba.core.ir.Assign object at 0x725517a07fb0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7255178a8cb0>,
                           22)],
             'X': [(<numba.core.ir.Assign object at 0x725517a07da0>, 0)],
             'chunk': [(<numba.core.ir.Assign object at 0x7255178a91f0>, 26),
                       (<numba.core.ir.Assign object at 0x7255178aa960>, 26)],
             'graph_index': [(<numba.core.ir.Assign object at 0x725517a07ad0>,
                              0)],
             'hypervector_size': [(<numba.core.ir.Assign object at 0x725517a078c0>,
                                   0)],
             'hypervectors': [(<numba.core.ir.Assign object at 0x725517a07950>,
                               0)],
             'k': [(<numba.core.ir.Assign object at 0x7255178a8e60>, 26)],
             'node': [(<numba.core.ir.Assign object at 0x725517a07bc0>, 0)],
             'pos': [(<numba.core.ir.Assign object at 0x7255178a9640>, 26),
                     (<numba.core.ir.Assign object at 0x7255178aaf90>, 26)],
             'symbol': [(<numba.core.ir.Assign object at 0x725517a07cb0>, 0)]})
SSA violators <numba.core.utils.OrderedSet object at 0x725517a072f0>
Fix SSA violator on var chunk
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x725517a07200>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x725517a07200>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x725517a07200>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
first assign: chunk
replaced with: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk = $binop_add94.21 // $const98.22
replaced with: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x725517a07200>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x725517a070b0>,
                  <numba.core.ir.Assign object at 0x725517bed070>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x725517a07200>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x725517a07200>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x725517a07200>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
find_def var='chunk' stmt=$134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk, graphs.py:125)])
replaced with: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x725517a07200>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Fix SSA violator on var pos
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FreshVarHandler object at 0x725517a077d0>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FreshVarHandler object at 0x725517a077d0>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FreshVarHandler object at 0x725517a077d0>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
first assign: pos
replaced with: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos = $binop_add110.26 % $const114.27
replaced with: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FreshVarHandler object at 0x725517a077d0>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7255178aaff0>,
                  <numba.core.ir.Assign object at 0x7255178aa4b0>]})
==== SSA block rewrite pass on 0
Running <numba.core.ssa._FixSSAVars object at 0x725517a077d0>
on stmt: hypervectors = arg(0, name=hypervectors)
on stmt: hypervector_size = arg(1, name=hypervector_size)
on stmt: graph_index = arg(2, name=graph_index)
on stmt: node = arg(3, name=node)
on stmt: symbol = arg(4, name=symbol)
on stmt: X = arg(5, name=X)
on stmt: $const8.2 = const(NoneType, None)
on stmt: $const10.3 = const(NoneType, None)
on stmt: $12build_slice.4 = global(slice: <class 'slice'>)
on stmt: $12build_slice.5 = call $12build_slice.4($const8.2, $const10.3, func=$12build_slice.4, args=(Var($const8.2, graphs.py:124), Var($const10.3, graphs.py:124)), kws=(), vararg=None, varkwarg=None, target=None)
on stmt: $14build_tuple.6 = build_tuple(items=[Var(symbol, graphs.py:121), Var($12build_slice.5, graphs.py:124)])
on stmt: $16binary_subscr.7 = getitem(value=hypervectors, index=$14build_tuple.6, fn=<built-in function getitem>)
on stmt: $20get_iter.8 = getiter(value=$16binary_subscr.7)
on stmt: $phi22.0 = $20get_iter.8
on stmt: jump 22
==== SSA block rewrite pass on 22
Running <numba.core.ssa._FixSSAVars object at 0x725517a077d0>
on stmt: $22for_iter.1 = iternext(value=$phi22.0)
on stmt: $22for_iter.2 = pair_first(value=$22for_iter.1)
on stmt: $22for_iter.3 = pair_second(value=$22for_iter.1)
on stmt: $phi26.1 = $22for_iter.2
on stmt: branch $22for_iter.3, 26, 168
==== SSA block rewrite pass on 26
Running <numba.core.ssa._FixSSAVars object at 0x725517a077d0>
on stmt: k = $phi26.1
on stmt: $const30.3 = const(int, 32)
on stmt: chunk = k // $const30.3
on stmt: $const40.6 = const(int, 32)
on stmt: pos = k % $const40.6
on stmt: $binop_add54.11 = graph_index + node
on stmt: $60build_tuple.13 = build_tuple(items=[Var($binop_add54.11, graphs.py:128), Var(chunk, graphs.py:125)])
on stmt: $66binary_subscr.14 = getitem(value=X, index=$60build_tuple.13, fn=<built-in function getitem>)
on stmt: $const70.15 = const(int, 1)
on stmt: $binop_lshift74.17 = $const70.15 << pos
find_def var='pos' stmt=$binop_lshift74.17 = $const70.15 << pos
on stmt: $binop_ior78.18 = inplace_binop(fn=<built-in function ior>, immutable_fn=<built-in function or_>, lhs=$66binary_subscr.14, rhs=$binop_lshift74.17, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$60build_tuple.13] = $binop_ior78.18
on stmt: $binop_add94.21 = k + hypervector_size
on stmt: $const98.22 = const(int, 32)
on stmt: chunk.1 = $binop_add94.21 // $const98.22
on stmt: $binop_add110.26 = k + hypervector_size
on stmt: $const114.27 = const(int, 32)
on stmt: pos.1 = $binop_add110.26 % $const114.27
on stmt: $binop_add128.32 = graph_index + node
on stmt: $134build_tuple.34 = build_tuple(items=[Var($binop_add128.32, graphs.py:132), Var(chunk.1, graphs.py:130)])
on stmt: $140binary_subscr.35 = getitem(value=X, index=$134build_tuple.34, fn=<built-in function getitem>)
on stmt: $const144.36 = const(int, 1)
on stmt: $binop_lshift148.38 = $const144.36 << pos
find_def var='pos' stmt=$binop_lshift148.38 = $const144.36 << pos
replaced with: $binop_lshift148.38 = $const144.36 << pos.1
on stmt: $152unary_invert.39 = unary(fn=<built-in function invert>, value=$binop_lshift148.38)
on stmt: $binop_iand154.40 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$140binary_subscr.35, rhs=$152unary_invert.39, static_lhs=Undefined, static_rhs=Undefined)
on stmt: X[$134build_tuple.34] = $binop_iand154.40
on stmt: jump 22
==== SSA block rewrite pass on 168
Running <numba.core.ssa._FixSSAVars object at 0x725517a077d0>
on stmt: $const170.2 = const(NoneType, None)
on stmt: $170return_const.3 = cast(value=$const170.2)
on stmt: return $170return_const.3
Creating test data
Epoch#1 -- Accuracy train: 0.6643333333333333 -- Accuracy test: 0.681 
Epoch#2 -- Accuracy train: 0.8076666666666666 -- Accuracy test: 0.811 
Epoch#3 -- Accuracy train: 0.808 -- Accuracy test: 0.831 
Epoch#4 -- Accuracy train: 0.8217777777777778 -- Accuracy test: 0.838 
Epoch#5 -- Accuracy train: 0.8377777777777777 -- Accuracy test: 0.843 
Epoch#6 -- Accuracy train: 0.8407777777777777 -- Accuracy test: 0.838 
Epoch#7 -- Accuracy train: 0.8332222222222222 -- Accuracy test: 0.849 
Epoch#8 -- Accuracy train: 0.878 -- Accuracy test: 0.901 
Epoch#9 -- Accuracy train: 0.8144444444444444 -- Accuracy test: 0.829 
Epoch#10 -- Accuracy train: 0.6692222222222223 -- Accuracy test: 0.662 
Epoch#11 -- Accuracy train: 0.8498888888888889 -- Accuracy test: 0.862 
Epoch#12 -- Accuracy train: 0.7961111111111111 -- Accuracy test: 0.805 
Epoch#13 -- Accuracy train: 0.7862222222222223 -- Accuracy test: 0.802 
Epoch#14 -- Accuracy train: 0.8364444444444444 -- Accuracy test: 0.86 
Epoch#15 -- Accuracy train: 0.6643333333333333 -- Accuracy test: 0.681 
Epoch#16 -- Accuracy train: 0.6354444444444445 -- Accuracy test: 0.65 
Epoch#17 -- Accuracy train: 0.8481111111111111 -- Accuracy test: 0.856 
Epoch#18 -- Accuracy train: 0.8215555555555556 -- Accuracy test: 0.835 
Epoch#19 -- Accuracy train: 0.8148888888888889 -- Accuracy test: 0.829 
Epoch#20 -- Accuracy train: 0.764 -- Accuracy test: 0.786 
Epoch#21 -- Accuracy train: 0.8253333333333334 -- Accuracy test: 0.835 
Epoch#22 -- Accuracy train: 0.7737777777777778 -- Accuracy test: 0.774 
Epoch#23 -- Accuracy train: 0.7902222222222223 -- Accuracy test: 0.801 
Epoch#24 -- Accuracy train: 0.6405555555555555 -- Accuracy test: 0.642 
Epoch#25 -- Accuracy train: 0.8265555555555556 -- Accuracy test: 0.834 
Epoch#26 -- Accuracy train: 0.778 -- Accuracy test: 0.799 
Epoch#27 -- Accuracy train: 0.484 -- Accuracy test: 0.489 
Epoch#28 -- Accuracy train: 0.6665555555555556 -- Accuracy test: 0.672 
Epoch#29 -- Accuracy train: 0.7154444444444444 -- Accuracy test: 0.725 
Epoch#30 -- Accuracy train: 0.7102222222222222 -- Accuracy test: 0.722 
Epoch#31 -- Accuracy train: 0.7593333333333333 -- Accuracy test: 0.78 
Epoch#32 -- Accuracy train: 0.7105555555555556 -- Accuracy test: 0.73 
Epoch#33 -- Accuracy train: 0.5501111111111111 -- Accuracy test: 0.557 
Epoch#34 -- Accuracy train: 0.7542222222222222 -- Accuracy test: 0.773 
Epoch#35 -- Accuracy train: 0.7012222222222222 -- Accuracy test: 0.715 
Epoch#36 -- Accuracy train: 0.7795555555555556 -- Accuracy test: 0.793 
Epoch#37 -- Accuracy train: 0.8171111111111111 -- Accuracy test: 0.824 
Epoch#38 -- Accuracy train: 0.6692222222222223 -- Accuracy test: 0.662 
Epoch#39 -- Accuracy train: 0.3827777777777778 -- Accuracy test: 0.37 
Epoch#40 -- Accuracy train: 0.6635555555555556 -- Accuracy test: 0.695 
Epoch#41 -- Accuracy train: 0.7471111111111111 -- Accuracy test: 0.737 
Epoch#42 -- Accuracy train: 0.8076666666666666 -- Accuracy test: 0.827 
Epoch#43 -- Accuracy train: 0.6643333333333333 -- Accuracy test: 0.681 
Epoch#44 -- Accuracy train: 0.6713333333333333 -- Accuracy test: 0.677 
Epoch#45 -- Accuracy train: 0.7836666666666666 -- Accuracy test: 0.774 
Epoch#46 -- Accuracy train: 0.7876666666666666 -- Accuracy test: 0.799 
Epoch#47 -- Accuracy train: 0.7688888888888888 -- Accuracy test: 0.766 
Epoch#48 -- Accuracy train: 0.8995555555555556 -- Accuracy test: 0.899 
Epoch#49 -- Accuracy train: 0.7714444444444445 -- Accuracy test: 0.786 
Epoch#50 -- Accuracy train: 0.72 -- Accuracy test: 0.742 
Time: 922.0582501888275
Clause #0 W:(2 13) 
Number of literals: 0
Clause #1 W:(-36 27) NOT x0 AND NOT x411 AND NOT x769 AND NOT x993
Number of literals: 4
Clause #2 W:(-6 -2) NOT x311 AND NOT x460
Number of literals: 2
Clause #3 W:(3 48) NOT x409 AND NOT x851 AND NOT x984
Number of literals: 3
Clause #4 W:(16 -9) NOT x452 AND NOT x805 AND NOT x933
Number of literals: 3
Clause #5 W:(3 8) NOT x28 AND NOT x415 AND NOT x509 AND NOT x954
Number of literals: 4
Clause #6 W:(-41 -10) NOT x15 AND NOT x118 AND NOT x229 AND NOT x397 AND NOT x729 AND NOT x753 AND NOT x939
Number of literals: 7
Clause #7 W:(-22 -27) NOT x459 AND NOT x719 AND NOT x936 AND NOT x975 AND NOT x994
Number of literals: 5
Clause #8 W:(-19 13) NOT x253 AND NOT x395 AND NOT x420 AND NOT x446 AND NOT x477
Number of literals: 5
Clause #9 W:(-4 42) NOT x465 AND NOT x477 AND NOT x606 AND NOT x965
Number of literals: 4
Clause #10 W:(-10 0) NOT x438 AND NOT x832
Number of literals: 2
Clause #11 W:(47 -45) NOT x197 AND NOT x227 AND NOT x557 AND NOT x730 AND NOT x776 AND NOT x878
Number of literals: 6
Clause #12 W:(38 9) NOT x0 AND NOT x286 AND NOT x337 AND NOT x794
Number of literals: 4
Clause #13 W:(-42 -7) NOT x7 AND NOT x27 AND NOT x472 AND NOT x550
Number of literals: 4
Clause #14 W:(-24 3) NOT x29 AND NOT x39 AND NOT x124 AND NOT x176 AND NOT x487 AND NOT x686
Number of literals: 6
Clause #15 W:(-7 0) NOT x429
Number of literals: 1
Clause #16 W:(-12 -9) NOT x21 AND NOT x115 AND NOT x575
Number of literals: 3
Clause #17 W:(-66 -2) NOT x110 AND NOT x275 AND NOT x930
Number of literals: 3
Clause #18 W:(24 2) NOT x375
Number of literals: 1
Clause #19 W:(21 1) 
Number of literals: 0
Clause #20 W:(12 -53) NOT x565 AND NOT x626 AND NOT x924
Number of literals: 3
Clause #21 W:(52 23) 
Number of literals: 0
Clause #22 W:(4 9) 
Number of literals: 0
Clause #23 W:(2 -1) NOT x324 AND NOT x385 AND NOT x411 AND NOT x566 AND NOT x828
Number of literals: 5
Clause #24 W:(-24 -22) 
Number of literals: 0
Clause #25 W:(-76 10) 
Number of literals: 0
Clause #26 W:(-69 1) NOT x0 AND NOT x16 AND NOT x330 AND NOT x746 AND NOT x842
Number of literals: 5
Clause #27 W:(33 -3) NOT x468 AND NOT x539 AND NOT x563 AND NOT x811 AND NOT x839
Number of literals: 5
Clause #28 W:(-8 -1) 
Number of literals: 0
Clause #29 W:(-4 -12) NOT x118 AND NOT x916
Number of literals: 2
Clause #30 W:(-12 -13) NOT x51 AND NOT x217 AND NOT x512 AND NOT x631 AND NOT x690 AND NOT x990
Number of literals: 6
Clause #31 W:(27 1) x0 AND x14 AND NOT x220 AND NOT x803
Number of literals: 4
Clause #32 W:(-26 7) NOT x36 AND NOT x132 AND NOT x740 AND NOT x780
Number of literals: 4
Clause #33 W:(-4 -22) NOT x88 AND NOT x149 AND NOT x653 AND NOT x850 AND NOT x881
Number of literals: 5
Clause #34 W:(-52 9) NOT x26 AND NOT x34 AND NOT x217 AND NOT x964
Number of literals: 4
Clause #35 W:(-12 -23) NOT x84 AND NOT x170 AND NOT x304 AND NOT x596
Number of literals: 4
Clause #36 W:(-14 3) NOT x103 AND NOT x190 AND NOT x646 AND NOT x744 AND NOT x810
Number of literals: 5
Clause #37 W:(-12 13) NOT x352 AND NOT x416 AND NOT x917
Number of literals: 3
Clause #38 W:(-27 -13) NOT x51 AND NOT x642 AND NOT x722 AND NOT x779 AND NOT x923
Number of literals: 5
Clause #39 W:(32 -5) NOT x855
Number of literals: 1
Clause #40 W:(-2 10) x0 AND x928 AND NOT x260 AND NOT x453 AND NOT x490 AND NOT x618 AND NOT x956
Number of literals: 7
Clause #41 W:(20 26) NOT x111 AND NOT x149 AND NOT x180 AND NOT x469 AND NOT x479 AND NOT x560 AND NOT x640 AND NOT x697 AND NOT x790 AND NOT x1012
Number of literals: 10
Clause #42 W:(48 1) NOT x887 AND NOT x966 AND NOT x980 AND NOT x983
Number of literals: 4
Clause #43 W:(-13 -19) NOT x725 AND NOT x764 AND NOT x945
Number of literals: 3
Clause #44 W:(69 -40) NOT x130 AND NOT x592
Number of literals: 2
Clause #45 W:(74 -9) NOT x851
Number of literals: 1
Clause #46 W:(1 10) NOT x30 AND NOT x190 AND NOT x503 AND NOT x546 AND NOT x997
Number of literals: 5
Clause #47 W:(-71 19) NOT x364 AND NOT x711 AND NOT x733
Number of literals: 3
Clause #48 W:(3 1) NOT x8 AND NOT x414 AND NOT x719 AND NOT x884 AND NOT x921 AND NOT x1017
Number of literals: 6
Clause #49 W:(-38 0) NOT x8
Number of literals: 1
Clause #50 W:(-1 2) x602 AND NOT x364 AND NOT x541 AND NOT x897
Number of literals: 4
Clause #51 W:(34 3) NOT x118 AND NOT x486 AND NOT x504 AND NOT x506 AND NOT x787
Number of literals: 5
Clause #52 W:(15 -2) NOT x431
Number of literals: 1
Clause #53 W:(18 17) NOT x695 AND NOT x767 AND NOT x814 AND NOT x839 AND NOT x972
Number of literals: 5
Clause #54 W:(1 -10) NOT x32 AND NOT x340 AND NOT x646 AND NOT x717 AND NOT x940
Number of literals: 5
Clause #55 W:(-1 -39) NOT x88 AND NOT x501
Number of literals: 2
Clause #56 W:(-3 25) NOT x442 AND NOT x885 AND NOT x887 AND NOT x920
Number of literals: 4
Clause #57 W:(-1 0) NOT x956 AND NOT x1016
Number of literals: 2
Clause #58 W:(-8 5) NOT x194 AND NOT x432 AND NOT x548 AND NOT x706 AND NOT x952
Number of literals: 5
Clause #59 W:(-31 4) NOT x177 AND NOT x259 AND NOT x342 AND NOT x732 AND NOT x876
Number of literals: 5
Clause #60 W:(-6 -4) 
Number of literals: 0
Clause #61 W:(-36 -3) NOT x168 AND NOT x476 AND NOT x894 AND NOT x1002
Number of literals: 4
Clause #62 W:(4 44) NOT x266 AND NOT x433 AND NOT x606
Number of literals: 3
Clause #63 W:(-13 0) 
Number of literals: 0
Clause #64 W:(18 36) 
Number of literals: 0
Clause #65 W:(17 32) NOT x524 AND NOT x925 AND NOT x1020
Number of literals: 3
Clause #66 W:(4 0) NOT x387 AND NOT x606
Number of literals: 2
Clause #67 W:(-7 -1) NOT x240 AND NOT x676
Number of literals: 2
Clause #68 W:(1 -1) 
Number of literals: 0
Clause #69 W:(106 -53) NOT x2 AND NOT x42 AND NOT x116 AND NOT x434 AND NOT x727 AND NOT x882 AND NOT x933
Number of literals: 7
Clause #70 W:(-3 1) NOT x11 AND NOT x220 AND NOT x805 AND NOT x875
Number of literals: 4
Clause #71 W:(4 5) NOT x100 AND NOT x658 AND NOT x685
Number of literals: 3
Clause #72 W:(-14 63) NOT x17 AND NOT x77 AND NOT x120 AND NOT x292 AND NOT x863
Number of literals: 5
Clause #73 W:(27 14) NOT x166 AND NOT x528 AND NOT x560 AND NOT x573 AND NOT x702 AND NOT x752 AND NOT x810
Number of literals: 7
Clause #74 W:(5 -57) NOT x110 AND NOT x684 AND NOT x793 AND NOT x960
Number of literals: 4
Clause #75 W:(-37 -23) NOT x267 AND NOT x446 AND NOT x849 AND NOT x953
Number of literals: 4
Clause #76 W:(2 -58) NOT x289 AND NOT x395 AND NOT x670
Number of literals: 3
Clause #77 W:(-29 -13) NOT x44 AND NOT x218 AND NOT x293 AND NOT x408 AND NOT x767
Number of literals: 5
Clause #78 W:(-12 10) NOT x198 AND NOT x893
Number of literals: 2
Clause #79 W:(6 18) NOT x376 AND NOT x480 AND NOT x670 AND NOT x946
Number of literals: 4
Clause #80 W:(-4 -6) NOT x288 AND NOT x412 AND NOT x493 AND NOT x665 AND NOT x1014
Number of literals: 5
Clause #81 W:(2 10) NOT x0 AND NOT x199 AND NOT x249 AND NOT x423 AND NOT x567 AND NOT x699
Number of literals: 6
Clause #82 W:(-12 -3) NOT x444 AND NOT x737 AND NOT x781 AND NOT x880 AND NOT x929
Number of literals: 5
Clause #83 W:(-8 -13) NOT x18 AND NOT x41 AND NOT x318 AND NOT x330 AND NOT x411 AND NOT x417 AND NOT x675 AND NOT x969
Number of literals: 8
Clause #84 W:(4 3) NOT x40
Number of literals: 1
Clause #85 W:(-27 -1) NOT x103 AND NOT x160 AND NOT x189 AND NOT x198 AND NOT x806
Number of literals: 5
Clause #86 W:(-41 4) NOT x124 AND NOT x164 AND NOT x300 AND NOT x369 AND NOT x783
Number of literals: 5
Clause #87 W:(10 12) NOT x226 AND NOT x293 AND NOT x363 AND NOT x375 AND NOT x725 AND NOT x867 AND NOT x1014
Number of literals: 7
Clause #88 W:(39 -12) NOT x930
Number of literals: 1
Clause #89 W:(52 -50) 
Number of literals: 0
Clause #90 W:(-31 -6) x223 AND NOT x214 AND NOT x504 AND NOT x559 AND NOT x569 AND NOT x800 AND NOT x803
Number of literals: 7
Clause #91 W:(20 5) NOT x168 AND NOT x265
Number of literals: 2
Clause #92 W:(-8 29) NOT x619 AND NOT x811 AND NOT x848
Number of literals: 3
Clause #93 W:(-27 -25) NOT x311 AND NOT x416 AND NOT x646 AND NOT x699 AND NOT x861
Number of literals: 5
Clause #94 W:(-3 13) NOT x142 AND NOT x366 AND NOT x487 AND NOT x1003
Number of literals: 4
Clause #95 W:(-41 -9) NOT x321 AND NOT x345 AND NOT x554 AND NOT x561 AND NOT x574 AND NOT x760
Number of literals: 6
Clause #96 W:(-3 13) NOT x3 AND NOT x360 AND NOT x432 AND NOT x467 AND NOT x479 AND NOT x509 AND NOT x588 AND NOT x589 AND NOT x955
Number of literals: 9
Clause #97 W:(44 -31) NOT x88 AND NOT x172 AND NOT x723 AND NOT x890
Number of literals: 4
Clause #98 W:(-2 -10) NOT x31 AND NOT x67 AND NOT x182 AND NOT x392 AND NOT x680
Number of literals: 5
Clause #99 W:(-35 -15) NOT x268 AND NOT x674 AND NOT x696 AND NOT x853 AND NOT x855 AND NOT x909
Number of literals: 6
Clause #100 W:(-31 -11) NOT x204 AND NOT x210 AND NOT x297 AND NOT x307 AND NOT x488 AND NOT x869
Number of literals: 6
Clause #101 W:(1 10) NOT x0 AND NOT x760 AND NOT x818 AND NOT x882
Number of literals: 4
Clause #102 W:(64 4) NOT x60 AND NOT x581
Number of literals: 2
Clause #103 W:(4 8) NOT x375 AND NOT x538 AND NOT x567 AND NOT x666 AND NOT x694 AND NOT x866 AND NOT x1010
Number of literals: 7
Clause #104 W:(-47 1) NOT x357 AND NOT x430 AND NOT x525 AND NOT x597 AND NOT x906 AND NOT x1005
Number of literals: 6
Clause #105 W:(3 7) NOT x213 AND NOT x303 AND NOT x464 AND NOT x507 AND NOT x679 AND NOT x939 AND NOT x947
Number of literals: 7
Clause #106 W:(-1 6) x599 AND NOT x922
Number of literals: 2
Clause #107 W:(2 46) NOT x49 AND NOT x182 AND NOT x213 AND NOT x593 AND NOT x658 AND NOT x900 AND NOT x1002
Number of literals: 7
Clause #108 W:(-34 -1) NOT x11 AND NOT x306
Number of literals: 2
Clause #109 W:(-18 -35) NOT x105 AND NOT x287 AND NOT x303 AND NOT x348 AND NOT x356 AND NOT x511 AND NOT x615 AND NOT x910
Number of literals: 8
Clause #110 W:(-92 8) NOT x41 AND NOT x55 AND NOT x194 AND NOT x290 AND NOT x481 AND NOT x563 AND NOT x863
Number of literals: 7
Clause #111 W:(7 24) NOT x609 AND NOT x753 AND NOT x806 AND NOT x973
Number of literals: 4
Clause #112 W:(-16 -18) NOT x8 AND NOT x142 AND NOT x418 AND NOT x494 AND NOT x546 AND NOT x727 AND NOT x962
Number of literals: 7
Clause #113 W:(4 30) NOT x119 AND NOT x195 AND NOT x310 AND NOT x611 AND NOT x709
Number of literals: 5
Clause #114 W:(-32 45) NOT x0 AND NOT x983 AND NOT x1006
Number of literals: 3
Clause #115 W:(-16 -15) 
Number of literals: 0
Clause #116 W:(-12 -20) NOT x9 AND NOT x175 AND NOT x482 AND NOT x492 AND NOT x546
Number of literals: 5
Clause #117 W:(12 20) NOT x63 AND NOT x431 AND NOT x587 AND NOT x798 AND NOT x827 AND NOT x966
Number of literals: 6
Clause #118 W:(-13 -12) NOT x24 AND NOT x267 AND NOT x612 AND NOT x685 AND NOT x774 AND NOT x789 AND NOT x848 AND NOT x1017
Number of literals: 8
Clause #119 W:(-50 52) NOT x21 AND NOT x158 AND NOT x532 AND NOT x962 AND NOT x964
Number of literals: 5
Clause #120 W:(-1 14) NOT x632
Number of literals: 1
Clause #121 W:(-17 4) NOT x9 AND NOT x481 AND NOT x597 AND NOT x715 AND NOT x735 AND NOT x881
Number of literals: 6
Clause #122 W:(16 6) NOT x331 AND NOT x481 AND NOT x736
Number of literals: 3
Clause #123 W:(-15 2) NOT x84 AND NOT x335 AND NOT x370 AND NOT x384 AND NOT x419 AND NOT x602
Number of literals: 6
Clause #124 W:(8 -58) NOT x206 AND NOT x253 AND NOT x290 AND NOT x365 AND NOT x423 AND NOT x686 AND NOT x783
Number of literals: 7
Clause #125 W:(-10 6) NOT x214 AND NOT x266 AND NOT x739 AND NOT x778 AND NOT x886 AND NOT x1007
Number of literals: 6
Clause #126 W:(24 23) NOT x203 AND NOT x680
Number of literals: 2
Clause #127 W:(10 33) NOT x355 AND NOT x716 AND NOT x755 AND NOT x820
Number of literals: 4
Clause #128 W:(75 -16) NOT x146 AND NOT x217 AND NOT x912
Number of literals: 3
Clause #129 W:(-2 40) NOT x260 AND NOT x782
Number of literals: 2
Clause #130 W:(19 -14) NOT x33 AND NOT x172 AND NOT x787 AND NOT x921
Number of literals: 4
Clause #131 W:(5 29) NOT x94 AND NOT x435 AND NOT x567 AND NOT x936
Number of literals: 4
Clause #132 W:(-74 -1) 
Number of literals: 0
Clause #133 W:(3 -13) NOT x85
Number of literals: 1
Clause #134 W:(8 21) NOT x59 AND NOT x155 AND NOT x883
Number of literals: 3
Clause #135 W:(10 -30) NOT x50 AND NOT x773 AND NOT x886 AND NOT x893 AND NOT x921 AND NOT x1012
Number of literals: 6
Clause #136 W:(-38 12) NOT x86 AND NOT x133 AND NOT x168 AND NOT x312 AND NOT x419 AND NOT x624 AND NOT x666
Number of literals: 7
Clause #137 W:(9 -52) NOT x303 AND NOT x318 AND NOT x741 AND NOT x937
Number of literals: 4
Clause #138 W:(26 11) NOT x239 AND NOT x670 AND NOT x792 AND NOT x798 AND NOT x907
Number of literals: 5
Clause #139 W:(-4 -1) NOT x188 AND NOT x217 AND NOT x644
Number of literals: 3
Clause #140 W:(-1 26) NOT x235 AND NOT x338 AND NOT x598 AND NOT x749 AND NOT x936 AND NOT x965
Number of literals: 6
Clause #141 W:(23 8) NOT x280 AND NOT x282 AND NOT x391 AND NOT x458 AND NOT x563 AND NOT x665 AND NOT x796
Number of literals: 7
Clause #142 W:(-1 21) NOT x68 AND NOT x360 AND NOT x472 AND NOT x907
Number of literals: 4
Clause #143 W:(17 31) NOT x42 AND NOT x72 AND NOT x278 AND NOT x426 AND NOT x470 AND NOT x973
Number of literals: 6
Clause #144 W:(43 7) NOT x243 AND NOT x546 AND NOT x811 AND NOT x919
Number of literals: 4
Clause #145 W:(-4 -2) NOT x592
Number of literals: 1
Clause #146 W:(-14 -1) NOT x275 AND NOT x290 AND NOT x513 AND NOT x715
Number of literals: 4
Clause #147 W:(23 -16) NOT x40 AND NOT x90 AND NOT x324
Number of literals: 3
Clause #148 W:(-3 -26) x1 AND NOT x206 AND NOT x208 AND NOT x269 AND NOT x274 AND NOT x646 AND NOT x695
Number of literals: 7
Clause #149 W:(-16 2) NOT x0 AND NOT x31 AND NOT x37 AND NOT x457 AND NOT x496 AND NOT x835 AND NOT x937
Number of literals: 7
Clause #150 W:(-32 4) NOT x0 AND NOT x347 AND NOT x366
Number of literals: 3
Clause #151 W:(-31 18) NOT x227 AND NOT x963
Number of literals: 2
Clause #152 W:(8 -15) NOT x130 AND NOT x201 AND NOT x225 AND NOT x246 AND NOT x588 AND NOT x650 AND NOT x736
Number of literals: 7
Clause #153 W:(5 35) NOT x29 AND NOT x115 AND NOT x188 AND NOT x335 AND NOT x573 AND NOT x615 AND NOT x621 AND NOT x752
Number of literals: 8
Clause #154 W:(-7 -48) NOT x361 AND NOT x784 AND NOT x875 AND NOT x905
Number of literals: 4
Clause #155 W:(-44 43) NOT x73 AND NOT x149 AND NOT x821
Number of literals: 3
Clause #156 W:(35 -19) NOT x30 AND NOT x707 AND NOT x792 AND NOT x883
Number of literals: 4
Clause #157 W:(-24 7) NOT x193 AND NOT x506 AND NOT x531 AND NOT x608 AND NOT x646
Number of literals: 5
Clause #158 W:(-5 0) NOT x0 AND NOT x108 AND NOT x409 AND NOT x566 AND NOT x594 AND NOT x980
Number of literals: 6
Clause #159 W:(-9 6) NOT x44 AND NOT x580 AND NOT x678 AND NOT x917
Number of literals: 4
Clause #160 W:(27 32) NOT x403 AND NOT x434 AND NOT x669 AND NOT x688 AND NOT x866
Number of literals: 5
Clause #161 W:(-2 1) NOT x28
Number of literals: 1
Clause #162 W:(-19 2) NOT x349 AND NOT x373 AND NOT x442 AND NOT x576 AND NOT x599 AND NOT x714 AND NOT x767 AND NOT x1004
Number of literals: 8
Clause #163 W:(1 49) NOT x67 AND NOT x407 AND NOT x527 AND NOT x618 AND NOT x849 AND NOT x866 AND NOT x874 AND NOT x932
Number of literals: 8
Clause #164 W:(-8 21) NOT x36 AND NOT x42 AND NOT x134 AND NOT x151
Number of literals: 4
Clause #165 W:(12 45) NOT x139 AND NOT x459 AND NOT x552 AND NOT x780 AND NOT x832 AND NOT x854 AND NOT x911 AND NOT x964
Number of literals: 8
Clause #166 W:(86 -88) 
Number of literals: 0
Clause #167 W:(-21 -23) NOT x12 AND NOT x75 AND NOT x412 AND NOT x442
Number of literals: 4
Clause #168 W:(-15 -2) 
Number of literals: 0
Clause #169 W:(-21 44) NOT x74 AND NOT x458 AND NOT x910 AND NOT x917
Number of literals: 4
Clause #170 W:(54 -35) NOT x53 AND NOT x91 AND NOT x418 AND NOT x510 AND NOT x642 AND NOT x648
Number of literals: 6
Clause #171 W:(-18 -4) NOT x397 AND NOT x951
Number of literals: 2
Clause #172 W:(2 -20) x0 AND NOT x193 AND NOT x228 AND NOT x344 AND NOT x1010
Number of literals: 5
Clause #173 W:(21 23) NOT x146 AND NOT x177 AND NOT x213 AND NOT x355 AND NOT x575 AND NOT x670 AND NOT x971
Number of literals: 7
Clause #174 W:(-5 4) NOT x233 AND NOT x369 AND NOT x381 AND NOT x430 AND NOT x1001
Number of literals: 5
Clause #175 W:(-22 5) NOT x88 AND NOT x254
Number of literals: 2
Clause #176 W:(-7 12) NOT x32 AND NOT x177 AND NOT x648 AND NOT x903
Number of literals: 4
Clause #177 W:(38 -2) NOT x7 AND NOT x69 AND NOT x430 AND NOT x561 AND NOT x569 AND NOT x758
Number of literals: 6
Clause #178 W:(6 7) NOT x111 AND NOT x291 AND NOT x526 AND NOT x822
Number of literals: 4
Clause #179 W:(-34 -4) NOT x134 AND NOT x259 AND NOT x877 AND NOT x941 AND NOT x948
Number of literals: 5
Clause #180 W:(-9 -5) NOT x166 AND NOT x182 AND NOT x302 AND NOT x736 AND NOT x925
Number of literals: 5
Clause #181 W:(15 23) NOT x194 AND NOT x226 AND NOT x450 AND NOT x485 AND NOT x808 AND NOT x1000
Number of literals: 6
Clause #182 W:(-43 40) 
Number of literals: 0
Clause #183 W:(2 44) NOT x20 AND NOT x198 AND NOT x450 AND NOT x889 AND NOT x915 AND NOT x944 AND NOT x950
Number of literals: 7
Clause #184 W:(-14 0) NOT x56 AND NOT x374 AND NOT x412 AND NOT x988 AND NOT x1000
Number of literals: 5
Clause #185 W:(8 -7) NOT x56 AND NOT x515 AND NOT x603 AND NOT x658
Number of literals: 4
Clause #186 W:(133 -135) x0 AND NOT x201 AND NOT x490 AND NOT x602 AND NOT x635 AND NOT x925
Number of literals: 6
Clause #187 W:(-16 -33) NOT x109 AND NOT x268 AND NOT x457 AND NOT x558 AND NOT x642 AND NOT x735 AND NOT x779 AND NOT x879 AND NOT x979
Number of literals: 9
Clause #188 W:(-17 27) NOT x23 AND NOT x310 AND NOT x592
Number of literals: 3
Clause #189 W:(1 7) NOT x19 AND NOT x290 AND NOT x364 AND NOT x647 AND NOT x991 AND NOT x999
Number of literals: 6
Clause #190 W:(1 1) NOT x334 AND NOT x593 AND NOT x622
Number of literals: 3
Clause #191 W:(7 1) NOT x547 AND NOT x919
Number of literals: 2
Clause #192 W:(47 -43) NOT x3 AND NOT x110 AND NOT x147 AND NOT x425 AND NOT x686 AND NOT x788 AND NOT x880 AND NOT x961 AND NOT x1007
Number of literals: 9
Clause #193 W:(-6 -3) 
Number of literals: 0
Clause #194 W:(5 -1) NOT x363 AND NOT x647 AND NOT x743
Number of literals: 3
Clause #195 W:(3 4) NOT x10 AND NOT x169 AND NOT x197
Number of literals: 3
Clause #196 W:(22 20) NOT x130 AND NOT x449 AND NOT x525 AND NOT x646 AND NOT x649
Number of literals: 5
Clause #197 W:(1 3) NOT x57 AND NOT x94 AND NOT x243 AND NOT x267 AND NOT x527 AND NOT x673 AND NOT x849 AND NOT x1012
Number of literals: 8
Clause #198 W:(14 40) NOT x173 AND NOT x514
Number of literals: 2
Clause #199 W:(-22 2) NOT x600 AND NOT x854
Number of literals: 2
Clause #200 W:(34 9) NOT x8 AND NOT x425 AND NOT x860
Number of literals: 3
Clause #201 W:(10 22) NOT x47 AND NOT x213 AND NOT x346 AND NOT x603 AND NOT x773 AND NOT x976
Number of literals: 6
Clause #202 W:(-29 -4) NOT x267 AND NOT x580 AND NOT x901
Number of literals: 3
Clause #203 W:(6 8) NOT x389 AND NOT x751 AND NOT x840
Number of literals: 3
Clause #204 W:(-19 -12) NOT x320 AND NOT x917 AND NOT x972
Number of literals: 3
Clause #205 W:(-30 14) NOT x98 AND NOT x370 AND NOT x395 AND NOT x525 AND NOT x868 AND NOT x948 AND NOT x964
Number of literals: 7
Clause #206 W:(-6 65) NOT x506 AND NOT x824 AND NOT x829 AND NOT x958
Number of literals: 4
Clause #207 W:(-11 2) NOT x0 AND NOT x134 AND NOT x268 AND NOT x691 AND NOT x916 AND NOT x941
Number of literals: 6
Clause #208 W:(30 -24) NOT x303 AND NOT x445 AND NOT x584 AND NOT x828
Number of literals: 4
Clause #209 W:(12 -26) NOT x581 AND NOT x612 AND NOT x777 AND NOT x780 AND NOT x875 AND NOT x880
Number of literals: 6
Clause #210 W:(42 -29) NOT x162 AND NOT x252 AND NOT x367 AND NOT x634
Number of literals: 4
Clause #211 W:(-4 21) NOT x211 AND NOT x584 AND NOT x603 AND NOT x819
Number of literals: 4
Clause #212 W:(-43 64) NOT x186 AND NOT x201 AND NOT x669 AND NOT x922 AND NOT x956 AND NOT x1005
Number of literals: 6
Clause #213 W:(-20 26) NOT x66 AND NOT x248 AND NOT x333 AND NOT x496 AND NOT x735 AND NOT x945
Number of literals: 6
Clause #214 W:(1 49) NOT x149 AND NOT x268 AND NOT x304
Number of literals: 3
Clause #215 W:(-3 -1) NOT x403 AND NOT x503 AND NOT x772 AND NOT x783 AND NOT x846 AND NOT x927
Number of literals: 6
Clause #216 W:(1 44) NOT x224 AND NOT x349 AND NOT x358 AND NOT x569 AND NOT x595
Number of literals: 5
Clause #217 W:(10 -2) NOT x37 AND NOT x295 AND NOT x900
Number of literals: 3
Clause #218 W:(4 13) NOT x124 AND NOT x183 AND NOT x811 AND NOT x928
Number of literals: 4
Clause #219 W:(31 25) NOT x400 AND NOT x443 AND NOT x481 AND NOT x493 AND NOT x518 AND NOT x524 AND NOT x599 AND NOT x607 AND NOT x858
Number of literals: 9
Clause #220 W:(-14 -22) NOT x139 AND NOT x149 AND NOT x231 AND NOT x560 AND NOT x707 AND NOT x807
Number of literals: 6
Clause #221 W:(-26 -11) NOT x1 AND NOT x55 AND NOT x322 AND NOT x473
Number of literals: 4
Clause #222 W:(23 -5) NOT x477 AND NOT x509 AND NOT x559 AND NOT x586 AND NOT x856
Number of literals: 5
Clause #223 W:(19 37) NOT x191 AND NOT x415 AND NOT x588 AND NOT x621 AND NOT x747 AND NOT x897 AND NOT x992
Number of literals: 7
Clause #224 W:(0 -7) NOT x338 AND NOT x619 AND NOT x789
Number of literals: 3
Clause #225 W:(35 -7) NOT x214 AND NOT x792
Number of literals: 2
Clause #226 W:(-39 -43) NOT x217 AND NOT x239 AND NOT x326 AND NOT x605 AND NOT x739 AND NOT x755
Number of literals: 6
Clause #227 W:(-28 24) NOT x173 AND NOT x608 AND NOT x826
Number of literals: 3
Clause #228 W:(1 62) NOT x16 AND NOT x246 AND NOT x370 AND NOT x962
Number of literals: 4
Clause #229 W:(13 30) NOT x43 AND NOT x202 AND NOT x694 AND NOT x786 AND NOT x830
Number of literals: 5
Clause #230 W:(59 -58) NOT x317 AND NOT x514 AND NOT x614 AND NOT x1019
Number of literals: 4
Clause #231 W:(14 -12) NOT x78 AND NOT x537 AND NOT x722 AND NOT x900
Number of literals: 4
Clause #232 W:(60 -62) NOT x719 AND NOT x870 AND NOT x940
Number of literals: 3
Clause #233 W:(-11 -2) NOT x31 AND NOT x460 AND NOT x678 AND NOT x736 AND NOT x865
Number of literals: 5
Clause #234 W:(-7 0) NOT x162 AND NOT x197 AND NOT x550 AND NOT x760
Number of literals: 4
Clause #235 W:(29 5) NOT x40 AND NOT x761 AND NOT x865 AND NOT x898 AND NOT x984
Number of literals: 5
Clause #236 W:(-21 -7) NOT x369 AND NOT x654 AND NOT x896
Number of literals: 3
Clause #237 W:(-4 8) x921 AND NOT x180 AND NOT x184 AND NOT x505 AND NOT x622
Number of literals: 5
Clause #238 W:(2 7) NOT x41 AND NOT x154 AND NOT x191 AND NOT x326 AND NOT x898 AND NOT x966
Number of literals: 6
Clause #239 W:(0 48) NOT x159 AND NOT x674 AND NOT x755
Number of literals: 3
Clause #240 W:(-2 -24) NOT x809
Number of literals: 1
Clause #241 W:(15 11) NOT x68 AND NOT x561 AND NOT x697 AND NOT x841 AND NOT x953
Number of literals: 5
Clause #242 W:(-26 -37) NOT x86 AND NOT x270 AND NOT x311 AND NOT x752 AND NOT x788 AND NOT x925
Number of literals: 6
Clause #243 W:(4 0) NOT x845
Number of literals: 1
Clause #244 W:(7 -8) NOT x15 AND NOT x181 AND NOT x655 AND NOT x685 AND NOT x883 AND NOT x893 AND NOT x950
Number of literals: 7
Clause #245 W:(24 -59) NOT x205 AND NOT x353 AND NOT x464 AND NOT x806
Number of literals: 4
Clause #246 W:(-9 -30) NOT x257 AND NOT x432 AND NOT x771 AND NOT x865
Number of literals: 4
Clause #247 W:(70 -21) NOT x44 AND NOT x373 AND NOT x888
Number of literals: 3
Clause #248 W:(-22 4) NOT x168 AND NOT x282 AND NOT x289 AND NOT x655 AND NOT x710 AND NOT x867
Number of literals: 6
Clause #249 W:(-378 382) x0 AND NOT x1 AND NOT x338 AND NOT x436 AND NOT x443 AND NOT x454 AND NOT x456 AND NOT x534 AND NOT x745
Number of literals: 9
Clause #250 W:(13 56) NOT x101 AND NOT x338 AND NOT x385
Number of literals: 3
Clause #251 W:(8 6) NOT x629 AND NOT x741 AND NOT x749 AND NOT x918
Number of literals: 4
Clause #252 W:(-5 0) NOT x706
Number of literals: 1
Clause #253 W:(20 8) NOT x0 AND NOT x238 AND NOT x244 AND NOT x505 AND NOT x655 AND NOT x775 AND NOT x786 AND NOT x801
Number of literals: 8
Clause #254 W:(-23 3) NOT x422 AND NOT x529 AND NOT x599 AND NOT x615 AND NOT x616
Number of literals: 5
Clause #255 W:(-24 23) NOT x162 AND NOT x363
Number of literals: 2
Clause #256 W:(42 -25) NOT x324 AND NOT x613
Number of literals: 2
Clause #257 W:(-56 40) NOT x56 AND NOT x589 AND NOT x724 AND NOT x731 AND NOT x746 AND NOT x821 AND NOT x904
Number of literals: 7
Clause #258 W:(-15 -13) NOT x559 AND NOT x624 AND NOT x1007
Number of literals: 3
Clause #259 W:(-18 -20) NOT x115 AND NOT x181 AND NOT x423 AND NOT x649 AND NOT x788 AND NOT x900 AND NOT x949 AND NOT x959 AND NOT x974 AND NOT x1023
Number of literals: 10
Clause #260 W:(-4 -1) NOT x97
Number of literals: 1
Clause #261 W:(-25 1) NOT x855
Number of literals: 1
Clause #262 W:(-27 38) NOT x44 AND NOT x608 AND NOT x652 AND NOT x698 AND NOT x850 AND NOT x1020
Number of literals: 6
Clause #263 W:(-11 30) NOT x81 AND NOT x92 AND NOT x413
Number of literals: 3
Clause #264 W:(0 105) NOT x1
Number of literals: 1
Clause #265 W:(3 6) NOT x198 AND NOT x281 AND NOT x446 AND NOT x530 AND NOT x685 AND NOT x695 AND NOT x894 AND NOT x963
Number of literals: 8
Clause #266 W:(-14 15) NOT x75 AND NOT x183 AND NOT x250 AND NOT x256 AND NOT x394 AND NOT x593 AND NOT x767 AND NOT x803
Number of literals: 8
Clause #267 W:(-18 47) NOT x191 AND NOT x266 AND NOT x872 AND NOT x973
Number of literals: 4
Clause #268 W:(8 15) NOT x10 AND NOT x130 AND NOT x218 AND NOT x834 AND NOT x895 AND NOT x934
Number of literals: 6
Clause #269 W:(8 11) NOT x125 AND NOT x507 AND NOT x662 AND NOT x713 AND NOT x985 AND NOT x1014
Number of literals: 6
Clause #270 W:(-9 -15) NOT x275 AND NOT x508 AND NOT x629 AND NOT x929
Number of literals: 4
Clause #271 W:(49 9) NOT x58 AND NOT x91 AND NOT x219 AND NOT x346 AND NOT x371 AND NOT x703 AND NOT x1023
Number of literals: 7
Clause #272 W:(19 2) x486 AND NOT x253 AND NOT x596 AND NOT x795 AND NOT x1004
Number of literals: 5
Clause #273 W:(22 -26) NOT x270 AND NOT x371 AND NOT x670 AND NOT x891
Number of literals: 4
Clause #274 W:(69 -88) 
Number of literals: 0
Clause #275 W:(-1 -36) NOT x52 AND NOT x614 AND NOT x826 AND NOT x836
Number of literals: 4
Clause #276 W:(-35 -3) NOT x237 AND NOT x654 AND NOT x877 AND NOT x934
Number of literals: 4
Clause #277 W:(13 1) NOT x100 AND NOT x571 AND NOT x597 AND NOT x771 AND NOT x802
Number of literals: 5
Clause #278 W:(13 29) NOT x93 AND NOT x317 AND NOT x647
Number of literals: 3
Clause #279 W:(5 0) NOT x389 AND NOT x954
Number of literals: 2
Clause #280 W:(-12 13) NOT x60 AND NOT x114 AND NOT x300 AND NOT x539 AND NOT x576
Number of literals: 5
Clause #281 W:(3 4) NOT x190 AND NOT x590 AND NOT x693 AND NOT x817 AND NOT x825
Number of literals: 5
Clause #282 W:(-3 32) NOT x161 AND NOT x516 AND NOT x558 AND NOT x934
Number of literals: 4
Clause #283 W:(-18 -15) NOT x16 AND NOT x839 AND NOT x860 AND NOT x896
Number of literals: 4
Clause #284 W:(1 13) NOT x387 AND NOT x684 AND NOT x870 AND NOT x932 AND NOT x1012
Number of literals: 5
Clause #285 W:(-3 -19) NOT x562 AND NOT x622
Number of literals: 2
Clause #286 W:(24 10) NOT x340 AND NOT x582 AND NOT x834
Number of literals: 3
Clause #287 W:(17 6) NOT x7 AND NOT x602 AND NOT x606 AND NOT x960
Number of literals: 4
Clause #288 W:(5 1) NOT x84 AND NOT x163 AND NOT x565 AND NOT x835
Number of literals: 4
Clause #289 W:(57 -74) NOT x227 AND NOT x513
Number of literals: 2
Clause #290 W:(4 -9) NOT x613
Number of literals: 1
Clause #291 W:(246 -250) x2 AND NOT x150 AND NOT x223 AND NOT x261 AND NOT x679 AND NOT x872 AND NOT x996
Number of literals: 7
Clause #292 W:(-14 5) NOT x13 AND NOT x152 AND NOT x204 AND NOT x705 AND NOT x783 AND NOT x817
Number of literals: 6
Clause #293 W:(2 32) NOT x208 AND NOT x307 AND NOT x442 AND NOT x666 AND NOT x812 AND NOT x938 AND NOT x1003
Number of literals: 7
Clause #294 W:(-6 -10) NOT x389 AND NOT x494 AND NOT x910 AND NOT x987 AND NOT x1014
Number of literals: 5
Clause #295 W:(153 -134) NOT x0 AND NOT x615
Number of literals: 2
Clause #296 W:(-16 16) NOT x184 AND NOT x557
Number of literals: 2
Clause #297 W:(1 5) NOT x130 AND NOT x297 AND NOT x368 AND NOT x522 AND NOT x685
Number of literals: 5
Clause #298 W:(-3 15) NOT x0 AND NOT x239 AND NOT x473 AND NOT x579 AND NOT x610 AND NOT x818
Number of literals: 6
Clause #299 W:(-20 -1) NOT x475 AND NOT x989
Number of literals: 2
Clause #300 W:(4 5) NOT x210 AND NOT x1002
Number of literals: 2
Clause #301 W:(6 22) NOT x621 AND NOT x929 AND NOT x1007
Number of literals: 3
Clause #302 W:(-2 0) NOT x68 AND NOT x395 AND NOT x592
Number of literals: 3
Clause #303 W:(10 -9) NOT x327 AND NOT x346 AND NOT x353 AND NOT x377 AND NOT x900 AND NOT x960
Number of literals: 6
Clause #304 W:(-35 59) NOT x256 AND NOT x421 AND NOT x456 AND NOT x512 AND NOT x554 AND NOT x754 AND NOT x800 AND NOT x847 AND NOT x907
Number of literals: 9
Clause #305 W:(-7 -14) NOT x433 AND NOT x857 AND NOT x878 AND NOT x928
Number of literals: 4
Clause #306 W:(15 6) NOT x57 AND NOT x180 AND NOT x477 AND NOT x493 AND NOT x513 AND NOT x551 AND NOT x574 AND NOT x620 AND NOT x653
Number of literals: 9
Clause #307 W:(-6 -2) NOT x66 AND NOT x279 AND NOT x1000 AND NOT x1017
Number of literals: 4
Clause #308 W:(5 23) NOT x534 AND NOT x808 AND NOT x838
Number of literals: 3
Clause #309 W:(-19 -71) NOT x141 AND NOT x237 AND NOT x728 AND NOT x737 AND NOT x744 AND NOT x936
Number of literals: 6
Clause #310 W:(-7 1) NOT x234 AND NOT x484 AND NOT x767
Number of literals: 3
Clause #311 W:(-4 5) NOT x378 AND NOT x575 AND NOT x613 AND NOT x738 AND NOT x996
Number of literals: 5
Clause #312 W:(2 12) NOT x0 AND NOT x201 AND NOT x412 AND NOT x503
Number of literals: 4
Clause #313 W:(10 -22) 
Number of literals: 0
Clause #314 W:(17 6) NOT x174 AND NOT x433 AND NOT x819 AND NOT x932
Number of literals: 4
Clause #315 W:(-8 0) NOT x262 AND NOT x628 AND NOT x778
Number of literals: 3
Clause #316 W:(7 16) NOT x750 AND NOT x759 AND NOT x785 AND NOT x898 AND NOT x910
Number of literals: 5
Clause #317 W:(-31 46) NOT x262 AND NOT x297 AND NOT x356
Number of literals: 3
Clause #318 W:(0 -71) NOT x21 AND NOT x218 AND NOT x517 AND NOT x523 AND NOT x662 AND NOT x841
Number of literals: 6
Clause #319 W:(-18 -11) NOT x16 AND NOT x171 AND NOT x269 AND NOT x613 AND NOT x681 AND NOT x856 AND NOT x989
Number of literals: 7
Clause #320 W:(-8 25) NOT x42 AND NOT x407 AND NOT x502 AND NOT x508 AND NOT x726 AND NOT x750 AND NOT x1000
Number of literals: 7
Clause #321 W:(-1 2) NOT x287 AND NOT x355 AND NOT x394 AND NOT x400 AND NOT x453
Number of literals: 5
Clause #322 W:(-6 -4) NOT x506 AND NOT x975
Number of literals: 2
Clause #323 W:(2 33) x639 AND NOT x158 AND NOT x389 AND NOT x648 AND NOT x769 AND NOT x771
Number of literals: 6
Clause #324 W:(-5 15) NOT x11 AND NOT x139 AND NOT x263 AND NOT x356 AND NOT x547 AND NOT x592
Number of literals: 6
Clause #325 W:(23 67) NOT x713 AND NOT x873
Number of literals: 2
Clause #326 W:(14 41) x96 AND NOT x66 AND NOT x239 AND NOT x400 AND NOT x575 AND NOT x730 AND NOT x923 AND NOT x927 AND NOT x945
Number of literals: 9
Clause #327 W:(-14 11) NOT x95 AND NOT x147 AND NOT x491 AND NOT x596
Number of literals: 4
Clause #328 W:(-5 -23) NOT x9 AND NOT x64 AND NOT x76 AND NOT x337 AND NOT x454 AND NOT x595 AND NOT x978 AND NOT x1018
Number of literals: 8
Clause #329 W:(-38 7) NOT x149 AND NOT x195 AND NOT x526 AND NOT x633 AND NOT x758 AND NOT x795
Number of literals: 6
Clause #330 W:(-17 12) NOT x218 AND NOT x580 AND NOT x741
Number of literals: 3
Clause #331 W:(-6 2) NOT x0 AND NOT x123 AND NOT x387 AND NOT x847
Number of literals: 4
Clause #332 W:(22 1) NOT x39 AND NOT x249 AND NOT x451 AND NOT x559 AND NOT x647 AND NOT x889 AND NOT x1013
Number of literals: 7
Clause #333 W:(2 -41) 
Number of literals: 0
Clause #334 W:(-6 2) NOT x220 AND NOT x316 AND NOT x572 AND NOT x716 AND NOT x725 AND NOT x921
Number of literals: 6
Clause #335 W:(-5 -16) NOT x131 AND NOT x304 AND NOT x571 AND NOT x859
Number of literals: 4
Clause #336 W:(34 8) NOT x547 AND NOT x709 AND NOT x896 AND NOT x943
Number of literals: 4
Clause #337 W:(20 -17) NOT x301 AND NOT x333 AND NOT x474 AND NOT x707 AND NOT x721 AND NOT x846 AND NOT x1014
Number of literals: 7
Clause #338 W:(-12 -18) NOT x195 AND NOT x540 AND NOT x542 AND NOT x648 AND NOT x693 AND NOT x721 AND NOT x850 AND NOT x868
Number of literals: 8
Clause #339 W:(-17 15) NOT x26 AND NOT x647 AND NOT x989
Number of literals: 3
Clause #340 W:(-2 -7) NOT x611 AND NOT x766 AND NOT x842
Number of literals: 3
Clause #341 W:(-21 21) NOT x156 AND NOT x274 AND NOT x324 AND NOT x442 AND NOT x692
Number of literals: 5
Clause #342 W:(-22 -25) NOT x61 AND NOT x166 AND NOT x198 AND NOT x249 AND NOT x358 AND NOT x418
Number of literals: 6
Clause #343 W:(20 1) NOT x225
Number of literals: 1
Clause #344 W:(-32 16) NOT x285 AND NOT x577 AND NOT x797
Number of literals: 3
Clause #345 W:(-2 -2) NOT x68 AND NOT x691 AND NOT x777
Number of literals: 3
Clause #346 W:(-43 -17) NOT x6 AND NOT x159 AND NOT x312 AND NOT x709 AND NOT x710 AND NOT x921 AND NOT x990
Number of literals: 7
Clause #347 W:(22 11) NOT x116 AND NOT x456 AND NOT x487 AND NOT x754 AND NOT x866
Number of literals: 5
Clause #348 W:(-8 -3) NOT x98 AND NOT x100 AND NOT x252 AND NOT x609 AND NOT x706 AND NOT x716 AND NOT x736
Number of literals: 7
Clause #349 W:(-11 21) NOT x87 AND NOT x109 AND NOT x331 AND NOT x525 AND NOT x663 AND NOT x954
Number of literals: 6
Clause #350 W:(-1 2) NOT x62 AND NOT x89 AND NOT x318
Number of literals: 3
Clause #351 W:(-47 7) NOT x40 AND NOT x183 AND NOT x367 AND NOT x397 AND NOT x524
Number of literals: 5
Clause #352 W:(-49 32) NOT x44 AND NOT x54 AND NOT x240 AND NOT x348 AND NOT x368 AND NOT x565 AND NOT x672 AND NOT x760
Number of literals: 8
Clause #353 W:(34 -42) NOT x96 AND NOT x252
Number of literals: 2
Clause #354 W:(20 31) NOT x174 AND NOT x238 AND NOT x279 AND NOT x414 AND NOT x834 AND NOT x899
Number of literals: 6
Clause #355 W:(-17 0) NOT x150 AND NOT x265 AND NOT x306 AND NOT x603 AND NOT x777 AND NOT x857 AND NOT x967
Number of literals: 7
Clause #356 W:(-6 54) NOT x27 AND NOT x90 AND NOT x103 AND NOT x174
Number of literals: 4
Clause #357 W:(38 5) NOT x67 AND NOT x360 AND NOT x774
Number of literals: 3
Clause #358 W:(69 -52) x0 AND NOT x539 AND NOT x989 AND NOT x990
Number of literals: 4
Clause #359 W:(-13 -24) NOT x160 AND NOT x324 AND NOT x911
Number of literals: 3
Clause #360 W:(-41 -21) NOT x146 AND NOT x402 AND NOT x496 AND NOT x866
Number of literals: 4
Clause #361 W:(12 -7) NOT x902
Number of literals: 1
Clause #362 W:(1 3) NOT x231 AND NOT x353 AND NOT x871 AND NOT x988
Number of literals: 4
Clause #363 W:(-51 62) NOT x189 AND NOT x401 AND NOT x500 AND NOT x707 AND NOT x823
Number of literals: 5
Clause #364 W:(-1 38) NOT x0 AND NOT x344 AND NOT x488 AND NOT x823
Number of literals: 4
Clause #365 W:(0 27) NOT x361 AND NOT x605 AND NOT x660 AND NOT x794 AND NOT x880
Number of literals: 5
Clause #366 W:(30 -14) NOT x28 AND NOT x181 AND NOT x217 AND NOT x414 AND NOT x588 AND NOT x649 AND NOT x861
Number of literals: 7
Clause #367 W:(-19 -1) x1 AND NOT x162 AND NOT x315 AND NOT x392 AND NOT x404 AND NOT x438 AND NOT x760 AND NOT x814 AND NOT x944
Number of literals: 9
Clause #368 W:(-59 -1) NOT x912 AND NOT x969
Number of literals: 2
Clause #369 W:(21 20) NOT x258 AND NOT x264 AND NOT x329 AND NOT x336 AND NOT x430 AND NOT x998
Number of literals: 6
Clause #370 W:(24 -3) NOT x38 AND NOT x457
Number of literals: 2
Clause #371 W:(-12 -33) NOT x59 AND NOT x223 AND NOT x487 AND NOT x569 AND NOT x722 AND NOT x882
Number of literals: 6
Clause #372 W:(15 -12) NOT x0 AND NOT x25 AND NOT x210 AND NOT x997
Number of literals: 4
Clause #373 W:(-22 -11) NOT x523
Number of literals: 1
Clause #374 W:(-1 1) NOT x545
Number of literals: 1
Clause #375 W:(4 -54) NOT x710 AND NOT x789
Number of literals: 2
Clause #376 W:(199 -205) 
Number of literals: 0
Clause #377 W:(-66 22) NOT x170 AND NOT x363 AND NOT x620 AND NOT x923
Number of literals: 4
Clause #378 W:(24 19) NOT x320 AND NOT x360 AND NOT x710 AND NOT x853
Number of literals: 4
Clause #379 W:(0 13) NOT x30 AND NOT x229 AND NOT x312 AND NOT x449 AND NOT x499 AND NOT x766 AND NOT x838 AND NOT x880 AND NOT x896 AND NOT x988
Number of literals: 10
Clause #380 W:(36 14) NOT x166 AND NOT x308 AND NOT x797
Number of literals: 3
Clause #381 W:(23 14) NOT x75 AND NOT x133 AND NOT x386 AND NOT x647 AND NOT x805 AND NOT x875
Number of literals: 6
Clause #382 W:(-109 41) NOT x304 AND NOT x544 AND NOT x924
Number of literals: 3
Clause #383 W:(-12 -24) NOT x144 AND NOT x249 AND NOT x317 AND NOT x582 AND NOT x777
Number of literals: 5
Clause #384 W:(-30 34) NOT x266 AND NOT x543 AND NOT x586
Number of literals: 3
Clause #385 W:(4 -3) NOT x99 AND NOT x371 AND NOT x550
Number of literals: 3
Clause #386 W:(5 -3) NOT x399 AND NOT x487 AND NOT x902
Number of literals: 3
Clause #387 W:(-1 -32) NOT x178 AND NOT x397 AND NOT x419 AND NOT x605
Number of literals: 4
Clause #388 W:(-29 16) NOT x175 AND NOT x367 AND NOT x443 AND NOT x793 AND NOT x1005
Number of literals: 5
Clause #389 W:(-22 -2) NOT x662 AND NOT x702 AND NOT x776
Number of literals: 3
Clause #390 W:(-27 22) NOT x324 AND NOT x545 AND NOT x803
Number of literals: 3
Clause #391 W:(24 33) NOT x245 AND NOT x296 AND NOT x328 AND NOT x361 AND NOT x432 AND NOT x437 AND NOT x911 AND NOT x985
Number of literals: 8
Clause #392 W:(20 2) NOT x579 AND NOT x667 AND NOT x785 AND NOT x966
Number of literals: 4
Clause #393 W:(59 -31) x0 AND NOT x228
Number of literals: 2
Clause #394 W:(5 18) NOT x259 AND NOT x682
Number of literals: 2
Clause #395 W:(14 -8) NOT x268
Number of literals: 1
Clause #396 W:(2 18) NOT x23 AND NOT x63 AND NOT x577 AND NOT x735 AND NOT x934
Number of literals: 5
Clause #397 W:(-2 23) NOT x0 AND NOT x226 AND NOT x640 AND NOT x776 AND NOT x907
Number of literals: 5
Clause #398 W:(-12 16) NOT x5 AND NOT x235 AND NOT x524 AND NOT x648 AND NOT x770 AND NOT x961
Number of literals: 6
Clause #399 W:(-2 11) NOT x89 AND NOT x109 AND NOT x548 AND NOT x780 AND NOT x805 AND NOT x872
Number of literals: 6
Clause #400 W:(-71 -17) NOT x28 AND NOT x361 AND NOT x546 AND NOT x826
Number of literals: 4
Clause #401 W:(-1 12) NOT x119 AND NOT x491 AND NOT x642 AND NOT x666
Number of literals: 4
Clause #402 W:(197 -204) x2 AND NOT x306 AND NOT x587 AND NOT x599
Number of literals: 4
Clause #403 W:(-19 -20) NOT x268 AND NOT x857 AND NOT x886 AND NOT x905
Number of literals: 4
Clause #404 W:(12 28) NOT x228 AND NOT x539 AND NOT x549 AND NOT x663 AND NOT x708 AND NOT x982
Number of literals: 6
Clause #405 W:(79 -101) NOT x12 AND NOT x91 AND NOT x104 AND NOT x167 AND NOT x913 AND NOT x941
Number of literals: 6
Clause #406 W:(9 3) NOT x47 AND NOT x56 AND NOT x75 AND NOT x323 AND NOT x925 AND NOT x954
Number of literals: 6
Clause #407 W:(0 12) NOT x244 AND NOT x787
Number of literals: 2
Clause #408 W:(-21 -27) NOT x372 AND NOT x525 AND NOT x542 AND NOT x563 AND NOT x577
Number of literals: 5
Clause #409 W:(38 27) NOT x20 AND NOT x61 AND NOT x320 AND NOT x343 AND NOT x502 AND NOT x799 AND NOT x958 AND NOT x1016
Number of literals: 8
Clause #410 W:(-19 13) NOT x952 AND NOT x962
Number of literals: 2
Clause #411 W:(61 -63) 
Number of literals: 0
Clause #412 W:(67 -69) 
Number of literals: 0
Clause #413 W:(28 -24) NOT x0 AND NOT x238 AND NOT x390 AND NOT x420 AND NOT x554 AND NOT x819 AND NOT x1011
Number of literals: 7
Clause #414 W:(-1 28) NOT x231 AND NOT x367 AND NOT x422 AND NOT x518 AND NOT x555 AND NOT x622 AND NOT x713
Number of literals: 7
Clause #415 W:(21 27) x0 AND NOT x420 AND NOT x887
Number of literals: 3
Clause #416 W:(-12 16) NOT x233 AND NOT x308 AND NOT x310 AND NOT x585
Number of literals: 4
Clause #417 W:(-7 14) NOT x20 AND NOT x482 AND NOT x714
Number of literals: 3
Clause #418 W:(13 24) NOT x56 AND NOT x170 AND NOT x299 AND NOT x767
Number of literals: 4
Clause #419 W:(-5 -12) NOT x33 AND NOT x133 AND NOT x181 AND NOT x417 AND NOT x658 AND NOT x690 AND NOT x756
Number of literals: 7
Clause #420 W:(6 -3) NOT x189 AND NOT x884 AND NOT x896
Number of literals: 3
Clause #421 W:(-35 22) NOT x167 AND NOT x218 AND NOT x723 AND NOT x836 AND NOT x871 AND NOT x905
Number of literals: 6
Clause #422 W:(-5 6) NOT x263 AND NOT x494 AND NOT x571 AND NOT x676 AND NOT x920
Number of literals: 5
Clause #423 W:(13 18) NOT x323 AND NOT x480 AND NOT x693 AND NOT x910 AND NOT x921
Number of literals: 5
Clause #424 W:(8 0) NOT x361 AND NOT x518
Number of literals: 2
Clause #425 W:(18 -6) NOT x350 AND NOT x380 AND NOT x421 AND NOT x427 AND NOT x509 AND NOT x772 AND NOT x818
Number of literals: 7
Clause #426 W:(1 -41) NOT x43 AND NOT x85 AND NOT x572 AND NOT x661 AND NOT x766 AND NOT x994
Number of literals: 6
Clause #427 W:(24 -55) NOT x116 AND NOT x293 AND NOT x342 AND NOT x425 AND NOT x480 AND NOT x698
Number of literals: 6
Clause #428 W:(13 -28) NOT x758 AND NOT x945
Number of literals: 2
Clause #429 W:(2 21) NOT x215 AND NOT x228 AND NOT x315 AND NOT x511 AND NOT x762 AND NOT x826 AND NOT x846
Number of literals: 7
Clause #430 W:(-7 -10) NOT x178 AND NOT x194 AND NOT x918 AND NOT x921 AND NOT x975
Number of literals: 5
Clause #431 W:(-3 10) NOT x98 AND NOT x678
Number of literals: 2
Clause #432 W:(99 -144) 
Number of literals: 0
Clause #433 W:(-29 -7) NOT x919
Number of literals: 1
Clause #434 W:(29 2) NOT x911
Number of literals: 1
Clause #435 W:(32 4) NOT x341 AND NOT x696 AND NOT x919
Number of literals: 3
Clause #436 W:(0 -10) NOT x311 AND NOT x786
Number of literals: 2
Clause #437 W:(-4 2) NOT x294 AND NOT x372 AND NOT x573 AND NOT x915 AND NOT x1007
Number of literals: 5
Clause #438 W:(-9 14) NOT x115 AND NOT x185 AND NOT x400 AND NOT x504 AND NOT x912
Number of literals: 5
Clause #439 W:(7 58) x26 AND NOT x392 AND NOT x491
Number of literals: 3
Clause #440 W:(-64 19) NOT x53 AND NOT x196 AND NOT x227 AND NOT x364 AND NOT x385 AND NOT x892 AND NOT x910
Number of literals: 7
Clause #441 W:(-13 26) NOT x419 AND NOT x476 AND NOT x526 AND NOT x685 AND NOT x997
Number of literals: 5
Clause #442 W:(38 13) NOT x125 AND NOT x678 AND NOT x891 AND NOT x902 AND NOT x928
Number of literals: 5
Clause #443 W:(-19 -24) NOT x451 AND NOT x957
Number of literals: 2
Clause #444 W:(3 38) NOT x173 AND NOT x746 AND NOT x813 AND NOT x894
Number of literals: 4
Clause #445 W:(-8 -19) NOT x227 AND NOT x384 AND NOT x852 AND NOT x977
Number of literals: 4
Clause #446 W:(-19 -11) NOT x163 AND NOT x448 AND NOT x567 AND NOT x616 AND NOT x647 AND NOT x837 AND NOT x843 AND NOT x874 AND NOT x918
Number of literals: 9
Clause #447 W:(0 20) NOT x746
Number of literals: 1
Clause #448 W:(29 1) NOT x563 AND NOT x820
Number of literals: 2
Clause #449 W:(-33 15) NOT x78 AND NOT x410
Number of literals: 2
Clause #450 W:(4 -26) NOT x176 AND NOT x525 AND NOT x625 AND NOT x704 AND NOT x752 AND NOT x889 AND NOT x932 AND NOT x969
Number of literals: 8
Clause #451 W:(-10 -11) NOT x545 AND NOT x612 AND NOT x675 AND NOT x974
Number of literals: 4
Clause #452 W:(23 -36) x0 AND NOT x2 AND NOT x52 AND NOT x203 AND NOT x394 AND NOT x702 AND NOT x883 AND NOT x925
Number of literals: 8
Clause #453 W:(-20 -10) NOT x156 AND NOT x209 AND NOT x335 AND NOT x378 AND NOT x487 AND NOT x676 AND NOT x686 AND NOT x740 AND NOT x778 AND NOT x958
Number of literals: 10
Clause #454 W:(-9 -10) NOT x20 AND NOT x318 AND NOT x648 AND NOT x887
Number of literals: 4
Clause #455 W:(18 -16) NOT x430 AND NOT x479 AND NOT x488 AND NOT x624 AND NOT x701 AND NOT x706 AND NOT x922
Number of literals: 7
Clause #456 W:(-1 6) NOT x113 AND NOT x445 AND NOT x614 AND NOT x648 AND NOT x691
Number of literals: 5
Clause #457 W:(65 -36) x2 AND NOT x29 AND NOT x132 AND NOT x410 AND NOT x425 AND NOT x797 AND NOT x894
Number of literals: 7
Clause #458 W:(-3 40) NOT x117 AND NOT x121 AND NOT x163 AND NOT x299 AND NOT x613
Number of literals: 5
Clause #459 W:(14 24) NOT x213 AND NOT x437 AND NOT x764 AND NOT x958
Number of literals: 4
Clause #460 W:(9 16) NOT x82 AND NOT x95 AND NOT x190 AND NOT x327 AND NOT x579
Number of literals: 5
Clause #461 W:(-16 -5) NOT x145 AND NOT x635 AND NOT x748 AND NOT x767
Number of literals: 4
Clause #462 W:(-21 3) NOT x411 AND NOT x616 AND NOT x808 AND NOT x882
Number of literals: 4
Clause #463 W:(-14 7) NOT x261 AND NOT x511 AND NOT x753 AND NOT x794 AND NOT x816
Number of literals: 5
Clause #464 W:(-28 -7) NOT x26 AND NOT x227 AND NOT x241 AND NOT x384 AND NOT x468 AND NOT x511 AND NOT x526 AND NOT x600 AND NOT x957
Number of literals: 9
Clause #465 W:(-2 -38) NOT x0 AND NOT x338 AND NOT x708 AND NOT x712
Number of literals: 4
Clause #466 W:(-6 -38) NOT x84 AND NOT x171 AND NOT x286 AND NOT x386
Number of literals: 4
Clause #467 W:(7 -3) NOT x244 AND NOT x699 AND NOT x770 AND NOT x887
Number of literals: 4
Clause #468 W:(24 -54) NOT x675
Number of literals: 1
Clause #469 W:(-1 23) NOT x750 AND NOT x790 AND NOT x838 AND NOT x884
Number of literals: 4
Clause #470 W:(-6 -2) NOT x335 AND NOT x400 AND NOT x615 AND NOT x743 AND NOT x935
Number of literals: 5
Clause #471 W:(-21 -9) NOT x94 AND NOT x260 AND NOT x547 AND NOT x612 AND NOT x1022
Number of literals: 5
Clause #472 W:(11 3) NOT x12 AND NOT x455 AND NOT x646 AND NOT x751
Number of literals: 4
Clause #473 W:(32 -28) NOT x13 AND NOT x388 AND NOT x411 AND NOT x455 AND NOT x485 AND NOT x594 AND NOT x921
Number of literals: 7
Clause #474 W:(-2 27) NOT x313 AND NOT x371 AND NOT x413 AND NOT x1000
Number of literals: 4
Clause #475 W:(4 -13) NOT x73 AND NOT x101 AND NOT x592 AND NOT x636
Number of literals: 4
Clause #476 W:(-61 70) NOT x1 AND NOT x297 AND NOT x388 AND NOT x837 AND NOT x950
Number of literals: 5
Clause #477 W:(-18 -11) NOT x10 AND NOT x373 AND NOT x849
Number of literals: 3
Clause #478 W:(-32 18) NOT x223 AND NOT x300 AND NOT x349
Number of literals: 3
Clause #479 W:(-24 -3) NOT x150 AND NOT x288 AND NOT x554 AND NOT x782
Number of literals: 4
Clause #480 W:(-2 11) 
Number of literals: 0
Clause #481 W:(1 14) NOT x50 AND NOT x100 AND NOT x371 AND NOT x863 AND NOT x904
Number of literals: 5
Clause #482 W:(-12 -6) NOT x378 AND NOT x732 AND NOT x778 AND NOT x804 AND NOT x837 AND NOT x946 AND NOT x971
Number of literals: 7
Clause #483 W:(-27 -13) NOT x147 AND NOT x332 AND NOT x598 AND NOT x671 AND NOT x954
Number of literals: 5
Clause #484 W:(25 23) NOT x79 AND NOT x277 AND NOT x662 AND NOT x946 AND NOT x948
Number of literals: 5
Clause #485 W:(-36 15) NOT x0 AND NOT x151 AND NOT x263
Number of literals: 3
Clause #486 W:(-1 44) NOT x235 AND NOT x551 AND NOT x929 AND NOT x973 AND NOT x980 AND NOT x987
Number of literals: 6
Clause #487 W:(-65 -40) NOT x215 AND NOT x659 AND NOT x703 AND NOT x835 AND NOT x863 AND NOT x931
Number of literals: 6
Clause #488 W:(180 -146) x2
Number of literals: 1
Clause #489 W:(-3 13) NOT x321 AND NOT x337 AND NOT x537 AND NOT x608
Number of literals: 4
Clause #490 W:(34 -21) NOT x20 AND NOT x112 AND NOT x256 AND NOT x412
Number of literals: 4
Clause #491 W:(11 20) NOT x251 AND NOT x318 AND NOT x383 AND NOT x461
Number of literals: 4
Clause #492 W:(-7 0) NOT x559 AND NOT x733 AND NOT x737 AND NOT x852
Number of literals: 4
Clause #493 W:(-14 15) NOT x979 AND NOT x998 AND NOT x1015
Number of literals: 3
Clause #494 W:(4 67) NOT x476 AND NOT x611 AND NOT x636
Number of literals: 3
Clause #495 W:(-61 32) NOT x80 AND NOT x132 AND NOT x134 AND NOT x575 AND NOT x712 AND NOT x735
Number of literals: 6
Clause #496 W:(-5 5) NOT x187 AND NOT x292 AND NOT x309 AND NOT x502 AND NOT x663 AND NOT x759 AND NOT x1006
Number of literals: 7
Clause #497 W:(30 -7) NOT x2 AND NOT x68 AND NOT x181 AND NOT x455
Number of literals: 4
Clause #498 W:(-30 -12) NOT x208 AND NOT x230 AND NOT x375
Number of literals: 3
Clause #499 W:(-41 -20) NOT x56 AND NOT x402 AND NOT x413 AND NOT x556 AND NOT x575 AND NOT x663
Number of literals: 6
results: Results(training_time_s=922.0582501888275, inference_time_s=0.2263624668121338, memory_usage_mb=454.36328125, accuracy=0.742, precision=0.8037290004113533, recall=0.742, f1_score=0.6769478650990098)
confusion matrix: [[63, 256], [2, 679]]
reporting runs/2024-12-19T21:49:51/results.toml
reporting runs/2024-12-19T21:49:51/confusion_matrix.csv
reporting runs/2024-12-19T21:49:51/weights.csv
